<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git工作流程，与多人协作</title>
      <link href="/2025/04/19/Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%EF%BC%8C%E4%B8%8E%E5%A4%9A%E4%BA%BA%E5%8D%8F%E4%BD%9C/"/>
      <url>/2025/04/19/Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%EF%BC%8C%E4%B8%8E%E5%A4%9A%E4%BA%BA%E5%8D%8F%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Git工作流程，与多人协作"><a href="#Git工作流程，与多人协作" class="headerlink" title="Git工作流程，与多人协作"></a>Git工作流程，与多人协作</h1><p>Git是一款强大的版本控制系统，广泛用于软件开发中，帮助开发者管理代码的变化并实现多人协作。在实际的开发过程中，Git的工作流程会因项目规模、开发者人数等因素有所不同。本文将介绍从单人工作流程到多人团队工作流程的演变，并提供一些常见的实践。</p><h2 id="1-单人工作流程"><a href="#1-单人工作流程" class="headerlink" title="1. 单人工作流程"></a>1. 单人工作流程</h2><p>对于个人开发者来说，Git的使用主要集中在代码版本控制和备份。单人工作流程的核心目标是确保代码版本的管理与历史记录清晰。</p><h3 id="1-1-初始化仓库"><a href="#1-1-初始化仓库" class="headerlink" title="1.1 初始化仓库"></a>1.1 初始化仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建一个新的Git仓库。在该目录下初始化Git版本控制。</p><h3 id="1-2-克隆远程仓库"><a href="#1-2-克隆远程仓库" class="headerlink" title="1.2 克隆远程仓库"></a>1.2 克隆远程仓库</h3><p>如果是从远程仓库开始工作，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;repository_url&gt;</span><br></pre></td></tr></table></figure><p>克隆远程仓库到本地，方便后续操作。</p><h3 id="1-3-本地开发"><a href="#1-3-本地开发" class="headerlink" title="1.3 本地开发"></a>1.3 本地开发</h3><p>在本地工作时，开发者会创建新分支来开发新功能，避免直接修改主分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>在分支上进行开发，完成后提交更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Commit message&quot;</span></span><br></pre></td></tr></table></figure><h3 id="1-4-推送更新"><a href="#1-4-推送更新" class="headerlink" title="1.4 推送更新"></a>1.4 推送更新</h3><p>完成开发后，将本地分支推送到远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><h3 id="1-5-合并分支"><a href="#1-5-合并分支" class="headerlink" title="1.5 合并分支"></a>1.5 合并分支</h3><p>开发完成后，将分支合并回主分支（例如<code>main</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git merge &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>通过这种方式，个人开发者能够高效地管理代码版本，并能回溯历史修改。</p><h2 id="2-多人协作工作流程"><a href="#2-多人协作工作流程" class="headerlink" title="2. 多人协作工作流程"></a>2. 多人协作工作流程</h2><p>当多个开发者参与项目时，Git的工作流程需要更复杂的管理机制。这时，通常使用分支策略来管理并行开发。</p><h3 id="2-1-分支管理策略"><a href="#2-1-分支管理策略" class="headerlink" title="2.1 分支管理策略"></a>2.1 分支管理策略</h3><p>在多人协作中，最常见的分支管理策略是 <strong>Git Flow</strong> 或 <strong>GitHub Flow</strong>。</p><h4 id="Git-Flow"><a href="#Git-Flow" class="headerlink" title="Git Flow"></a>Git Flow</h4><p>Git Flow是一种基于分支的工作流程，常用于复杂项目的开发。其主要分支有：</p><ul><li>**<code>main</code>**：存放生产环境代码。</li><li>**<code>develop</code>**：用于日常开发的分支，集成所有新特性。</li><li>**<code>feature</code>**：每个新功能开发一个分支。</li><li>**<code>release</code>**：准备发布的分支。</li><li>**<code>hotfix</code>**：用于快速修复生产环境问题的分支。</li></ul><h4 id="GitHub-Flow"><a href="#GitHub-Flow" class="headerlink" title="GitHub Flow"></a>GitHub Flow</h4><p>GitHub Flow是一个更加简单的流程，适用于持续集成和快速迭代的开发环境。主要分支包括：</p><ul><li>**<code>main</code>**：存放生产环境代码。</li><li>**<code>feature</code>**：开发新特性时从<code>main</code>分支创建的功能分支。</li></ul><h3 id="2-2-协作开发流程"><a href="#2-2-协作开发流程" class="headerlink" title="2.2 协作开发流程"></a>2.2 协作开发流程</h3><h4 id="2-2-1-拉取最新代码"><a href="#2-2-1-拉取最新代码" class="headerlink" title="2.2.1 拉取最新代码"></a>2.2.1 拉取最新代码</h4><p>在开始开发前，首先确保本地代码与远程仓库同步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><h4 id="2-2-2-创建新功能分支"><a href="#2-2-2-创建新功能分支" class="headerlink" title="2.2.2 创建新功能分支"></a>2.2.2 创建新功能分支</h4><p>每个开发者在开发新功能时，应该从<code>main</code>（或<code>develop</code>）分支创建新的功能分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feature/your-feature-name</span><br></pre></td></tr></table></figure><h4 id="2-2-3-代码提交"><a href="#2-2-3-代码提交" class="headerlink" title="2.2.3 代码提交"></a>2.2.3 代码提交</h4><p>开发者在自己的功能分支上进行代码开发，并定期提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Implemented feature X&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-4-推送分支"><a href="#2-2-4-推送分支" class="headerlink" title="2.2.4 推送分支"></a>2.2.4 推送分支</h4><p>完成开发后，将本地分支推送到远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin feature/your-feature-name</span><br></pre></td></tr></table></figure><h4 id="2-2-5-Pull-Request（PR）"><a href="#2-2-5-Pull-Request（PR）" class="headerlink" title="2.2.5 Pull Request（PR）"></a>2.2.5 Pull Request（PR）</h4><p>在GitHub或GitLab等平台上，开发者需要创建一个Pull Request（PR），请求将自己的功能分支合并到<code>main</code>或<code>develop</code>分支。这时，团队中的其他成员会进行代码审查和讨论。</p><h4 id="2-2-6-代码审查与合并"><a href="#2-2-6-代码审查与合并" class="headerlink" title="2.2.6 代码审查与合并"></a>2.2.6 代码审查与合并</h4><p>审查通过后，负责人或开发者会将功能分支合并回主分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git merge feature/your-feature-name</span><br></pre></td></tr></table></figure><h4 id="2-2-7-解决冲突"><a href="#2-2-7-解决冲突" class="headerlink" title="2.2.7 解决冲突"></a>2.2.7 解决冲突</h4><p>如果出现冲突，Git会提示开发者手动解决冲突。解决冲突后，开发者需要再次提交合并的代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Resolved merge conflicts&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-版本发布"><a href="#2-3-版本发布" class="headerlink" title="2.3 版本发布"></a>2.3 版本发布</h3><p>当功能开发完成且经过测试，团队会发布新版本。通常，Git Flow会在<code>release</code>分支上进行版本打包，而GitHub Flow则直接在<code>main</code>分支上进行发布。</p><h4 id="2-3-1-Git-Flow发布"><a href="#2-3-1-Git-Flow发布" class="headerlink" title="2.3.1 Git Flow发布"></a>2.3.1 Git Flow发布</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git merge feature/your-feature-name</span><br><span class="line">git checkout main</span><br><span class="line">git merge develop</span><br><span class="line">git tag -a v1.0 -m <span class="string">&quot;Version 1.0&quot;</span></span><br><span class="line">git push origin main --tags</span><br></pre></td></tr></table></figure><h4 id="2-3-2-GitHub-Flow发布"><a href="#2-3-2-GitHub-Flow发布" class="headerlink" title="2.3.2 GitHub Flow发布"></a>2.3.2 GitHub Flow发布</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git merge feature/your-feature-name</span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><h3 id="2-4-持续集成与部署"><a href="#2-4-持续集成与部署" class="headerlink" title="2.4 持续集成与部署"></a>2.4 持续集成与部署</h3><p>在多人协作中，通常会设置CI&#x2F;CD（持续集成与持续部署）流程，自动化测试和部署，确保每次代码更改都不会影响到现有功能。</p><h2 id="3-结论"><a href="#3-结论" class="headerlink" title="3. 结论"></a>3. 结论</h2><p>Git的工作流程根据团队规模和项目需求的不同而变化。从单人开发到多人协作，合理的分支管理和代码审查可以有效提高开发效率，减少代码冲突和错误的发生。无论是使用Git Flow还是GitHub Flow，核心目标是实现高效的团队合作与代码版本控制。在实际操作中，团队成员之间的沟通和协作同样至关重要。🚀</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聊一聊本地部署的DeepSeek性能如何？</title>
      <link href="/2025/03/13/%E8%81%8A%E4%B8%80%E8%81%8A%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E7%9A%84DeepSeek%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95%EF%BC%9F/"/>
      <url>/2025/03/13/%E8%81%8A%E4%B8%80%E8%81%8A%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E7%9A%84DeepSeek%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="聊一聊本地部署的DeepSeek性能如何？"><a href="#聊一聊本地部署的DeepSeek性能如何？" class="headerlink" title="聊一聊本地部署的DeepSeek性能如何？"></a>聊一聊本地部署的DeepSeek性能如何？</h1><p>在这几天，我部署了Deepseek-R1:1.5b版本</p><p>我试了一下，速度还可以。我的CPU是6核，32G内存。</p><p>但是跳过了思考过程，这一点美中不足，而且还会时不时抽风，想用来体验可以，但是用在生产环境可能会被老板打死😂</p><p>给大家看看</p><blockquote><p>C:\Users\Ollama&gt;ollama run deepseek-r1:1.5b</p><blockquote><blockquote><blockquote><p>你是谁？<br><think></p></blockquote></blockquote></blockquote></think><p>您好！我是由中国的深度求索（DeepSeek）公司开发的智能助手DeepSeek-R1。如您有任何任何问题，我会尽我所能为您提供帮助。</p><blockquote><blockquote><blockquote></blockquote></blockquote></blockquote></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> DeepSeek </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超简单 本地部署DeepSeek-R1</title>
      <link href="/2025/03/11/%E8%B6%85%E7%AE%80%E5%8D%95-%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/"/>
      <url>/2025/03/11/%E8%B6%85%E7%AE%80%E5%8D%95-%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/</url>
      
        <content type="html"><![CDATA[<p>下面是一篇更为细致化的教程文章，标题为《超简单 本地部署DeepSeek-R1（详细版）》，逐步指导你从环境准备到最终部署测试的全过程，确保每一步都清晰明了。</p><hr><h1 id="超简单-本地部署DeepSeek-R1（详细版）"><a href="#超简单-本地部署DeepSeek-R1（详细版）" class="headerlink" title="超简单 本地部署DeepSeek-R1（详细版）"></a>超简单 本地部署DeepSeek-R1（详细版）</h1><p>本文将详细介绍如何使用Ollama平台在本地部署DeepSeek-R1模型。每个步骤都包含详细的操作说明、示例命令和注意事项，帮助你顺利完成部署并进行后续测试和优化。</p><hr><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h2><h3 id="1-1-操作系统要求"><a href="#1-1-操作系统要求" class="headerlink" title="1.1 操作系统要求"></a>1.1 操作系统要求</h3><ul><li><strong>建议平台</strong>：macOS、Linux，或者在Windows上使用WSL&#x2F;Docker环境。</li><li><strong>说明</strong>：大部分命令在Unix系统（macOS&#x2F;Linux）下执行更为便捷，Windows用户建议提前配置WSL或Docker。</li></ul><h3 id="1-2-网络环境"><a href="#1-2-网络环境" class="headerlink" title="1.2 网络环境"></a>1.2 网络环境</h3><ul><li><strong>要求</strong>：确保网络稳定，能够顺利访问Ollama官方镜像仓库。</li><li><strong>提示</strong>：如果网络环境较差，可提前配置代理或使用加速镜像。</li></ul><h3 id="1-3-必要软件工具"><a href="#1-3-必要软件工具" class="headerlink" title="1.3 必要软件工具"></a>1.3 必要软件工具</h3><ul><li><strong>Ollama客户端</strong>：请前往<a href="https://ollama.com/">Ollama官网</a>下载安装最新版本。</li><li><strong>Docker（可选）</strong>：如果希望在容器环境下运行，需提前安装并配置好Docker。</li><li><strong>终端&#x2F;命令行工具</strong>：macOS&#x2F;Linux系统自带终端，Windows建议使用PowerShell或WSL终端。</li></ul><hr><h2 id="2-安装和验证Ollama"><a href="#2-安装和验证Ollama" class="headerlink" title="2. 安装和验证Ollama"></a>2. 安装和验证Ollama</h2><h3 id="2-1-下载与安装"><a href="#2-1-下载与安装" class="headerlink" title="2.1 下载与安装"></a>2.1 下载与安装</h3><ol><li><p>访问 <a href="https://ollama.com/">Ollama官网</a>。</p></li><li><p>根据你的操作系统选择对应的安装包进行下载。</p></li><li><p>按照官网安装指南进行安装：</p><ul><li><p><strong>macOS</strong>：通常为拖拽应用到“应用程序”文件夹。</p></li><li><p>Linux</p><p>：可能需要使用命令行安装，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> dpkg -i ollama_xxx.deb</span><br></pre></td></tr></table></figure></li><li><p><strong>Windows</strong>：直接运行安装程序或通过WSL安装。</p></li></ul></li></ol><h3 id="2-2-验证安装"><a href="#2-2-验证安装" class="headerlink" title="2.2 验证安装"></a>2.2 验证安装</h3><ol><li><p>打开终端或命令行工具。</p></li><li><p>输入以下命令检查Ollama是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure></li><li><p><strong>预期结果</strong>：显示Ollama的版本号，如 <code>ollama version 1.2.3</code>。若无响应或报错，请检查安装步骤是否正确完成。</p></li></ol><hr><h2 id="3-下载DeepSeek-R1镜像"><a href="#3-下载DeepSeek-R1镜像" class="headerlink" title="3. 下载DeepSeek-R1镜像"></a>3. 下载DeepSeek-R1镜像</h2><h3 id="3-1-拉取镜像"><a href="#3-1-拉取镜像" class="headerlink" title="3.1 拉取镜像"></a>3.1 拉取镜像</h3><ol><li><p>打开终端，确保网络连接正常。</p></li><li><p>执行以下命令从Ollama镜像仓库拉取DeepSeek-R1镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama pull deepseek-r1</span><br></pre></td></tr></table></figure></li><li><p>注意事项</p><p>：</p><ul><li>下载过程中，终端会显示下载进度和日志信息。</li><li>下载速度取决于网络状况，建议耐心等待下载完成。</li></ul></li></ol><h3 id="3-2-检查下载结果"><a href="#3-2-检查下载结果" class="headerlink" title="3.2 检查下载结果"></a>3.2 检查下载结果</h3><ol><li><p>下载完成后，可使用以下命令查看已拉取的镜像列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama list</span><br></pre></td></tr></table></figure></li><li><p><strong>预期结果</strong>：列表中应包含<code>deepseek-r1</code>镜像，确认镜像名称和标签信息。</p></li></ol><hr><h2 id="4-启动DeepSeek-R1服务"><a href="#4-启动DeepSeek-R1服务" class="headerlink" title="4. 启动DeepSeek-R1服务"></a>4. 启动DeepSeek-R1服务</h2><h3 id="4-1-运行模型服务"><a href="#4-1-运行模型服务" class="headerlink" title="4.1 运行模型服务"></a>4.1 运行模型服务</h3><ol><li><p>在终端中输入命令启动DeepSeek-R1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1</span><br></pre></td></tr></table></figure></li><li><p>指定端口（可选）</p><p>：</p><ul><li><p>若希望模型服务运行在特定端口（如8080），可加上参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1 --port 8080</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>说明</strong>：启动命令会在终端中输出运行日志，包含启动过程、服务地址及监听端口信息。</p></li></ol><h3 id="4-2-日志监控与验证"><a href="#4-2-日志监控与验证" class="headerlink" title="4.2 日志监控与验证"></a>4.2 日志监控与验证</h3><ol><li>仔细观察终端日志，确保没有报错信息。</li><li>常见日志信息包括：<ul><li>模型加载成功提示</li><li>端口监听状态，如 “Server is running on port 8080”</li></ul></li><li>若出现错误提示（如端口占用、内存不足），请参考日志信息逐一排查问题。</li></ol><hr><h2 id="5-测试部署效果"><a href="#5-测试部署效果" class="headerlink" title="5. 测试部署效果"></a>5. 测试部署效果</h2><h3 id="5-1-浏览器访问测试"><a href="#5-1-浏览器访问测试" class="headerlink" title="5.1 浏览器访问测试"></a>5.1 浏览器访问测试</h3><ol><li><p>打开浏览器，输入以下地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure><p>（如果使用了其他端口，请替换为相应端口号）</p></li><li><p><strong>预期结果</strong>：页面上显示DeepSeek-R1的欢迎信息或模型接口文档。</p></li></ol><h3 id="5-2-命令行测试"><a href="#5-2-命令行测试" class="headerlink" title="5.2 命令行测试"></a>5.2 命令行测试</h3><ol><li><p>在终端中使用curl进行简单健康检查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8080/health</span><br></pre></td></tr></table></figure></li><li><p><strong>预期结果</strong>：返回类似 “ok” 或 JSON 格式的健康状态信息。</p></li><li><p>调试提示</p><p>：</p><ul><li>如果无响应或返回错误，请检查防火墙设置、端口映射是否正确配置。</li></ul></li></ol><hr><h2 id="6-进阶配置与优化"><a href="#6-进阶配置与优化" class="headerlink" title="6. 进阶配置与优化"></a>6. 进阶配置与优化</h2><h3 id="6-1-修改配置文件"><a href="#6-1-修改配置文件" class="headerlink" title="6.1 修改配置文件"></a>6.1 修改配置文件</h3><ol><li>部署完成后，查看DeepSeek-R1的默认配置文件（路径可能为<code>/etc/deepseek/config.yaml</code>或项目内自带配置）。</li><li>根据实际需求调整参数，例如：<ul><li>内存分配</li><li>并发请求数</li><li>日志记录级别</li></ul></li><li>保存配置文件后，重新启动服务使配置生效。</li></ol><h3 id="6-2-Docker部署（可选）"><a href="#6-2-Docker部署（可选）" class="headerlink" title="6.2 Docker部署（可选）"></a>6.2 Docker部署（可选）</h3><ol><li><p>如果希望使用Docker部署：</p><ul><li><p>确保Docker已正确安装并启动。</p></li><li><p>使用以下命令拉取并运行DeepSeek-R1 Docker镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull ollama/deepseek-r1</span><br><span class="line">docker run -d -p 8080:8080 ollama/deepseek-r1</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>说明</strong>：Docker方式可更好地管理依赖和环境，同时方便资源隔离。</p></li></ol><h3 id="6-3-性能优化"><a href="#6-3-性能优化" class="headerlink" title="6.3 性能优化"></a>6.3 性能优化</h3><ol><li><p>资源调优</p><p>：</p><ul><li>若服务在高并发场景下负载较高，建议调整系统资源（CPU、内存）分配。</li><li>在Docker中，可使用<code>--cpus</code>和<code>--memory</code>参数进行限制。</li></ul></li><li><p>日志与监控</p><p>：</p><ul><li>配置第三方监控工具（如Prometheus、Grafana）对服务进行监控。</li><li>设置日志轮转和归档，方便后续问题排查。</li></ul></li></ol><hr><h2 id="7-常见问题排查"><a href="#7-常见问题排查" class="headerlink" title="7. 常见问题排查"></a>7. 常见问题排查</h2><h3 id="7-1-网络问题"><a href="#7-1-网络问题" class="headerlink" title="7.1 网络问题"></a>7.1 网络问题</h3><ul><li><p><strong>现象</strong>：下载镜像时速度慢或中断。</p></li><li><p>解决方法</p><p>：</p><ul><li>检查网络连接，确保无代理或防火墙干扰。</li><li>尝试切换网络环境或配置网络加速。</li></ul></li></ul><h3 id="7-2-服务启动失败"><a href="#7-2-服务启动失败" class="headerlink" title="7.2 服务启动失败"></a>7.2 服务启动失败</h3><ul><li><p><strong>现象</strong>：执行<code>ollama run</code>时出现错误日志。</p></li><li><p>可能原因</p><p>：</p><ul><li>端口冲突：指定端口已被其他服务占用。</li><li>内存不足：模型加载时占用资源超出当前系统配置。</li></ul></li><li><p>解决方法</p><p>：</p><ul><li>尝试更换未使用的端口。</li><li>检查系统资源，适当增加内存或优化其他运行服务。</li></ul></li></ul><h3 id="7-3-访问无响应"><a href="#7-3-访问无响应" class="headerlink" title="7.3 访问无响应"></a>7.3 访问无响应</h3><ul><li><p><strong>现象</strong>：浏览器访问服务地址时页面无显示。</p></li><li><p>可能原因</p><p>：</p><ul><li>服务未完全启动或已崩溃。</li><li>防火墙或安全组未开放对应端口。</li></ul></li><li><p>解决方法</p><p>：</p><ul><li>查看终端日志，确认服务状态。</li><li>检查并放行相关端口（如8080）。</li></ul></li></ul><hr><h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>通过本文详细步骤，你已经学会如何使用Ollama在本地部署DeepSeek-R1模型。整个过程包括：</p><ul><li>环境准备（操作系统、网络、必备工具）；</li><li>安装与验证Ollama客户端；</li><li>下载并确认DeepSeek-R1镜像；</li><li>启动服务并进行日志监控；</li><li>通过浏览器和命令行测试服务是否正常；</li><li>进行进阶配置和性能优化；</li><li>排查常见问题并提供解决方案。</li></ul><p>部署成功后，你可以将DeepSeek-R1应用于文本搜索、语义理解等场景中，并根据需求进一步优化系统性能。如遇到疑问或问题，可参考官方文档或相关技术社区获取支持。</p><p>希望这篇详细教程能帮助你轻松完成本地部署，开启全新的智能搜索体验！</p>]]></content>
      
      
      
        <tags>
            
            <tag> DeepSeek </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今年我们是金奖！</title>
      <link href="/2025/03/02/%E4%BB%8A%E5%B9%B4%E6%88%91%E4%BB%AC%E6%98%AF%E9%87%91%E5%A5%96%EF%BC%81/"/>
      <url>/2025/03/02/%E4%BB%8A%E5%B9%B4%E6%88%91%E4%BB%AC%E6%98%AF%E9%87%91%E5%A5%96%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h1 id="2025-年广西职业院校技能大赛中职组《大数据应用与服务》赛事感悟"><a href="#2025-年广西职业院校技能大赛中职组《大数据应用与服务》赛事感悟" class="headerlink" title="2025 年广西职业院校技能大赛中职组《大数据应用与服务》赛事感悟"></a>2025 年广西职业院校技能大赛中职组《大数据应用与服务》赛事感悟</h1><p>随着 2025 年广西职业院校技能大赛中职组《大数据应用与服务》赛事圆满落幕，回顾这段历程，犹如经历了一场充满挑战与机遇的征程，其中的点点滴滴都值得深入回味与总结。</p><h2 id="前言：团队协作与教师指导的关键作用"><a href="#前言：团队协作与教师指导的关键作用" class="headerlink" title="前言：团队协作与教师指导的关键作用"></a>前言：团队协作与教师指导的关键作用</h2><p>本次能够荣获佳绩，团队成员间的紧密协作以及指导教师的悉心付出是不可或缺的重要因素。在比赛现场设备调试阶段，设备突发故障，状况频发。然而，团队成员凭借沉稳的心态与扎实的专业技能，迅速排查问题，通过有效的沟通与协作，及时化解了危机，确保了比赛的顺利推进。在整个比赛过程中，团队成员各司其职又相互配合，犹如精密运转的机器部件，每一个环节都至关重要，共同构成了一个有机的整体，为比赛的成功奠定了坚实基础。</p><p>指导教师团队同样功不可没。自获悉赛制改革伊始，教师们便全身心投入到备赛指导工作中，为项目的推进精心谋划、不辞辛劳。即便是在阖家团圆的除夕之夜，老师们仍坚守岗位，为我们精心打磨项目方案，从 PPT 的优化到文稿的细致雕琢，每一个细节都凝聚着老师们的心血。可以说，在我们取得的成绩中，指导教师的辛勤付出占据了关键比重，他们无微不至的关怀与专业指导，如同灯塔照亮了我们前行的道路，助力我们在竞赛中不断突破自我。</p><h2 id="备赛历程：专业成长与团队奋进之路"><a href="#备赛历程：专业成长与团队奋进之路" class="headerlink" title="备赛历程：专业成长与团队奋进之路"></a>备赛历程：专业成长与团队奋进之路</h2><p>回顾个人的专业成长历程，对计算机的浓厚兴趣早在初中阶段便已萌芽。初一时期，我便对服务器相关技术展现出强烈的探索欲望，凭借着对知识的执着追求与自主钻研精神，不断尝试解决遇到的各类技术难题。在搭建服务器的过程中，我积极承担起服务器运维与管理的职责，深入研究每一个插件的代码逻辑，致力于提升服务器性能与用户体验，吸引了众多玩家的参与。这段经历不仅锻炼了我的实践能力，也为日后涉足大数据领域积累了宝贵经验。</p><p>2023 年，我步入中职学习阶段，有幸遇到了一位对我职业生涯影响深远的导师。在她的引导下，我开始接触 Linux 系统，并迅速被其强大的功能与灵活的架构所吸引，从此开启了在大数据领域的探索之旅。同年年底，在导师的推荐下，我顺利加入了《大数据应用与服务》项目团队，结识了一群志同道合的伙伴，为后续的团队协作与竞赛征程奠定了良好基础。</p><p>2024 年，我们首次参与技能大赛。尽管由于备赛时间有限，团队配合尚不够成熟，仅取得了二等奖的成绩，但这一经历也让我们深刻认识到自身的不足与差距。导师的鼓励与支持成为了我们继续前行的动力源泉，激励我们在后续的备赛过程中不断提升自我、完善团队协作。</p><p>在备赛过程中，我们遇到了诸多技术难题与挑战，但在指导教师的耐心指导与团队成员的共同努力下，逐一攻克了难关。凭借在过往实践中积累的管理经验，我有幸担任团队队长，肩负起项目核心成员的重任。这不仅是一份信任，更是一份责任，促使我不断提升自身能力，带领团队共同进步。</p><p>2025 年，我们再次踏上技能大赛的舞台。经过一年的刻苦训练与精心准备，团队成员的专业技能与协作能力得到了显著提升。在本次比赛中，我们成功斩获金奖，这一成绩的取得既是对我们团队努力的高度认可，也是对指导教师辛勤付出的最好回报。在等待成绩公布的过程中，团队成员们都承受着巨大的心理压力，但当最终喜讯传来，那一刻的激动与喜悦难以言表，所有的付出与努力都化作了满满的成就感。</p><hr><p>最后，衷心祝愿所有参与 3 月份比赛的选手们能够充分发挥自身实力，取得优异成绩，在职业技能的舞台上绽放属于自己的光彩。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据应用与服务 </tag>
            
            <tag> 广西职业院校技能大赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈 2025-2-24</title>
      <link href="/2025/02/24/%E6%9D%82%E8%B0%88-2025-2-24/"/>
      <url>/2025/02/24/%E6%9D%82%E8%B0%88-2025-2-24/</url>
      
        <content type="html"><![CDATA[<h3 id="杂谈-2025-2-24"><a href="#杂谈-2025-2-24" class="headerlink" title="杂谈 2025-2-24"></a>杂谈 2025-2-24</h3><blockquote><p>距离上次的杂谈已经过去了 11 day 。最近大概率将不会进行博客的技术文档更新，持续到月底。awa</p></blockquote><hr><p><strong>信息技术篇：</strong></p><ol><li>近期湖北某高中生使用 Vivo X70 自制了一台外折叠的手机，花费大约2000元。</li></ol><p>我对此的看法是中肯评价，先不说他做出来的东西有没有意义。就凭他的探索是很值得我钦佩的。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈 - 2025/2/13</title>
      <link href="/2025/02/13/%E6%9D%82%E8%B0%88-2025-2-13/"/>
      <url>/2025/02/13/%E6%9D%82%E8%B0%88-2025-2-13/</url>
      
        <content type="html"><![CDATA[<h3 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h3><blockquote><p>最近好久没有更新博客了，闲来无事更新一下我的博客，qwq</p></blockquote><p>​先聊聊为什么我最近没有更新博客了？从上一年的寒假到目前为止，我每天的事情都很多，不是忙这个就是忙那个的。导致我根本没有时间分心来写博客。</p><p>​那为什么现在就有时间来写了呢？答案当然是“摸鱼”啦！嘻嘻(●’◡’●)</p><p>目前博客的整体内容很混杂，在本次过后，我将删除一些博客文章。优化网站质量，虽然也不知道写了有没有人看awa。但是给我自己看就好啦！</p><hr><p>信息技术篇：</p><p>最近网上吹的 DeepSeek Ai智能助手我体验了几天，发现也确实不错，输出的Token也很高，但是单秒输出我”个人“感觉还是相比于ChatGPT差点意思？不知道是不是这几天DeepSeek网站被打的原因，经常无法回复我的问题。这让我很苦恼，我也想过在本地部署一个DeepSeek，奈何设备算力不足，及时勉勉强强用上，还是蒸馏版的，还不如不要。</p><hr><p>生产力设备篇（手机）：</p><p>在2024年底我的主力机从 iPhone 11 Pro Max 换成了 iPhone 14 Pro Max。</p><p>在当时纠结换哪一款手机的时候 ，我从iPhone 15 ，15 Plus 与  14 Pro Max 之中纠结了许久，一是因为15是基础款，没有长焦镜头，屏幕也很小。Plus则是没有屏幕小的缺点，但是他们与Pro Max旗舰机型的差别就在于缺少了 “ProMotion 自适应刷新率技术 与 长焦镜头 还有全天候显示” 不得不说，苹果是会做生意的。精准的刀法，砍掉了120hz。虽然说120hz可有可无，但是对于我来说 “我可以不用，但是我不能没有”</p><p>在此纠结上，我还是入手了 iPhone 14 Pro Max </p><p>从 iPhone 11 Pro Max 换到 iPhone 14 Pro Max 我的第一感觉是，屏幕突然变大了一圈，因为11 ProMax是6.5英寸，而14ProMax是6.7英寸。处理器也从A13 仿生升级到了A16仿生（14ProMax与15，15 Plus用的是同一款）并且我也终于体验到了主摄 4800 万像素的魅力，确实要比我的11 Pro Max好了不止一点，并且还有灵动岛功能。</p><p>从使用体验来说，我的感觉是“大差不差”除了灵动岛功能和直角边框能让我分辨它是14 Pro Max之外，其他的我个人感觉与11 Pro Max 真的是没有区别，我也不是什么专业的摄影爱好者，只是喜欢记录生活。</p><p>手感来说，换到14 Pro Max重量那真是非常重的了，达到了240 克，相比之下我的11 Pro Max才226 克，而最新的 iPhone 16 Pro Max也才227 克？真的是让我又爱又恨。 </p><hr><p>好了，今天的杂谈就这么点吧~</p><p>明天又要继续忙了，心碎。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>祝各位蛇年大吉!</title>
      <link href="/2025/02/05/%E7%A5%9D%E5%90%84%E4%BD%8D%E8%9B%87%E5%B9%B4%E5%A4%A7%E5%90%89/"/>
      <url>/2025/02/05/%E7%A5%9D%E5%90%84%E4%BD%8D%E8%9B%87%E5%B9%B4%E5%A4%A7%E5%90%89/</url>
      
        <content type="html"><![CDATA[<h1 id="祝各位2025年蛇年大吉！"><a href="#祝各位2025年蛇年大吉！" class="headerlink" title="祝各位2025年蛇年大吉！"></a>祝各位2025年蛇年大吉！</h1><p>（迟到的新年祝福QAQ）</p><p>新的一年祝大家蛇年大吉，万事如意，恭喜发财，顺顺利利，平平安安，快快乐乐！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 新年祝福 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉系统的兼容性</title>
      <link href="/2025/01/18/%E6%AC%A7%E6%8B%89%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
      <url>/2025/01/18/%E6%AC%A7%E6%8B%89%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>LTS（Long-Term Support，长期支持）版本的欧拉（OpenEuler）和普通版本在维护周期、稳定性以及功能特性上有显著区别。以下是它们的主要区别以及在大数据场景下的适用性分析：</p><hr><h3 id="LTS版本-vs-普通版本：主要区别"><a href="#LTS版本-vs-普通版本：主要区别" class="headerlink" title="LTS版本 vs 普通版本：主要区别"></a><strong>LTS版本 vs 普通版本：主要区别</strong></h3><table><thead><tr><th><strong>特性</strong></th><th><strong>LTS版本</strong></th><th><strong>普通版本</strong></th></tr></thead><tbody><tr><td><strong>维护周期</strong></td><td>长期支持（通常3-5年甚至更长）。</td><td>短期支持（通常6个月到1年）。</td></tr><tr><td><strong>稳定性</strong></td><td>更加稳定，主要聚焦于修复Bug和安全更新。</td><td>新功能更多，但可能包含实验性或不稳定的特性。</td></tr><tr><td><strong>功能特性</strong></td><td>优先保证系统的稳定性和兼容性，功能较为成熟。</td><td>新功能会更快引入，适合尝试新技术或新功能。</td></tr><tr><td><strong>适用场景</strong></td><td>适用于生产环境、企业应用和关键任务场景。</td><td>适合研发环境、技术验证或非关键任务场景。</td></tr><tr><td><strong>安全性</strong></td><td>定期发布安全补丁，重视安全性和可靠性。</td><td>可能存在较多功能性更新，安全性较为次要。</td></tr><tr><td><strong>更新频率</strong></td><td>较低，只提供必要的更新（安全补丁和关键修复）。</td><td>更新频率较高，包含新功能和特性。</td></tr></tbody></table><hr><h3 id="哪个更适合用在大数据？"><a href="#哪个更适合用在大数据？" class="headerlink" title="哪个更适合用在大数据？"></a><strong>哪个更适合用在大数据？</strong></h3><p>在大数据场景下选择OpenEuler的版本，主要取决于你的使用场景和需求：</p><h4 id="适用LTS版本的大数据场景"><a href="#适用LTS版本的大数据场景" class="headerlink" title="适用LTS版本的大数据场景"></a><strong>适用LTS版本的大数据场景</strong></h4><ol><li><strong>生产环境</strong><ul><li>如果你的大数据系统是用在企业生产环境中，数据处理任务必须长期运行并保持高可靠性，LTS版本是首选。</li><li>LTS版本提供更长的支持周期和安全性，减少了频繁升级系统的需要，从而提高了稳定性和可维护性。</li></ul></li><li><strong>关键任务场景</strong><ul><li>在对系统停机容忍度低的场景（如银行、政府、医疗行业的大数据应用），LTS版本的稳定性和安全性非常重要。</li></ul></li><li><strong>集群规模大</strong><ul><li>在大规模分布式集群中，稳定性比追求最新功能更重要，LTS版本可以减少因系统更新导致的兼容性问题。</li></ul></li></ol><hr><h4 id="适用普通版本的大数据场景"><a href="#适用普通版本的大数据场景" class="headerlink" title="适用普通版本的大数据场景"></a><strong>适用普通版本的大数据场景</strong></h4><ol><li><strong>研发和测试</strong><ul><li>如果你需要测试最新的Hadoop版本或其他大数据框架，并希望使用OpenEuler的新功能和技术，普通版本会更适合。</li></ul></li><li><strong>前沿技术研究</strong><ul><li>对于需要快速验证新技术（如大数据与容器结合、AI训练与分析）的场景，普通版本可以提供更多功能和工具支持。</li></ul></li><li><strong>非关键任务</strong><ul><li>如果大数据系统只是用来处理一些非关键任务（如内部数据分析或实验性项目），普通版本也能胜任。</li></ul></li></ol><hr><h3 id="推荐：选择LTS版本用于大数据的理由"><a href="#推荐：选择LTS版本用于大数据的理由" class="headerlink" title="推荐：选择LTS版本用于大数据的理由"></a><strong>推荐：选择LTS版本用于大数据的理由</strong></h3><ul><li><strong>稳定性优先</strong>：大数据平台如Hadoop、Spark等通常需要长时间稳定运行，而LTS版本能更好地支持这些需求。</li><li><strong>长期支持</strong>：减少因系统频繁升级带来的兼容性问题和管理成本。</li><li><strong>安全性</strong>：大数据处理经常涉及敏感数据，LTS版本的安全补丁更加及时可靠。</li></ul><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><ul><li>如果你的大数据应用<strong>面向生产环境</strong>，并且需要长期运行和高可靠性，推荐使用<strong>LTS版本</strong>的OpenEuler。</li><li>如果你的需求更偏向于<strong>研发、测试</strong>或探索<strong>新技术</strong>，可以考虑使用普通版本来体验新功能。</li></ul><p>大多数企业和组织在实际应用中会选择LTS版本来运行大数据集群，因为它更加稳定和安全。</p>]]></content>
      
      
      
        <tags>
            
            <tag> OpenEuler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PriorityQueue队列</title>
      <link href="/2025/01/02/PriorityQueue%E9%98%9F%E5%88%97/"/>
      <url>/2025/01/02/PriorityQueue%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="PriorityQueue队列"><a href="#PriorityQueue队列" class="headerlink" title="PriorityQueue队列"></a>PriorityQueue队列</h3><ol><li><p><strong>数据结构：<code>PriorityQueue</code></strong></p><ul><li><code>PriorityQueue</code> 是 Java 提供的一个基于堆实现的优先队列。</li><li>它的特点是每次从队列中取出的元素总是<strong>优先级最高的元素</strong>。</li></ul></li><li><p><strong>类型参数：<code>Map.Entry&lt;String, Integer&gt;</code></strong></p><ul><li>这个优先队列存储的元素类型是 <code>Map.Entry&lt;String, Integer&gt;</code>。</li><li><code>Map.Entry&lt;String, Integer&gt;</code> 通常用于表示键值对，比如从一个 <code>Map</code>（如 <code>HashMap</code> 或 <code>TreeMap</code>）中获取的条目。</li></ul></li><li><p><strong>构造器参数：<code>Comparator</code></strong></p><ul><li>优先队列默认是<strong>最小堆</strong>（按自然顺序从小到大排列），但可以通过传递一个自定义的比较器（<code>Comparator</code>）来指定排序规则。</li><li><code>(a, b) -&gt; b.getValue() - a.getValue()</code> 是一个 lambda 表达式，用于定义自定义比较器。</li></ul></li><li><p><strong>比较逻辑：<code>(a, b) -&gt; b.getValue() - a.getValue()</code></strong></p><ul><li><p>这里的 <code>a</code> 和 <code>b</code> 是两个 <code>Map.Entry&lt;String, Integer&gt;</code> 类型的元素。</p></li><li><pre><code>b.getValue() - a.getValue()<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">表示按 </span><br><span class="line"></span><br></pre></td></tr></table></figure>Entry<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">的值（</span><br><span class="line"></span><br></pre></td></tr></table></figure>Integer<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">      部分）从大到小排序：</span><br><span class="line"></span><br><span class="line">     - 如果 `b.getValue()` &gt; `a.getValue()`，返回正值，`b` 会排在 `a` 的前面。</span><br><span class="line">     - 如果 `b.getValue()` &lt; `a.getValue()`，返回负值，`a` 会排在 `b` 的前面。</span><br><span class="line">     - 如果相等，返回 0，顺序不变。</span><br><span class="line"></span><br><span class="line">5. **最终效果**</span><br><span class="line"></span><br><span class="line">   - 该优先队列会将键值对按照 `Integer` 值从大到小排序。</span><br><span class="line">   - 每次调用 `poll()` 方法，都会取出值最大的键值对。</span><br><span class="line"></span><br><span class="line">### 示例代码</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        PriorityQueue&lt;Map.Entry&lt;String, Integer&gt;&gt; Data = new PriorityQueue&lt;&gt;((a, b) -&gt; b.getValue() - a.getValue());</span><br><span class="line"></span><br><span class="line">        // 模拟 Map.Entry 数据</span><br><span class="line">        Map.Entry&lt;String, Integer&gt; entry1 = Map.entry(&quot;Alice&quot;, 10);</span><br><span class="line">        Map.Entry&lt;String, Integer&gt; entry2 = Map.entry(&quot;Bob&quot;, 20);</span><br><span class="line">        Map.Entry&lt;String, Integer&gt; entry3 = Map.entry(&quot;Charlie&quot;, 15);</span><br><span class="line"></span><br><span class="line">        // 添加到优先队列</span><br><span class="line">        Data.offer(entry1);</span><br><span class="line">        Data.offer(entry2);</span><br><span class="line">        Data.offer(entry3);</span><br><span class="line"></span><br><span class="line">        // 输出按照值从大到小的顺序</span><br><span class="line">        while (!Data.isEmpty()) &#123;</span><br><span class="line">            Map.Entry&lt;String, Integer&gt; entry = Data.poll();</span><br><span class="line">            System.out.println(entry.getKey() + &quot;: &quot; + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ol><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Bob: 20</span><br><span class="line">Charlie: 15</span><br><span class="line">Alice: 10</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> PriorityQueue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机专用英语词汇表</title>
      <link href="/2024/12/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E7%94%A8%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8/"/>
      <url>/2024/12/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E7%94%A8%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机专用英语词汇1695个词汇表"><a href="#计算机专用英语词汇1695个词汇表" class="headerlink" title="计算机专用英语词汇1695个词汇表"></a><a href="https://www.cnblogs.com/luckcs/articles/8031817.html">计算机专用英语词汇1695个词汇表</a></h1><blockquote><p>本文出自 “惨绿少年” 博客，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出。<br>文章来源:<a href="http://blog.znix.top/">http://blog.znix.top</a></p></blockquote><p>1.单词说明： </p><p>command n. 命令，指令 [kə’mɑ:nd] </p><p>单词拼写 名词 单词含义 音标（发音） </p><p>提示:着重记忆单词对应的意思，有能力同学最好词性也记忆。 </p><p>2.词性说明： </p><p>n    v   vi         vt   conj prep pron adj   adv </p><p>名词 动词 非及物动词 及物动词 连词 介词  代词  形容词 副词 </p><p> 3.单词列表： </p><ol><li>file n. 文件；v. 保存文件 [‘fail]   </li><li>command n. 命令，指令  [kə’mɑ:nd] </li><li>use v. 使用，用途  [ ju :z] </li><li>program n. 程序  [‘prəuɡræm, -ɡrəm] </li><li>line n. (数据，程序)行，线路 [ lain]  </li><li>if conj. 如果  [ if ] </li><li>display vt. 显示，显示器 [ ,dis ‘ple i]   </li><li>set v. 设置，n. 集合  </li><li>key n. 键，关键字，关键码  [k i :] </li><li>list n. 列表，显示，v. 打印 [list]   </li><li>by prep. 凭，靠，沿  [ba i] </li><li>press v. 按，压  [pres] </li><li>with prep. 用，与，随着  [wið, wiθ] </li><li>format n. 格式  [‘fɔ:mæt] </li><li>change v. 更换，改变，变动 [tʃe indʒ]   </li><li>cursor n. 光标  [‘kə:sə] </li><li>directory n. 目录，索引簿  [di’rektər i, dai-] </li><li>from prep. 从，来自，以来  [强 frɔm, 弱 frəm] </li><li>menu n. 菜单，目录 [ ‘menju :, mə’nju:] </li><li>option n. 任选，选择，可选项  [‘ɔpʃən] </li><li>character n. 字符，符号，特性  [‘kærəktə] </li><li>current n. 电流  [‘kʌrənt] </li><li>type n. 型，类型；v. 打印  [ taip] </li><li>screen n. 屏幕，屏；v. 屏蔽  [skri:n] </li><li>specify v. 指定，规定，确定  [‘spesəfai, -si-] </li><li>move v. 移动  [mu:v] </li><li>disk n. 盘，磁盘  [disk] </li><li>text n. 正文，文本  </li><li>drive v. 驱动；n. 驱动器 [draiv]  </li><li>see v. 看，看出，查看  [s i:] </li><li>name n. 名，名称；vt. 命名 [neim]   </li><li>record n. 记录  [ri’kɔ:d, ‘ rekɔ:d] </li><li>box n. 箱，匣，(逻辑)框  [bɔks] </li><li>database n. 数据库  [ ‘deitəbe is ] </li><li>help v. &amp; n. 帮助  [help] </li><li>memory n. 记忆存储，存储器  [‘memər i] </li><li>which pron. 哪个，a. 那一个 [hwitʃ]  </li><li>all a. 全，全部；ad. 完全  [ɔ: l] </li><li>on ad. 接通，导电，开  [ɔn, ɔ:n, ən, n] </li><li>copy n. 复制，v. 拷贝  [‘kɔpi] </li><li>shell n. 壳，外壳 ·[ʃel] </li><li>delete vt. 删除，删去，作废  [di’ li:t] </li><li>enter v. 键入，送入  [‘entə] </li><li>margin n. 余量，边缘，边际 [‘mɑ:d ʒ in]   </li><li>mark n. 标记；vt. 加标记  [mɑ:k] </li><li>also ad. &amp; conj. 也，亦，还  [‘ɔ: lsəu] </li><li>do v. 做，干；n. 循环 [强 du:, 弱 du, də, d, du:]   </li><li>information n. 信息，情报  [ , infə’meiʃən] </li><li>choose v. 挑选，选择，选定  [tʃu:z] </li><li>select vt. 选择  [si’lekt] </li><li>group n. 组，群 [ɡru:p]   </li><li>first a. &amp; ad. &amp; n. 第一，首先 [fə:s t]   </li><li>field n. 字段，域，栏，场  [‘fi:ld] </li><li>procedure n. 过程，程序，工序  [prə’ s i:dʒə] </li><li>print v. 打印，印刷  [pr int] </li><li>return v. 返回，回送 [ri’tə:n]  </li><li>number n. 数字，号码；vt. 编号 [‘nʌmbə]  </li><li>selected a. 精选的  [s i’ lekt id] </li><li>want v. 需要，应该，缺少  [wɔnt, wɔ:nt] </li><li>window n. 窗口  [ ‘windəu] </li><li>message n. 信息，消息，电文  [ ‘mes idʒ] </li><li>dialog n. &amp; vt. 对话  [‘daiəlɔɡ] </li><li>example n. 例子，实例  [iɡ’zɑ:mp l] </li><li>create vt. 创立，建立  [kr i’e it] </li><li>insert vt. 插入  [ in’ sə:t , ‘ insə:t] </li><li>related a. 相关的  [ r i’ leit id] </li><li>item n. 项，项目，条款  [ ‘aitəm] </li><li>edit vt. 编辑，编排，编篡  [‘edit] </li><li>marked a. 有记号的  [mɑ:kt] </li><li>area n. (区)域，面积，方面  [‘εəriə] </li><li>parameter n. 参数，参变量  [pə’ ræmitə] </li><li>then ad. &amp; conj. 那时，则  [ðen] </li><li>variable a. 可变的；n. 变量  [‘vεəriəb l] </li><li>tab n. 制表键  [tæb] </li><li>up ad. 上，向上，a. 高的 [ʌp] </li><li>string n. 行，字符串 [striŋ]  </li><li>each a. &amp; ad. 各(自)，每个[ i :tʃ] </li><li>active a. 激活的，活动的  [‘ækt iv] </li><li>topic n. 题目，论题 [‘tɔpik]  </li><li>start v. 起动，开始，启动  [stɑ:t] </li><li>mode n. 态，方式，模  [məud] </li><li>selection n. 选择  [s i’lekʃən] </li><li>function n. 函数，功能，操作  [‘fʌŋkʃən] </li><li>word n. 字(词)，单词 [wə:d]  </li><li>make vt. 制造，形成，接通[me ik]  </li><li>right a. 右边的，正确的  [rait] </li><li>value n. 值  [ ‘væl ju :] </li><li>button n. 按钮  [‘bʌtən] </li><li>index n. 索引，变址，指数  [‘indeks] </li><li>without prep. 没有，在…以外  [wi’ðaut, -‘θaut] </li><li>appear vi. 出现，显现，好像  [ə’piə] </li><li>left a. &amp; n. 左边(的)  [left] </li><li>save v. 保存  [se iv] </li><li>next n. 下一次，a. 其次  [nekst] </li><li>off ad. (设备)关着，脱离  [ɔ:f , ɔf] </li><li>following a. 下列的，以下的  [‘fɔləui ŋ] </li><li>control v. 控制，支配，管理  [kən’trəul] </li><li>only a. 唯一的，ad. 仅仅  [‘əunli] </li><li>user n. 用户  [‘əunli] </li><li>end n. 结束，终点，端点  [end] </li><li>system n. 系统  [‘sistəm] </li><li>contain vt. 包含，包括  [kən’tein] </li><li>t ime n. 时间；vt. 计时  [taim] </li><li>letter n. 字母，信  [ ‘ letə] </li><li>data n. 数据  [ ‘deitə] </li><li>setting n. 设置，调整  [‘setiŋ] </li><li>desire v. &amp; n. 期望  [di’za iə] </li><li>position n. 位置；vt. 定位  [pə’ziʃən] </li><li>down ad. 落下，降低，减少  [daun]  </li><li>task n. 任务；v. 派给…任务  [tɑ:sk, tæsk] </li><li>view n. &amp; v. 视图，景象  [v ju :] </li><li>switch n. &amp; v. 开关，转换，切换  [switʃ] </li><li>inc lude vt. 包括，包含  [ in’klu :d] </li><li>get v. 得到，获得，取  [ɡet] </li><li>default v. 缺省，预置，约定  [di’ fɔ:lt] </li><li>structure n. 结构，构造，构件  [‘strʌktʃə] </li><li>into prep. 向内，进入  [ ‘ intu :, -tu, -tə] </li><li>path n. 路径，通路，轨道  [pɑ:θ, pæθ] </li><li>blank n. 空白，间隔  [b læŋk] </li><li>open v. 打开，开启，断开  [‘əupən] </li><li>add v. &amp; n. 加，增加，添  [æd] </li><li>enable vt. 启动，恢复正常操作  [ i’ne ibl] </li><li>operation n. 操作，运算，动作  [,ɔpə’reiʃən] </li><li>erase v. 擦除，取消，删除  [ i’ reiz, i’ reis ] </li><li>filename n. 文件名  [ ‘ fai l,ne im] </li><li>search v. 检索，查询，搜索  [sə:tʃ] </li><li>another a. 另一个，别的  [ə’nʌðə] </li><li>last a. &amp; n. 最后(的)  [lɑ:s t , læs t] </li><li>column n. 列，柱，栏  [‘kɔləm] </li><li>after prep. &amp; ad. 以后，后面  [‘ɑ:ftə, ‘æf-] </li><li>prompt n. &amp; v. 提示  [prɔmpt] </li><li>two n. &amp; a. 二，两，双  [ tu:] </li><li>execute v. 实行，实施  [ ‘eks ik ju:t] </li><li>about ad. 关于，大约，附近  [ə’baut] </li><li>escape v. 逃避，逸出，换码  [ i’ skeip] </li><li>error n. 错误，误差，差错  [‘erə] </li><li>currently ad. 目前，现在  [‘kʌrəntli] </li><li>extension n. 扩充，延伸  [ ik’ s tenʃən] </li><li>same a. 同样的，相同的  [seim] </li><li>status n. 状态，态，状况  [ ‘ s teitəs, ‘stæ-] </li><li>run v. 运行，运转，操作  [rʌn] </li><li>argument n. 变元，自变量  [‘ɑ:ɡ jumənt] </li><li>statement n. 语句，陈述，命题  [‘steitmənt] </li><li>shift v. 转义，换档，移位  [ʃif t] </li><li>store n. &amp; vt. 存储，存储器 [stɔ:] </li><li>scroll vt. 上滚(卷)；n. 纸卷  [skrəul]</li></ol><p>147 vt. 替换，置换，代换  [ r i’ple is ] </p><ol start="148"><li>macro n. 宏，宏功能，宏指令  [‘mækrəu] </li><li>page n. 页面，页，版面  [pe idʒ] </li><li>quit v. 退出，结束  [kwit] </li><li>define vt. 定义，规定，分辨  [di’ fain] </li><li>reference n. &amp; a. 参考；参考的  [‘refərəns </li><li>other a. 别的，另外的  [‘ʌðə] </li><li>while conj. 当…的时候  [hwai l] </li><li>pressing n. &amp; a. 压制；紧急的  [‘presiŋ] </li><li>restore vt. 恢复，复原  [ri’stɔ:] </li><li>top n. 顶，尖端 [tɔp]  </li><li>how ad. 如何，怎样，多么  [hau] </li><li>color n. 颜色，色彩，(彩)色  [‘kʌlə] </li><li>allow v. 允许，容许  [ə’ lau] </li><li>block n. (字，信息，数据)块  [blɔk] </li><li>decimal n. &amp; a. 十进制；十进制[ ‘des iməl]的  </li><li>main a. 主要的  [me in] </li><li>definition n. 定义，确实，清晰[ ,dif i’niʃən]度  </li><li>between prep. 在…之间，中间[bi’ twi :n   </li><li>optional a. 任选的，可选的  [‘ɔpʃənəl] </li><li>date n. 日期  [de it] </li><li>remove v. 除去，移动  [ r i’mu :v] </li><li>arrow n. 箭头，指针  [‘ærəu] </li><li>label n. 标签，标号，标识符  [ ‘ leib l] </li><li>within prep. 在…以内  [wi’ð in, wi’θin] </li><li>issue v. 发行，出版，流出  [‘iʃ ju :, ‘ is ju:] </li><li>different a. 不同的，各种各样的  [ ‘difərənt]  </li><li>available a. 可用的  [ə’veiləbl]  </li><li>returned a. 退回的  [ri’tə:nd]  </li><li>associate v. 相联，联想，关联  [ə’səuʃie it , ə’səuʃiət, -eit] </li><li>attribute n. 属性，标志，表征  [ə’ tr ib ju :t , ‘ætr ibju :t] </li><li>dos 磁盘操作系统  </li><li>before prep. 以前，前，先  [b i’ fɔ:]  </li><li>order n. &amp; vt. 指令，次序；排序  [‘ɔ:də]  </li><li>modify vt. 修改，改变，变址  [‘mɔdifa i] </li><li>array n. 数组，阵列  [ə’ rei] </li><li>mouse n. 鼠标器  [maus, mauz] </li><li>note n. 注解，注释  [nəut] </li><li>locate vt. 定位  [ləu’keit, ‘ləu] </li><li>video n. 视频，电视  [ ‘vid iəu]  </li><li>printer n. 打印机，印刷机  [‘printə] </li><li>bar n. 条，杆，棒  [bɑ:]  </li><li>bottom n. &amp; a. 底，基础；底下[‘bɔtəm] 的  </li><li>carriage n. 滑架，托架  [‘kæridʒ]  </li><li>content n. 含量，容量，内容  [‘kɔntent]  </li><li>either a. &amp; pron. 任何一个，各  [ ‘a iðə, ‘ i:-]  </li><li>ok ad. &amp; a. 对，好；全对  </li><li>space n. 空格键，空间  [speis]  </li><li>editor n. 编辑程序  [ ‘ed itə] </li><li>exist vi. 存在，生存，有  [iɡ’z is t]  </li><li>scope n. 范围，显示器  [skəup]  </li><li>paragraph n. 段(落)，节，短讯  [‘pærəɡrɑ:f , -ɡræf]  </li><li>multi (词头) 多  [‘mʌlt i] </li><li>clear v. 清除，弄干净  [kliə]  </li><li>exit n. &amp; vi. 出口；退出  [‘eksit, ‘eɡ zit]  </li><li>report vt. &amp; n. 报告，报表  [ri’pɔ:t]  </li><li>execution n. 执行  [ ,eks i’kju :ʃən]  </li><li>backup n. 备份，后备，后援  [‘bækʌp] </li><li>version n. 版本  [‘və:ʃən] </li><li>find v. 寻找，发现  [faind]  </li><li>pointer n. 指针，指示字  [‘pɔintə]  </li><li>subset n. 子集，子设备  [sʌb] [set] </li><li>keyboard n. 键盘  [ ‘ki :bɔ:d] </li><li>full a. &amp; ad. &amp; n. 全(的)，满  [ful]  </li><li>check v. 校对，栓查，核算  [tʃek]  </li><li>should v. &amp; aux. 应当，该  [ʃud, 弱 ʃəd, ʃd]  </li><li>single a. &amp; n. 单个的；一个，单  [‘siŋɡl]  </li><li>positioning n. 定位  [pə’ziʃəniŋ]  </li><li>provide v. 提供  [prəu’vaid]  </li><li>title n. 题目，标题  [ ‘ tait l]  </li><li>expression n. 表达式  [ik’spreʃən]  </li><li>through prep. &amp; ad. 通过，直通  [θru:]  </li><li>toggle n. &amp; v. 触发器；系紧  [‘tɔɡl]  </li><li>code n. 码，代码，编码  [kəud]  </li><li>such a. &amp; pron. 这样的，如此  [sʌtʃ, sətʃ]  </li><li>beginning n. 起点，初  [b i’ɡin iŋ]  </li><li>guide n. 向导，指南，入门  [ɡaid]  </li><li>tree n. 树，语法树  [tri:]  </li><li>environment n. 环境  [ in’vaiərənmənt]  </li><li>but 但是，可是，除非，不过  [强 bʌt, 弱 bət, bʌt] </li><li>device n. 设备，器件，装置  [di’va is ] </li><li>highlight n. 增强亮度，提示区  [ ‘hai la it]  </li><li>call v. 调用，访问，呼叫  [kɔ: l]  </li><li>continue v. 连续，继续  [kən’ t in ju :]  </li><li>indicate vt. 指示，表示  [‘ ind ike it]  </li><li>until prep. 到…为止，直到  [,ʌn’ t il]  </li><li>begin v. 开始，着手，开端  [bi’ɡ in] </li><li>place vt. 放，位，地点  [p le is ]  </li><li>rename vt. 更名，改名  [ , r i:’ne im] </li><li>swap v. 交换，调动  [swɔp, swɔ:p] </li><li>work n. 工作 [wə:k]   </li><li>remain vi. 剩下，留下，仍然  [ri’mein]  </li><li>close v. &amp; a. 关闭，闭合；紧密[kləuz] 的  </li><li>combination n. 结合，组合  [,kɔmbi’neiʃən] </li><li>profile n. 简要，剖面，概貌  [‘prəufail]  </li><li>unless conj. 除非  [ən’ les ] </li><li>so pron. &amp; conj. 如此，这样  [‘səu, 弱 sə]  </li><li>except prep. 除…之外，除非  [ ik’sept] </li><li>turn v. &amp; n. 转，转动；圈，匝  [tə:n]  </li><li>back n. 背面，反向，底座  [bæk]  </li><li>sure a. &amp; ad. 确实的；的确  [ʃuə, ʃɔ:] </li><li>section n. 节，段，区域  [‘sekʃən]  </li><li>follow v. 跟随，跟踪  [‘fɔləu]  </li><li>split v. 分开，分离  [split]  </li><li>need v. 必须，需要  [ni:d]   </li><li>access n. 存取，选取，接近  [‘ækses, ‘æksəs, æk’ses]  </li><li>additional a. 附加的，辅助的  [ə’diʃənəl]  </li><li>cancel v. 删除，取消，作废  [‘kænsəl]  </li><li>document n. 文献，资料，文件  ‘dɔk jumənt, ‘dɔkjument] </li><li>case n. 情况，场合  [keis]  </li><li>numeric n. &amp; a. 数字的，分数  [nju:’merik]  </li><li>go vi. 运行，达到  [ɡəu] </li><li>load n. &amp; v. 装入，负载，寄存  [ləud]  </li><li>try n. (尝)试，试验  [trai]  </li><li>size n. 尺寸，大小，容量  [saiz]  </li><li>entire a. &amp; n. 完全的；总体  in’ taiə]  </li><li>leave v. 离开，留下  [li:v]  </li><li>history n. 历史  [‘ his təri]  </li><li>second n. &amp; a. 秒，第二(的) [‘sekənd]  </li><li>reflow v. &amp; n. 回流，逆流  [ri:’ fləu]  </li><li>output n. 输出，输出设备  [‘autput, ,aut’put] </li><li>out n. &amp; a. 输入，在外  [aut] </li><li>both a. &amp; ad. 两，双，都  [bəuθ]  </li><li>install vt. 安装  [ in’ stɔ:l]  </li><li>source n. 源，电源，源点 [sɔ:s ]   </li><li>way n. 路线，途径，状态  [wei]  </li><li>assign vt. 赋值，指定，分派  [ə’sain]  </li><li>support vt. 支援，支持，配套  [sə’pɔ:t]  </li><li>specific a. 特殊的，具体的  [spi’sifik]  </li><li>join v. &amp; n. 连接，并(运算) [dʒɔin] </li><li>expand v. 扩充，扩展，展开  [ik’spænd]  </li><li>like a. 类似的，同样的  [ la ik]  </li><li>diskette n. 软磁盘，软盘片  （词典没有） </li><li>skip v. 跳跃(定位)，跳过  [skip]  </li><li>application n. 应用  [ ,æp li’ke iʃən]  </li><li>confirmation n. 认可  [,kɔnfə’meiʃən]  </li><li>whether conj. 无论，不管  [‘hweðə]  </li><li>hold v. 保持  [həu ld]  </li><li>click n. “卡搭”声，插销  k l ik]  </li><li>write v. 写，存入  [rait]  </li><li>byte n. (二进制的)字节  [ba it] </li><li>abbreviate vt. 缩写，省略  [ə’br i :v ie it]  </li><li>show v. 显示，呈现，出示  [ʃəu]  </li><li>otherwise ad. &amp; a. 另外  [‘ʌðəwaiz]  </li><li>working n. 工作，操作，作业  [‘wə:k i ŋ]  </li><li>delimiter n. 定界符，分界符  [di’ l imitə] </li><li>location n. 定位，(存储器)单元  [ləu’keiʃən]  </li><li>perform v. 执行，完成  [pə’fɔ:m]  </li><li>graphic n. &amp; a. 图形；图形的  [‘ɡræfik]  </li><li>read v. 读，读阅  [ri:d]  </li><li>confirm vt. 证实，确认  [kən’fə:m]  </li><li>sort v. 分类，排序  [sɔ:t]  </li><li>clause n. 条款，项目，子句  [klɔ:z]  </li><li>once ad. &amp; n. 只一次，一旦  [wʌns]  </li><li>however conj. 然而，可是(hao wai wo)  [hau’evə] </li><li>extend v. 扩充(ei ke si ten de)  [ik’stend]   </li><li>look v. 看，查看( lu ke )  [luk]  </li><li>starting a. 起始的(si chua tin)  [stɑ:t iŋ] </li><li>now ad. &amp; n. 此刻，现在(nao)  [nau]  </li><li>original n. &amp; a. 原文；原(初)始(ou vi zhi nou)[ə’ r idʒənəl] 的  </li><li>correspond vi. 通信(联系)(ke rui si ban te)  [,kɔ:r i’ spɔnd]  </li><li>property n. 性(质)，特征(pe rua po ti ) [‘prɔpət i]  </li><li>several a. &amp; n. 若干个，几个(sai fe rou)  [‘sevərəl]  </li><li>learn v. 学习，训练( lan en)  [lə:n]  </li><li>cause n. 原因，理由(kao si)  [kɔ:z]  </li><li>bracket n. (方)括号，等级(bo ruai ke te)  [‘brækit]  </li><li>omit vt. 省略，删去，遗漏(ao mai te)  [əu’mit]  </li><li>running a. 运行着的，游动的(ruo ning)  [‘rʌniŋ]  </li><li>sub-dire ctory n. 子目录(sao bo di ruai ke te rui)  [sʌb  di’rektər i, dai-] </li><li>edge n. 棱，边，边缘，界限(ai chi)  [edʒ]  </li><li>form n. 格式，表格，方式(fao mu)  [fɔ:m]  </li><li>instruction n. 指令，指导( in ke s i chua ke sheng)  [ in’ s trʌkʃən]  </li><li>ascii n. 美国信息交换标准码(a i s i ge i)  </li><li>below a. &amp; prep. 下列的；低于(bo lou)  [b i’ ləu] </li><li>standard n. 标准(si tan de rui de)  [‘stændəd]  </li><li>occurrence n. 出现，发生(e ke run si)  [ə’kə:rəns, -‘kʌ-] </li><li>lock n. &amp; v. 锁，封闭；自动跟踪(lao ke)  [lɔk]  </li><li>append vt. 附加，增补(e pen de)  [ə’pend]  </li><li>destination n. 目的地，接收站(da s i te ne i sheng) [ə’pend]  </li><li>password n. 口令，保密字(pa si wo de)  [pɔint]  </li><li>point n. 点，小数点，句号(po in te)  [pɔint]  </li><li>variety n. 变化，种类，品种(v rua i t i) [və’raiət i]  </li><li>many a. &amp; n. 许多，多数(ma i ni)  [‘meni]  </li><li>buffer n. 缓冲器(ba fe)  [‘bʌfə]  </li><li>useful a. 有用的(you s i fou)  [ ‘ ju :s ful]  </li><li>object n. 对象，目标，物体(a zhuai ke te) [‘ɔbdʒikt , -dʒekt, əb’dʒekt]  </li><li>again ad. 再，又，重新，也(e i gen) [ə’ɡen, -‘ɡein]  </li><li>operating a. 操作的，控制的(a pe rui tin) [‘ɔpəre it i ŋ]  </li><li>carry v. 进位，带 (kai rui) [‘kæri]  </li><li>update v. 更新，修改，校正(a pe dei te) [ʌp’deit, ‘ʌpdeit]   </li><li>moving n. &amp; a. 活动的，自动的(mu wei ying)  [ ‘mu:v i ŋ] </li><li>coprocessor n. 协同处理器(kou pa sei se)[kəu’prəusesə]      </li><li>overlay v. 覆盖，重叠(ou wei chi)[,əuvə’ le i, ‘əuvəlei]  </li><li>practice n. 实习，实践(pe rua ke te si)  [‘præktis] </li><li>navigation n. 导航(na we i ge i sheng)  [ ,næv i’ɡeiʃən] </li><li>automatically ad. 自动地，机械(ao de ma ti ke)[,ɔ:tə’mæt ikli]地  </li><li>total n. &amp; v. 总数；总计(to lou)  [‘təutəl] </li><li>previous a. 早先的，上述的(po rui wei e si)  [ ‘pr i:v jəs] </li><li>software n. 软件(sao fu wei er)  [‘sɔftwεə, ‘sɔ:-] </li><li>shortcut n. 近路，捷径(shou ka i te )  [‘ʃɔ:tkʌt] </li><li>long a. 长的，远的( lang) [‘ʃɔ:tkʌt] </li><li>unique a. 唯一的，独特的(you ni ke)  [ju:’ni:k]  </li><li>part n. 部分，零件(pa te)  [pɑ:t]  </li><li>updated a. 适时的，更新的(ao p dei te de)  [ʌp’deitid] </li><li>internal a. 内部的  [in’tə:nəl]  </li><li>fill v. 填充  [fil]  </li><li>basic n. &amp; a. 基本；基本的  [‘beisik]  </li><li>math n. 数学  [mæθ]  </li><li>since prep. 自从…以来  [sins]  </li><li>determine v. 确定  [di’tə:min]  </li><li>making n. 制造，构造  [‘me ik i ŋ]  </li><li>center n. 中心，中央  [‘sentə]  </li><li>already ad. 已经，早已  [ɔ:l’redi]  </li><li>keyword n. 关键字(词)  [k i’wə:d]  </li><li>action n. 操作，运算  [‘ækʃən]  </li><li>condition n. 条件，情况；vt. 调节  [kən’diʃən]  </li><li>quick a. &amp; ad. 快速的，灵敏的  [kwik]  </li><li>assigned a. 指定的，赋值的  [ə’sainid]  </li><li>give vt. 给出，赋予，发生  [ɡiv]  </li><li>large a. (巨)大的，大量的  [lɑ:dʒ ]  </li><li>chapter n. 章，段  [‘tʃæptə]  </li><li>computer n. 计算机 (ka mu pui te)  </li><li>complete v. &amp; a. 完成；完整的  (ka mu pe li te) </li><li>past a. 过去的，结束的  (pa sit e) </li><li>match v. 比较，匹配，符合 (ma c hi)  </li><li>recover v. 恢复，回收  (rui ka wan) </li><li>always ad. 总是，一直，始终  (ao we i s i) </li><li>require v. 需要，要求  (r ui k ua i er ) </li><li>opening n. 打开，断路，孔 (ou po ning)  </li><li>network n. &amp; vt. 网络；联网 (nai te wo de)  </li><li>sign n. 符号，信号，记号  (sa i n) </li><li>release vt. &amp; n. 释放，核发，版  (r ui li s i) </li><li>three a. &amp; n. 三(的)  (s i r ui) </li><li>recall vt. 撤消，复活，检索(rui kao l)  </li><li>deletion n. 删去(部分)，删除 (di li sheng)  </li><li>fixed a. 固定的，不变的  ( fe i ke si de) </li><li>amount vt. &amp; n. 总计；合计  (a ma i ou te) </li><li>alias n. 别名，代号，标记  (e i li e s i) </li><li>quote n. &amp; v. 引号；加引号 (k ua i wu te)  </li><li>correct a. &amp; vt. 正确的；改正  (ke ruai ke te) </li><li>else ad. &amp; conj. 否则，此外 ( a i o u s i) </li><li>maximum n. &amp; a. 最大(的)，最高(mai ke sei men)  </li><li>under prep. 在…下面(之下) (ang de)  </li><li>take v. 取，拿 [t e i ke]  </li><li>switching n. 开关，转接，交换 (si wei te chen)  </li><li>element n. 元件，元素，码元  (ai l men te) </li><li>modification n. 改变，修改  (mao di fi kei sheng) </li><li>modified a. 修改的，变更的[mao d i fa i de]  </li><li>input n. 输入，输入设备 [in pu te]  </li><li>uppercase n. 大写字母 [ao po ke si]  </li><li>plus prep. 加，加上，外加  [p u lao s i] </li><li>found v. 建立，创办  [fai ong de] </li><li>debug vt. 调试  [di ba g] </li><li>force v. &amp; n. 强制；压力，强度  [ fo u s i] </li><li>lowercase n. 下档，小写体  [lai ou ke si] </li><li>just ad. 恰好  [ zhua i si te] </li><li>undo vt. 取消，废除  [ang du] </li><li>environ vt. 围绕，包围 [ in wa i ren]  </li><li>why ad. 为什么 (wai)  </li><li>temporary a. 暂时的，临时的  (tai me pe rui) </li><li>put v. 存放(记录)，放置  (pa te) </li><li>instead ad. (来)代替，当作 (in si tai de)  </li><li>encounter v. &amp; n. 遇到，碰到 ( in k a i wen te)  </li><li>across prep. 交叉，越过  (e ke rua si) </li><li>matching n. 匹配，调整 [ma te sheng]  </li><li>wildcard n. 通配符  [wai ou ka de] </li><li>spill v. 漏出，溢出，漏失  [si pei ou] </li><li>level n. 水平，级，层次  [ la i wo u] </li><li>browse v. 浏览  [bu rua wu s i] </li><li>speech n. 说话，言语，语音  [si pi chi] </li><li>occur vi. 发生，出现，存在 [e ke]  </li><li>memo n. 备忘录  [mai mou] </li><li>prior a. 先验的，优先的  [p rua i e] </li><li>loaded a. 有负载的  [lei ou dei te] </li><li>length n. (字，记录，块)长度 [lan te]  </li><li>round v. 舍入，四舍五入  [ran ong de ] </li><li>variant n. &amp; a. 变体，易变的 [wai rui en te]   </li><li>floppy n. 软磁盘 [ fao p i]  </li><li>machine n. 机器，计算机 [me sheng en] </li><li>square n. &amp; a. 正方形；方形的  [s i k e wa i] </li><li>supply vt. &amp; n. 电源，供给  [se pe lai] </li><li>home n. &amp; a. 家，出发点 [hou mu]  </li><li>normal a. &amp; n. 正常，标准  [nou mou] </li><li>onto prep. 向…，到…上  [ang tu] </li><li>during prep. 在…期间  [d i e r un] </li><li>module n. 模块(程序设计)  [mao diu l] </li><li>monochrome n. 单色  [mao nei ke run mu] </li><li>assistance n. 辅助设备，帮助 [ e se i s i t e n s i ] </li><li>tell n. 讲，说，教，计算  [tai ou] </li><li>library n. (程序…)库，图书馆 [lai bo rui]  </li><li>demonst rat ion n. (公开)表演，示范 [dai mu si zhui sheng]  </li><li>stack n. 栈，堆栈，存储栈  [si dai ke] </li><li>even a. &amp; ad. 偶数的；甚至 [yi wen]  </li><li>evaluate v. 估计，估算，求值  [yi wai li lei te] </li><li>times n. 次数  [tai mu s] </li><li>previously ad. 以前，预先 [piu rui s i le i]  </li><li>directly ad. 直接地，立即  [di ruai ke te lei] </li><li>logical a. 逻辑的，逻辑“或” [lao zhi kou]  </li><li>template n. 标准框，样板，模板  [tan mu pe lei te] </li><li>calling n. 呼叫，调用，调入[kao ling]  </li><li>later a. 更后的，后面的  [ le i t e] </li><li>driver n. 驱动器，驱动程序  [zhuai wer] </li><li>therefore ad. &amp; conj. 因此，所以 [ le i ou fe ou]  </li><li>saving a. 保存的  [sei ving] </li><li>detail n. 元件，零件，细节  [d i te i l] </li><li>linker n. 连接程序  [lin ke] </li><li>loop n. 圈，环；(程序)循环，回路 [ lu p]  </li><li>process vt. 处理，进程，加工  [po rua sai s] </li><li>scheme n. 方案，计划，图  [si ke mu] </li><li>every a. 每个，全体，所有的  [ai v rui] </li><li>refer v. 访问，引用，涉及  [rui fe] </li><li>possible a. 可能的，潜在的 [pao si bou] </li><li>above a. 在…之上，大于  [e ba wu] </li><li>overview n. 综述，概要 [o wo vi ou]  </li><li>result n. 结果  [rui sao te] </li><li>syntax n. 语法，文法，句法 [xin tai ke si]  </li><li>abbreviation n. 缩短，省略，简称  </li><li>bios n. 基本输入&#x2F;输出系统  </li><li>hidden a. 隐藏的，秘密的  </li><li>null n. &amp; a. 空(的)，零(的)  </li><li>send v. 发送  </li><li>private a. 专用的，私人的  </li><li>hard a. 硬的  </li><li>hardware n. 硬件  </li><li>say v. 说，显示，假定  </li><li>equal vt. &amp; n. 等于，相等；等号  </li><li>pack n. 压缩，包裹  </li><li>minus a. &amp; n. 负的；负数，减  </li><li>alternate a. 交替的，备用的  </li><li>collapse v. 崩溃，破裂 (ke la p s)  </li><li>corner n. 角，角落，转换  (ka one) </li><li>present a. &amp; v. 现行的；提供  (p rua i zen t) </li><li>interpreter n. 解释程序，翻译机 (in te p te)  </li><li>advance v. &amp; n. 进步，提高；进展 (e de wai en s)  </li><li>forward a. 正向的 (fao wei de )  </li><li>fast a. &amp; ad. 快速的  (fa s t) </li><li>special a. 专用的，特殊的  (si bai shou) </li><li>slash n. 斜线 ( s i la i s hi)  </li><li>utility n. &amp; a. 实用程序；实用性 ( yo u t i li t i)  </li><li>regardless a. 不注意的，不考虑的 (rui ga de li s)  </li><li>disable vt. 禁止，停用 (de i s i e i bo u)  </li><li>compatible a. 可兼容的，可共存的(kang m pa tei bao)  </li><li>depend vi. 随…而定，取决于  (dei pan de) </li><li>empty a. 空，零，未占用  (e m p t i) </li><li>alphabetical a. 字母(表)的，abc的(ai er fe ba ti kou)  </li><li>branch n. 分支，支线；v. 转换  (bo ran chi) </li><li>resume v. 重(新)开(始)  (re s you mu) </li><li>multiple a. 多次的，复杂的 (mo u t i po u) </li><li>monitor n. 监视器，监督程序 (mao nit e)  </li><li>configuration n. 配置 (kang fe i ge rua i sheng) </li><li>replacement n. 替换，置换，更新 (rui p e li s i me n te )  </li><li>required a. 需要的 (rui kuai er de)  </li><li>macros n. 宏命令(指令) (mai ke lou si)  </li><li>table n. 表 (tei bao)  </li><li>loss n. 损耗，损失 (lao s)  </li><li>batch n. 批，批量，成批  </li><li>exact a. 正确的  </li><li>aboveboard ad. &amp; a. 照直，公开的  </li><li>activate vt. &amp; n. 使激活，驱动  </li><li>around ad. &amp; prep. 周围，围绕  </li><li>slow a. &amp; ad. 慢速的  </li><li>floating a. 浮动的，浮点的  </li><li>refresh v. 刷新，更新，再生  </li><li>stop v. 停止，停机  </li><li>pass v. 传送，传递，遍(数)  </li><li>public a. 公用的，公共的  </li><li>eject n. 弹出  </li><li>ignore vt. 不管，忽略不计  </li><li>share v. 共享，共用  </li><li>sequence n. 顺序，时序，序列  </li><li>consist vi. 符合，包括  </li><li>step n. 步，步骤，步长，档  </li><li>double a. 两倍的，成双的  </li><li>come vi . 来，到，出现  </li><li>lower a. 下部的，低级的  </li><li>describe vt. 描述，沿…运行  </li><li>count v. 计数，计算  </li><li>pop v. 上托，弹出(栈)  </li><li>valid a. 有效的  </li><li>suspend v. 中止，暂停，挂起  </li><li>enhance vt. 增强，放大，夸张</li><li>separate v. &amp; a. 分隔，分离，各自的  </li><li>echo n. 回波，反射波  </li><li>necessary a. 必要的，必然的  </li><li>greater than 大于  </li><li>able a. 能…的，有能力的  </li><li>marking n. 标记，记号，传号  </li><li>ask v. 请求，需要  </li><li>term n. 项，条款，术语  </li><li>bring v. 引起，产生，拿来  </li><li>warning n. &amp; a. 报警，预告  </li><li>less a. &amp; ad. 更小，更少  </li><li>whose pron. 谁的  </li><li>comment n. &amp; vi. 注解，注释  </li><li>effect n. 效率，作用，效能  </li><li>expanding a. 扩展的，扩充的  </li><li>on- line a. 联机的  </li><li>reorder v. (按序)排列，排序  </li><li>direct a. 直接的  </li><li>enclose vt. 封闭，密封，围住，包装  </li><li>reset vt. 复位，置“0 ”  </li><li>various a. 不同的，各种各样的  </li><li>paper n. 纸，文件，论文  </li><li>prevent v. 防止，预防  </li><li>side n. (旁)边，面，侧(面)  (sai de) </li><li>push v. 推，按，压，进(栈) (pus hi )  </li><li>programming n. 程序设计，编程序 (pe rou ge ruai ming)  </li><li>upper a. 上的，上部的  (a pe) </li><li>row n. 行  (ruai o) </li><li>pressed a. 加压的，压缩的  (pe r ua i s i d ) </li><li>temporarily ad. 暂时  ( tan p ruo le i) </li><li>day n. 日，天，白天，时代 (de i)  </li><li>repaint vt. 重画  (rui pen te) </li><li>redefine vt. 重新规定(定义)  (rui di fan en) </li><li>relation n. 关系，关系式 ( r ui le i s he n)  </li><li>dimension n. 尺寸，维，因次  (di man shen) </li><li>boundary n. 边界，界限，约束  (bai en de rui) </li><li>zoom v. 变焦距  ( zu mu) </li><li>initialize v. 初始化  (in ne she lai zi) </li><li>personal a. 个人的，自身的 (pa s i nou)  </li><li>hello int. &amp; v. 喂！；呼叫  </li><li>true a. &amp; n. 真，实，选中 (chu)  </li><li>wish v. &amp; n. 祝愿，希望  (we i s hi) </li><li>font n. 铅字，字形  ( fang te) </li><li>know v. 知道，了解，认识  (na i o) </li><li>convert v. 转换，变换  (kang wo te) </li><li>global n. 全局，全程，全局符 (ge lou bou)  </li><li>still a. &amp; n. &amp; v. 静止的；静；平静  ( s i de i o u) </li><li>installation n. 安装，装配  ( in sit e lei shen) </li><li>invoke vt. 调用，请求  (in wou te) </li><li>interactive a. 交互式，交互的  (in te a k ti wu) </li><li>described a. 被看到的，被发现的  (di si chuai bo te) </li><li>century n. 世纪  (san te rui) </li><li>literal a. 文字的  (li te rou) </li><li>rather ad. 宁可，有点  (tua ze) </li><li>exclusive a. 排斥，排它性 (ei ke xi ke lou sei wu)  </li><li>marker n. 记号，标记，标志  (ma ke ) </li><li>wait v. 等待 (we i t e)  </li><li>appropriate a. 适当的，合适的  ( e po rou pui te) </li><li>fit v. &amp; n. 适合，装配；非特  (fi te) </li><li>adapter n. 适配器，转换器  (e dap o te) </li><li>filter n. 滤波器，滤光材料  ( fi out e) </li><li>break v. 断开，撕开，中断  (bo rui ke) </li><li>backward ad. 向后，逆，倒  (ba ke wo de) </li><li>searching n. 搜索 (se te shen)  </li><li>receive v. 接收  (r i s i v) </li><li>dual a. 对偶的，双的 (du ou)  </li><li>retry vt. 再试，复算 rui chuai)  </li><li>normally ad. 正常地，通常  (nou me li) </li><li>exactly ad. 正好，完全，精确地  (in ge zai k t li) </li><li>immediately ad. 直接地  (in mi di si) </li><li>separated a. 分开的 (sai po rui t d)  </li><li>high a. 高  (ha i) </li><li>equivalent a. 相等的，等效的  (e i kui wu en t ) </li><li>light n. &amp; a. 光(波，源)；轻的  ( la i t e) </li><li>zero n. 零，零位，零点  ( ze i ro u) </li><li>storage n. 存储，存储器  (s tao run zhi) </li><li>width n. 宽度  (we i zi) </li><li>language n. 语言  (lan ge wei chi) </li><li>startup n. 启动 (si tar ta p)  </li><li>much a. &amp; n. 很多，许多，大量 (ma c hi)  </li><li>per prep. 每，按  (per) </li><li>over prep. 在…上方  ( ou wo) </li><li>mirror n. &amp; v. 镜，反射，反映  (mi re) </li><li>request n. &amp; vt. 请求  (r i k ua i s i t e) </li><li>keypad n. 小键盘  (ki pai de) </li><li>keep v. 保持，保存 (ke p)  </li><li>resident a. 驻留的  (rei zi den t) </li><li>learning n. 学问，知识  (lei ning) </li><li>talk v. 通话，谈话 (tao ke)  </li><li>summary n. 摘要，汇总，提要  (se me rui) </li><li>well n. &amp; a. 井；好，良好  (wa i ou) </li><li>link n. &amp; v. 链接；连接，联络 (lin k)  </li><li>according to a. 按照，根据  (ao kui ding) </li><li>identify v. 识别，辨认 (ai dai nei fai)  </li><li>designated a. 指定的，特指的  (da si nei te d) </li><li>pertain vi. 附属，属于，关于  (p tin) </li><li>expansion n. 展开，展开式  (ei k si pan sheng) </li><li>incompatible a. 不兼容的 (in ca mu pai tei bou)  </li><li>blinking n. 闪烁  (bo lin kin) </li><li>month n. 月份  (ma n pu) </li><li>precede v. 先于  (pe ci de) </li><li>readily ad. 容易地，不勉强  (ruai de li) </li><li>transportable a. 可移动的  (chuan s ip e dei bao) </li><li>appropriately ad. 适当地  (a p rou pe te li) </li><li>routine n. 程序，例行程序  (rui tin) </li><li>ready a. 就绪，准备好的  (ruai dei) </li><li>listing n. 列表，编目  (li si tin) </li><li>newly ad. 新近，重新  (nui li) </li><li>year n. (一)年，年度，年龄  (ye) </li><li>contact n. 接触，触点  (kang tai ke t) </li><li>session n. 对话，通话  (se sheng) </li><li>own a. &amp; v. 自己的；拥有  (ou en) </li><li>redraw vt. 再拉  (rui di ao) </li><li>here ad. 在这里 (he i er)  </li><li>manual a. 手工的，手动的  (man nui ou) </li><li>particular a. 特定的，特别的  (pe tei ke le) </li><li>rectangle n. 矩形  (rui ke ten gou) </li><li>additive a. &amp; n. 相加的；附加物  (ai de te wu) </li><li>similar a. 相似的 (si mi le)  </li><li>assembly n. 汇编，安装，装配  (e san bo li) </li><li>copyright n. 版权  (kao p i r ua i te) </li><li>description n. 描述  (dei si ke pe sheng) </li><li>retrieve v. 检索  (e chui wu) </li><li>mistake n. 错误  (mi si tei ke) </li><li>produce v. 生产，制造  (po dui si) </li><li>ram 随机存取存储器  (ruai en) </li><li>exception n. 例外，异常，异议 (ei kesai po sheng)   </li><li>digit n. 数字，位数，位  (di zhi te) </li><li>reverse v. &amp; a. 反向的，逆  (ri we s) </li><li>minimum n. &amp; a. 最小(的)，最低  (mi ni men) </li><li>enough a. &amp; ad. 足够的，充足的  ( in na fu) </li><li>although conj. 虽然，即使  (ao wai ou) </li><li>re index v. &amp; n. 变换(改变)符号  (ruan di ke s i) </li><li>third a. &amp; n. 第三，三分之一 (ou de )  </li><li>red a. &amp; n. 红色(的) (ruai de)  </li><li>along prep. &amp; ad. 沿着  (e lang) </li><li>test n. &amp; v. 测试 (tei si t)  </li><li>small a. 小的，小型的  (si mao ou) </li><li>feed v. 馈给，(打印机)进纸  ( fi d e) </li><li>company n. &amp; v. 公司；交际，交往(kan po ni) </li><li>movie n. 影片，电影(院) (mu wi)  </li><li>compile vt. 编译  (ca m pai ou) </li><li>frequently ad. 常常，频繁地 (fei kuai te li)  </li><li>undefined a. 未定义的  (an de fai en de) </li><li>state n. &amp; vt. 状态；确定(si dei te)    </li><li>tick v；n. 滴答(响)；勾号(√)  (t i k e) </li><li>accept vt. 接受，认可，同意 （e ke se p t） </li><li>intense a. 强烈的，高度的  (in ten si) </li><li>documentation n. 文件编制，文本(dao kei men tei sheng) </li><li>asterisk n. 星号(*)  (a si te s k) </li><li>easily ad. 容易地，轻易地  (y zi li) </li><li>become v. 成为，变成，适宜  (bi ka mu) </li><li>address vt. &amp; n. 寻址；地址 (e de zhuai si)  </li><li>interface n. 接口  ( in te fe i s i) </li><li>pause vi. 暂停 (pao zi)  </li><li>repeat v. 重复  (ri pi te) </li><li>restart v. 重新启动，再启动  (rui sit a te) </li><li>assumed a. 假定的  (e sing m d) </li><li>speed n. 速度  (s i p i d) </li><li>entry n. 输入，项(目)，入口 (en chui)  </li><li>combine v. 组合，联合  (ca m bai n) </li><li>organize v. 组织，创办，成立  (o ge na i zi) </li><li>finished a. 完成的  ( fi ni s hi t ) </li><li>mixed a. 混合的  (mi k s t) </li><li>permit v. 许可，容许 (po mi t)  </li><li>formatting n. 格式化  (fao mei tin) </li><li>root n. 根 (ru te)  </li><li>symbol n. 符号，记号  (sen bou) </li><li>binary n. &amp; a. 二进制；双态的  (ba be rui) </li><li>whenever ad. &amp; conj. 随时  (wen na we) </li><li>reach v. &amp; n. 范围，达到范围  (rui chi) </li><li>caution n. &amp; v. 警告，注意  (kao sheng) </li><li>subtotal n. &amp; v. 小计，求部分和  (sa bo tei lou) </li><li>card n. 卡片，插件(板)  </li><li>general a. 通用的  </li><li>associated a. 联合的，相联的</li><li>transfer v. 传送，转换，转移  </li><li>connect v. 连接  </li><li>partition v. 划分，分区，部分  </li><li>hexadecimal a. 十六进制的  </li><li>generate vt. 产生，发生，生成  </li><li>specification n. 说明书，规则说明书  </li><li>customize vt. 定制，定做  </li><li>far a. 远的，遥远的  </li><li>nest v. 嵌套，后进先出  </li><li>duplicate vt. 复制，转录，加倍  </li><li>compression n. 压缩，浓缩  </li><li>unable a. 不能的  </li><li>means n. 方法，手段  </li><li>alternately ad. 交替地，轮流地  </li><li>intensity n. 强度，亮度  </li><li>reading n. 读，读数  </li><li>let v. 让，允许  </li><li>explicitly ad. 明显地，显然地  </li><li>compare v. 比较，对照，比喻  </li><li>sector n. &amp; v. 扇区，段；分段  </li><li>problem n. 问题，难题  </li><li>vertically ad. 竖直地，直立地  </li><li>horizontally ad. 水平地  </li><li>backspace v. 退格，回退  </li><li>terminate v. 端接，终止  </li><li>people n. 人们  </li><li>short a. &amp; n. 短的；短路  </li><li>drag vt. 拖，拉，牵，曳  </li><li>formatted a. 有格式的  </li><li>preview n. &amp; vt. 预映  </li><li>underscore vt. 在…下面划线  </li><li>correctly ad. 正确地  </li><li>initially ad. 最初，开头  </li><li>reformat v. 重定格式  </li><li>inside n. &amp; a. 内部，内容；内部的  </li><li>integrate v. 综合，集成  </li><li>controlled a. 受控制的，受操纵的  </li><li>period n. 周期  </li><li>huge a. 巨大的，非常的  </li><li>determined a. 坚决的，毅然的  </li><li>trailing n. &amp; a. 结尾；尾随的  </li><li>seek v. 查找，寻找，探求  </li><li>introduction n. 入门，介绍，引进  </li><li>indent v. 缩排</li><li>base n. 基，底，基地址  </li><li>integer n. 整数  </li><li>attempt vt. &amp; n. 尝试，试验  </li><li>twice n. &amp; ad. 两次，两倍于  </li><li>formed a. &amp; n. 成形  </li><li>subscript n. 注脚，下标  </li><li>tiny a. 微小的，微量的  </li><li>model n. 模型，样机，型号     </li><li>correction n. 校正，修正  </li><li>rating n. 定额，标称值  </li><li>secondary a. 辅助的，第二的  </li><li>opened a. 开路的，断开的  </li><li>limit n. 极限，限界  </li><li>sun n. 太阳，日  </li><li>translate v. 翻译，转换，平移  </li><li>reason n. 原因，理由  </li><li>colon n. 冒号“:”  </li><li>avoid vt. 避免，取消，无效  </li><li>range n. 范围，域，区域  </li><li>allocate vt. 分配  </li><li>wordperfect a. 一字不错地熟记的  </li><li>simply ad. 简单地，单纯地  </li><li>verify vt. 鉴定，检验，核对  </li><li>manner n. 方法，样式，惯例  </li><li>direction n. 方向，定向，指向  </li><li>portion n. &amp; vt. 部分；分配  </li><li>emulator n. 仿真器，仿真程序  </li><li>successful a. 成功的  </li><li>applied a. 适用的，外加的  </li><li>sum n. 和，合计，总额  </li><li>achieve vt. 完成，实现  </li><li>together ad. 一同，共同，相互  </li><li>affect vt. 影响，改变，感动  </li><li>delay v. 延迟  </li><li>free a. 自由的，空闲的  </li><li>properly ad. 真正地，适当地  </li><li>kind n. 种类，属，级，等  </li><li>splitting n. 分区(裂)  </li><li>feature n. 特征，特点  </li><li>console n. 控制台，操作台  </li><li>operate v. 操作，运算  </li><li>kernel n. 内核(核心)程序  </li><li>easy a. &amp; ad. 容易的；容易地  </li><li>modifier n. 修改量，变址数</li><li>invalid a. 无效的  </li><li>compiler n. 编译程序(器)  </li><li>dot n. 点  </li><li>beep n. 蜂鸣声，嘀嘀声  </li><li>face n. 面，表面  </li><li>random a. 随机的  </li><li>facility n. 设施，装备，便利  </li><li>heading n. 标题  </li><li>asynchronous a. 异步的，非同步的  </li><li>series n. 序列，系列，串联  </li><li>individual a. 个别的，单个的  </li><li>explain v. 阐明，解释  </li><li>paste n. 湖，胶，膏  </li><li>welcome vt. &amp; n. 欢迎  </li><li>six n. &amp; a. 六(个)(的)  </li><li>early a. &amp; ad. 早期，初期  </li><li>wrap v. &amp; n. 包装，缠绕  </li><li>blue a. &amp; n. 蓝(色)，青色  </li><li>queue v. &amp; n. 排队，队列  </li><li>interrupt v. &amp; n. 中断  </li><li>respect n. &amp; vt. 遵守，关系  </li><li>converted a. 转换的，变换的  </li><li>common a. 公用的  </li><li>hyphen n. 连字符，短线  </li><li>serial a. 串行的，串联的  </li><li>loading n. 装入，加载，存放  </li><li>retain vt. 保持，维持  </li><li>setup n. 安排，准备，配置  </li><li>freeze v. 冻结，结冰  </li><li>intend vt. 打算，设计  </li><li>explanation n. 说明，注解，注释  </li><li>certain a. 确实的，确定的  </li><li>zap v. 迅速离去，击溃  </li><li>archive vt. 归档  </li><li>negative a. 负的，否定的  </li><li>image n. 图像，影像，映像  </li><li>platform n. 平台，台架  </li><li>often ad. 经常，往往，屡次  </li><li>signal n. &amp; v. 信号；发信号  </li><li>cpu 控制处理部件  </li><li>bit n. 比特；(二进制)位  </li><li>fully ad. 十分，完全  </li><li>deactivate vt. 释放，去活化  </li><li>especially ad. 特别(是)，尤其</li><li>usually ad. 通常，平常，一般  </li><li>recommend vt. 推荐，建议  </li><li>maintain vt. 维护，保养，保留  </li><li>important a. 严重的，显著的  </li><li>central a. 中央的，中心的  </li><li>addition n. 加法，增加     </li><li>anytime ad. 在任何时候  </li><li>analyst n. 分析员  </li><li>false a. 假(布尔值)，错误  </li><li>black a. &amp; n. 黑色的，黑色  </li><li>gather n. 聚集，集合  </li><li>cycle n. &amp; v. 周，周期；循环  </li><li>relative a. 相对的  </li><li>offer v. 提供，给予，呈现  </li><li>ending n. 结束  </li><li>rent v. &amp; n. 租用；裂缝  </li><li>sentence n. 句(子)  </li><li>remember v. 存储，记忆，记住  </li><li>proper a. 真的，固有的  </li><li>design v. 设计  </li><li>examine v. 检验，考试，审查  </li><li>initial a. 最初的，初始的  </li><li>corrupt v. &amp; a. 恶化；有毛病的  </li><li>buy v. 买，购买，赢得  </li><li>increase v. 增加，增大  </li><li>host n. 主机  </li><li>sample n. &amp; v. 样品，样本；抽样  </li><li>pending a. 悬而未决的，未定的  </li><li>divide v. 除  </li><li>boot n. 引导，靴  </li><li>hide v. 隐藏，隐蔽  </li><li>half n. &amp; a. &amp; ad. 一半，半个  </li><li>magenta n. &amp; a. 深红色(的)  </li><li>leading n. &amp; a. 引导(的)  </li><li>wrong a. &amp; ad. n. 错误(的)  </li><li>today n. &amp; ad. 今天  </li><li>least a. &amp; ad. 最小(的)  </li><li>opposite a. &amp; n. &amp; ad. 相反的  </li><li>white a. &amp; n. 白色(的)  </li><li>override v. &amp; n. 超越，克服  </li><li>brown a. &amp; n. 褐色(的)，棕色  </li><li>hex a. &amp; n. 六角形的  </li><li>rest n. &amp; v. 剩余，休息  </li><li>damage n. &amp; vt. 损伤，故障</li><li>instant a. 立刻的，直接的  </li><li>reserved a. 保留的，预订的  </li><li>technology n. 工艺，技术，制造学  </li><li>handle n. 处理，句柄  </li><li>apply v. 应用，适用于，作用  </li><li>stand v. 处于(状态)，保持  </li><li>payment n. 支付，付款  </li><li>kilobyte n. 千字节(kb)  </li><li>parenthesis n. 括弧，圆括号  </li><li>scan v. 扫描，扫视，搜索  </li><li>locating n. 定位，查找  </li><li>developer n. 开发者，显影剂  </li><li>murder n. 弄坏，毁掉  </li><li>flush v. 弄平，使齐平  </li><li>unlock v. 开锁，打开  </li><li>movement n. 传送，移动  </li><li>consecutive a. 连续的，连贯的  </li><li>collection n. 集合，聚集，画卷  </li><li>front a. 前面的，正面的  </li><li>addressing n. 寻址  </li><li>prefix n. 前缀  </li><li>carousel n. 圆盘传送带  </li><li>safety n. 安全，保险  </li><li>static a. 静态的，不变的  </li><li>background n. 背景，底色，基础  </li><li>product n. (乘)积，产品  </li><li>assignment n. 赋值，分配  </li><li>bad a. 坏的，不良的  </li><li>declare v. 说明  </li><li>adjust vt. 调整，调节，控制  </li><li>recognize v. 识别  </li><li>route n. 路线，路由  </li><li>respectively ad. 分别地  </li><li>unsuccessful a. 不成功的，失败的  </li><li>received a. 被接收的，公认的  </li><li>navigate v. 导航，驾驶  </li><li>considered a. 考虑过的，被尊重的  </li><li>due a. 到期的，应付(给)的  </li><li>recently ad. 近来  </li><li>room n. 房间，空间  </li><li>descend v. 下降，落下  </li><li>fact n. 事实  </li><li>alter v. 改变，修改  </li><li>track n. 磁道，轨道</li><li>precedence n. 优先权     </li><li>skeleton n. 骨架，框架  </li><li>log n. &amp; v. 记录，存入  </li><li>star n. 星形，星号  </li><li>hot a. 热的  </li><li>replaceable a. 可替换的  </li><li>accessible a. 可以使用的  </li><li>involve vt. 涉及，卷入，占用  </li><li>configure vt. 使成形  </li><li>question n. 问题  </li><li>green n. &amp; a. 绿色绿色的  </li><li>entirely ad. 完全地，彻底地  </li><li>helpful a. 有帮助的，有用的  </li><li>middle a. 中间的  </li><li>declared a. 承认的，申报的  </li><li>compress vt. 压缩，精减  </li><li>graphically ad. 用图表表示  </li><li>auto a. 自动的  </li><li>automatic a. 自动的  </li><li>aligned a. 对准的，均衡的  </li><li>anywhere ad. 在任何地方  </li><li>terminal n. 终端，端子  </li><li>door n. 舱门，入口，孔  </li><li>expire v. 终止，期满  </li><li>resolution n. 分辨率  </li><li>local a. 局部的，本地的  </li><li>semicolon n. 分号(；)  </li><li>reread vt. 重读  </li><li>overwrite v. 重写  </li><li>critical a. &amp; n. 临界的；临界值  </li><li>manager n. 管理程序  </li><li>capability n. 能力，效力，权力  </li><li>affected a. 受了影响的  </li><li>allowed a. 容许的  </li><li>border n. 边界，框，界限  </li><li>cache n. 高速缓存  </li><li>bell n. 铃，钟  </li><li>play v. 玩，奏，放音，放象  </li><li>quickly a. 快，迅速地  </li><li>fastback n. 快速返回  </li><li>answer n. &amp; v. 响应，回答；答复  </li><li>represent v. 表示，表现，代表  </li><li>difference n. 差分，差  </li><li>highest a. 最高的</li><li>project n. 项目，计划，设计  </li><li>physical a. 物理的，实际的  </li><li>matter n. 物质，内容，事情  </li><li>hercules n. 大力神，大力士  </li><li>reduce v. 减少，降低，简化  </li><li>publisher n. 出版者，发行人  </li><li>trim n. 区标，微调  </li><li>substitute v. 代替，替换，代入  </li><li>disabled a. 禁止的，报废的  </li><li>recent a. 近来的  </li><li>positive a. 正的，阳的，正片  </li><li>upgrade v. 升级，提高质量  </li><li>instance n. &amp; vt. 例子，情况；举例  </li><li>happen vi. (偶然)发生，碰巧  </li><li>elapsed vi. &amp; n. 经过  </li><li>future n. &amp; a. 将来，未来的  </li><li>midnight n. &amp; a. 午夜  </li><li>though conj. 虽然，尽管  </li><li>nor conj. 也不  </li><li>mono a. &amp; n. 单音的  </li><li>slide v. &amp; n. 滑动，滑动触头  </li><li>abort v. &amp; n. 中断，故障  </li><li>jump v. &amp; n. 转移  </li><li>toward prep. 朝(着…方向)  </li><li>throughout prep. 贯穿，整，遍  </li><li>via prep. 经过，经由  </li><li>among prep. 在…之中，中间  </li><li>neither a. &amp; pron. (两者)都不  </li><li>layer n. &amp; v. 层，涂层  </li><li>scatter v. 散射，分散，散布  </li><li>attention n. 注意(信号)  </li><li>convention n. 常规，约定，协定  </li><li>conventional a. 常规的，习惯的  </li><li>tool n. 工具，刀  </li><li>handler n. 处理程序  </li><li>processor n. 处理机，处理程序  </li><li>desktop a. 台式的  </li><li>build v. 建造，建立，组合  </li><li>windowing n. 开窗口  </li><li>development n. 开发，研制，显影  </li><li>exceed v. 超过，大于  </li><li>understand v. 懂，明白(了)，理解  </li><li>horizontal a. 水平的，横向的  </li><li>alphabetically ad. 按字母表顺序</li><li>meet v. “与”，符合，满足  </li><li>protect vt. 保护  </li><li>reserve vt. 保留，预定，预约  </li><li>clock n. 时钟，计时器，同步  </li><li>manifest vt. 表明，显示，显现  </li><li>safe a. 安全的，可靠的  </li><li>disconnect vt. 拆接，断开，拆线  </li><li>clockwise a. 顺时针的  </li><li>eliminate vt. 除去，消除，切断  </li><li>actual a. 实际的，现实的  </li><li>declaration n. 说明，申报  </li><li>probably ad. 多半，很可能  </li><li>ring n. &amp; v. 环，圈；按铃  </li><li>cover vt. 盖，罩，套  </li><li>indicator n. 指示器，指示灯  </li><li>apple n. 苹果  </li><li>icon n. 图符，象征  </li><li>consideration n. 考虑，研究，讨论  </li><li>skill n. 技巧  </li><li>picture n. 图象，画面  </li><li>layout n. 布置，布局，安排   </li><li>suggest vt. 建议，提议，暗示  </li><li>convenient a. 方便的，便利的  </li><li>instruct vt. 讲授，命令  </li><li>appendix n. 附录  </li><li>medium n. &amp; a. 媒体；中等的  </li><li>truncate vt. 截尾，截断  </li><li>inhibit vt. 禁止  </li><li>nearly ad. 近乎，差不多，几乎  </li><li>warn vt. 警告，警戒，预告  </li><li>underline n. 下划线  </li><li>register n. 寄存器  </li><li>stuff n. &amp; vt. 材料；装入  </li><li>exclude vt. 排除，除去  </li><li>destroy vt. 破坏，毁坏，打破  </li><li>calculation n. 计算，统计，估计  </li><li>angle n. 角，角度  </li><li>lexical a. 辞典的，词法的  </li><li>decide v. (使)判定，判断  </li><li>trouble n. 故障  </li><li>processing n. (数据)处理，加工  </li><li>customer n. 顾客，客户  </li><li>port n. 端口，进出口  </li><li>discuss vt. 讨论，论述</li><li>segment n. 段，片段，图块  </li><li>filing n. (文件的)整理汇集  </li><li>identically ad. 相等，恒等  </li><li>market n. 市场，行情，销路  </li><li>valuable a. 有价值的，贵重的  </li><li>limited a. 有限的，(受)限制的  </li><li>trying a. 费劲的，困难的  </li><li>heap n. 堆阵  </li><li>grey n. &amp; a. 灰色；灰色的  </li><li>permanently ad. 永久地，持久地  </li><li>accelerator n. 加速装置，加速剂  </li><li>originally ad. 原来，最初  </li><li>ability n. 性能，能力，效率  </li><li>internally ad. 在内(部)  </li><li>derelict vt. 中途淘汰  </li><li>redi rect vt. 重定向  </li><li>reside vi. 驻留  </li><li>header n. 首部，标题，报头  </li><li>extra a. 特别的，额外的  </li><li>repeated a. 重复的  </li><li>death n. 毁灭，消灭  </li><li>observe v. 观察，探测  </li><li>density n. 密度  </li><li>management n. 管理  </li><li>environmental a. 周围的，环境的  </li><li>surrounding a. 周围的，环绕的  </li><li>master a. 总要的，总的  </li><li>recursive a. 递归的，循环的  </li><li>trap n. &amp; vt. 陷阱；俘获  </li><li>dimensional n. 尺寸的，…维的  </li><li>logic n. 逻辑(线路)  </li><li>conjunction n. 逻辑乘，“与”  </li><li>identical a. 相等的，相同的  </li><li>advice n. 意见，参考说明     </li><li>meaning n. 意义，含义  </li><li>fall n. 落下，降落  </li><li>interval n. 间歇，区间  </li><li>compatibility n. 兼容性，适应性  </li><li>rule n. 规则，法则，尺  </li><li>flag n. 标志(记)，特征(位)  </li><li>criterion n. 标准，判据，准则  </li><li>office n. 办公室，局，站  </li><li>express a. 快速的  </li><li>volume n. 卷，册，体积，容量</li><li>soft a. 软的  </li><li>rated a. 额定的  </li><li>activity n. 活力，功率  </li><li>odometer n. 里程表，计程仪  </li><li>phoenix n. 凤凰，绝世珍品  </li><li>obtain v. 获得，得到  </li><li>easel n. 框，(画)架  </li><li>latter a. 后面的，最近的  </li><li>decrease v. 减少，降低，缩短  </li><li>mainframe n. 主机，大型机  </li><li>debugger n. 调试程序  </li><li>diacritical a. 区分的，辩别的  </li><li>confidential a. 机密的  </li><li>trace v. 跟踪，追踪  </li><li>division n. 除，除法，(程序)部分  </li><li>regular a. 正则的，正规的  </li><li>implicit a. 隐式的  </li><li>mention vt. &amp; n. 叙述，说到  </li><li>near ad. &amp; prep. 领近，接近  </li><li>fifth n. &amp; a. 第五，五分之一  </li><li>seven n. &amp; a. 七(个)  </li><li>whereas conj. 面，其实，既然  </li><li>review v. &amp; n. (再)检查  </li><li>whatever pron. &amp; a. 无论什么  </li><li>transform v. &amp; n. 变换，变换式  </li><li>align v. &amp; n. 定位，对准  </li><li>yellow a. &amp; n. 黄色(的)  </li><li>assist v. &amp; n. 加速，帮助  </li><li>finish v. &amp; n. 完成，结束  </li><li>micro a. &amp; n. 微的，百万分之一  </li><li>beyond prep. 超过，那边  </li><li>against prep. 反对，阻止  </li><li>upon prep. 依据，遵照  </li><li>service n. &amp; vt. 服务，业务  </li><li>little a. 小的，少量的  </li><li>exhaust v. 取尽，用完  </li><li>choice n. 选择，精品  </li><li>sounding a. 发声的  </li><li>develop v. 发展，研制，显影  </li><li>holding n. 保持，固定，存储  </li><li>alpha n. 希腊字母 α，未知数  </li><li>constant n. 常数  </li><li>warranty n. 保证(书)，授权  </li><li>stay v. 停止，停留</li><li>indus try n. 工业  </li><li>trigger n. &amp; v. 触发器；触发  </li><li>lesson n. 功课，教训  </li><li>handling n. 处理，操纵  </li><li>treat v. 处理，加工  </li><li>busy a. 忙碌的，占线的  </li><li>usage n. 应用，使用，用法  </li><li>difficult a. 困难的，不容易的  </li><li>failure n. 失效，故障，失败  </li><li>communication n. 通信  </li><li>building n. 建造，建筑，房屋  </li><li>ally v. 联合，与…关联  </li><li>exclamation n. 惊叹(号)  </li><li>turning a. 转弯的，旋转的  </li><li>whole a. 全部的，整个的  </li><li>parent n. 双亲，父代  </li><li>connection n. 连接(法)  </li><li>connectivity n. 连通性，联络性  </li><li>translation n. 翻译，变换，平移  </li><li>dynamic a. 动态的，动力的  </li><li>foreground n. 前台  </li><li>preserve vt. 保存，维持  </li><li>vice n. 缺点，毛病，错误  </li><li>necessarily ad. 必定，当然  </li><li>circle n. 圆，圈，循环，周期  </li><li>differ vi. 不同，不一致  </li><li>stationary a. 静止的，平稳的  </li><li>extract vt. 抽取，摘录，开方  </li><li>unrecognized a. 未被认出的  </li><li>thereafter ad. 此后，据此  </li><li>inverse a. 反向的，逆的     </li><li>spell v. 拼写  </li><li>limiting n. (电路参数)限制处理  </li><li>restructure vt. 调整，重新组织  </li><li>delimit vt. 定界，定义  </li><li>pay v. 付款，支付  </li><li>separately ad. 分别地  </li><li>classify vt. 分类，分级  </li><li>interfere vi. 干涉，干扰，冲突  </li><li>mind n. 愿望，想法，智力  </li><li>individually ad. 个别地，单独地  </li><li>vertical a. 垂直的，立(式)的  </li><li>undesirable a. 不合乎需要的  </li><li>lot n. 一块(批，组，套)</li><li>piece n. 一块，部分，段  </li><li>unavailable a. 不能利用的  </li><li>unlike a. 不象的，不同的  </li><li>sit v. 位于，安装  </li><li>insufficient a. 不足的，不适当的  </li><li>map n. &amp; vt. 图；映射，变址  </li><li>figure n. 数字；图，图形，形状  </li><li>prepare v. 准备  </li><li>consider v. 考虑，认为，设想  </li><li>detect vt. 检测  </li><li>convenience n. 方便，便利  </li><li>method n. 方法，方案  </li><li>mean n. &amp; vt. 平均；意味着  </li><li>salary n. &amp; vt. 薪水；发工资  </li><li>pacific a. 平稳的，太平(洋)的  </li><li>strong a. 强的  </li><li>emphasize v. 强调，着重，增强  </li><li>department n. 部门，门类，系  </li><li>forced a. 强制的，压力的  </li><li>ansi n. 美国国家标准协会  </li><li>permanent a. 永久的  </li><li>remark n. 评注，备注  </li><li>away ad. 离开，(去)掉  </li><li>concatenate vt. 连接，串联，并置  </li><li>lightning n. 闪电  </li><li>additionally ad. 另外，又  </li><li>emulate v. 仿真，模仿；赶上或超过  </li><li>tape n. 磁带，纸带  </li><li>accidentally ad. 偶然地  </li><li>concept n. 概念  </li><li>optimize v. 优选，优化  </li><li>counter n. 计数器，计算器  </li><li>expect vt. 期望，期待，盼望  </li><li>subsequently ad. 其后，其次，按着  </li><li>registration n. 登记，挂号，读数  </li><li>city n. 城市，市区  </li><li>designate vt. 任命，标志  </li><li>visible a. 可见的，明显的  </li><li>consult v. 咨询，顾问  </li><li>completely ad. 十分，完全，彻底  </li><li>virtually ad. 实际上  </li><li>substantially ad. 实质上，本质上</li><li>specialize v. (使)专门化  </li><li>fail n. 故障，失效  </li><li>primarily ad. 首先，起初，原来  </li><li>sequentially ad. 顺序地  </li><li>client n. 顾客，买主  </li><li>runtime n. 运行时间  </li><li>fix v. 固定，定影  </li><li>author n. 程序设计者，作者  </li><li>programmer n. 程序设计人员  </li><li>commercial a. 商业的，经济的  </li><li>particularly ad. 特别，格外，尤其  </li><li>low a. 低的，浅的，弱的  </li><li>sheet n. (图)表，纸，片  </li><li>employee n. 雇员  </li><li>legal a. 合法的，法律的  </li><li>qualified a. 合格的，受限制的  </li><li>context n. 上下文，来龙去脉  </li><li>involved a. 有关的  </li><li>conditional a. 有条件的  </li><li>halfway a. 中途的，不彻底的  </li><li>oriented a. 有向的，定向的  </li><li>pair n. (一)对，一双  </li><li>week n. (一)星期，(一)周  </li><li>suppressed vt. 抑制，取消     </li><li>subroutine n. 子程序  </li><li>bracketed a. 加括号的  </li><li>manually ad. 用手，手动地  </li><li>preset vt. 预置  </li><li>autoindex n. 自动变址(数)  </li><li>restrict vt. 约束，限制  </li><li>performance n. 性能，实绩  </li><li>showing n. 显示，表现  </li><li>ever ad. 在任何时候，曾经  </li><li>distribution n. 分布，分配  </li><li>denote vt. 指示，意味着，代表  </li><li>cash n. 现金  </li><li>repeatedly ad. 重复地  </li><li>replicate vt. 重复，复制  </li><li>mega n. 兆，百万  </li><li>conform vi. 遵从，符合  </li><li>rebuild v. 重建，修复，改造  </li><li>certainty n. 必然，确实  </li><li>controller n. 控制器  </li><li>pseudo a. 假的，伪的，冒充的</li><li>manage v. 管理，经营，使用  </li><li>administrator n. 管理人，行政人员  </li><li>ensemble n. 总体，集合体  </li><li>bus n. 总线，信息通路  </li><li>allowable a. 容许的，承认的  </li><li>limitations n. 限制，边界  </li><li>restriction n. 限制，约束，节流  </li><li>height n. 高度  </li><li>remainder n. 余数，余项，剩余  </li><li>traverse v. 横渡，横过，横断  </li><li>organization n. 结构，机构，公司  </li><li>resulting a. 结果的，合成的  </li><li>solution n. 解，解法，解答  </li><li>external a. 外部的  </li><li>adequate a. 足够的，充分的  </li><li>interpretability n. 配合动作性  </li><li>vary v. 变化，变换  </li><li>gap n. 间隙，间隔，缝隙  </li><li>indexing n. 变址，标引，加下标  </li><li>board n. 板，插件板  </li><li>package n. 插件，(软件)包  </li><li>insertion n. 插入，嵌入，插页   </li><li>intervene vi插入，干涉  </li><li>conflict v. 冲突，碰头  </li><li>really a. 真正地，确实地  </li><li>overflow v. 溢出，上溢  </li><li>charge n. 电荷，充电，负荷  </li><li>phone n. 电话，电话机，音素  </li><li>virtual a. 虚(拟)的，虚拟  </li><li>compose v. 组成，构成，构图  </li><li>snapshot n. 抽点打印  </li><li>sensitivity n. 灵敏度  </li><li>familiar a. 熟悉的，惯用的  </li><li>mach n. 马赫(速度单位)  </li><li>incorrect a. 错误的，不正确的  </li><li>cut v. 割，切  </li><li>lowest a. 最低的，最小的  </li><li>simple a. 简单的   </li><li>subsequent a. 后来的，其次的  </li><li>capitalized a. 大写的  </li><li>compact a. 紧致的，压缩的  </li><li>plain n. 明码  </li><li>noted a. 著名的  </li><li>desirable a. 所希望的，称心的</li><li>substitution n. 代替，替换，置换  </li><li>consume v. 消耗，使用  </li><li>forget v. 忘记  </li><li>keyed a. 键控的  </li><li>overstrike n. 过打印  </li><li>tornado n. 旋风，龙卷风  </li><li>quotation n. 引证，引用(句)  </li><li>ones n. 二进制反码  </li><li>parse vt. (语法)分析  </li><li>experience vt. &amp; n. 试验  </li><li>manufacture vt. &amp; n. 制造(业)，工业  </li><li>hundred n. &amp; a. (一)百，百个  </li><li>thousand n. &amp; a. (一)千，无数的  </li><li>twentieth n. &amp; a. 第二十(的)  </li><li>understanding n. &amp; a. 了解的，聪明的  </li><li>hand n. &amp; a. 手，手工(动)的  </li><li>restricting n. &amp; a. 限制(的)     </li><li>fancy n. &amp; a. 想象(的)，精制的  </li><li>wide a. &amp; ad. 宽的，广阔的  </li><li>fine a. &amp; ad. 微小的，细的  </li><li>worry v. &amp; n. (使)烦恼  </li><li>somewhat pron. &amp; ad. 稍微，有点  </li><li>quiet a. &amp; n. 静态，静止的  </li><li>purge v. &amp; n. 清除  </li><li>mod a. &amp; n. 时髦的  </li><li>numeral n. &amp; n. 数字的，数码  </li><li>whichever a. &amp; pron. 无论哪个  </li><li>purchase n. &amp; v. 购买  </li><li>care n. &amp; v. 关心，注意  </li><li>watch n. &amp; v. 监视，观测  </li><li>endeavor n. &amp; v. 尽力，力图  </li><li>mismatch n. &amp; vt. 失配，不匹配  </li><li>printout n. 印出  </li><li>ellipsis n. 省略符号，省略(法)  </li><li>ship n. 舰，船  </li><li>british a. &amp; n. 英国的；英国人  </li><li>parallel a. 并行  </li><li>custom a. &amp; n. 常规的，惯例；用户  </li><li>congratulation n. 祝贺  </li><li>protection n. 保护  </li><li>glass n. 玻璃  </li><li>pattern n. 模式  </li><li>insure v. 保证，保障  </li><li>stopping n. 停止，制动(状态)</li><li>factory n. 工厂，制造厂  </li><li>implement n. &amp; vt. 工具；执行，实现  </li><li>effort n. 工作，研究计划  </li><li>worker n. 工作人员  </li><li>ampersand n. &amp;号(and)  </li><li>deal v. 处理，分配，交易  </li><li>power n. 功率，电源，幂  </li><li>difficulty n. 困难，难点  </li><li>lose n. 失去，损失  </li><li>magic n. 魔术，幻术  </li><li>proprietary a. 专有的  </li><li>aware a. 知道的，察觉到的  </li><li>numerous a. 为数众多的，无数的  </li><li>vowel n. 元音，母音  </li><li>closely a. 精密地，仔细地  </li><li>accuracy n. 精确度，准确度  </li><li>traditional a. 传统的，惯例的  </li><li>synchronization n. 同步  </li><li>fragment n. 片段，段，分段  </li><li>primary a. 原始的，主要的  </li><li>safely ad. 安全地，确实地  </li><li>habit n. 习惯  </li><li>comprise vt. 包括，由…组成  </li><li>landler n. 兰德勒舞曲  </li><li>absence n. 缺少，没有  </li><li>revolutionize vt. 变革，彻底改革  </li><li>constantly ad. 不变地，经常地  </li><li>seldom ad. 不常，很少，难得  </li><li>unfortunately ad. 不幸，遗憾地  </li><li>expunge vt. 擦除，删掉  </li><li>security n. 安全性，保密性  </li><li>touch v. &amp; n. 按，揿，触；触力  </li><li>contrast n. 反差，对比，对比度  </li><li>invent vt. 创造，想象  </li><li>reflect v. 反射  </li><li>undone a. 未完成的  </li><li>unshift v. 未移动，不移档  </li><li>complex a. &amp; n. 复杂的；复数  </li><li>complexity n. 复杂性，复杂度  </li><li>creation n. 创造，创作  </li><li>unknown a. 未知的，无名的  </li><li>greatly ad. 大大地，非常  </li><li>cost n. 值，价值，成本  </li><li>degrade v. 降低，减少，递降 </li><li>suggestion n. 暗示，提醒  </li><li>real n. 实数，实的，实型  </li><li>experimentation n. 实验(工作，法)  </li><li>experiment n. 实验，试验(研究)  </li><li>substantial a. 实质的，真正的  </li><li>solely ad. 独自，单独，只  </li><li>announce vt. 发表，宣布  </li><li>squeeze v. 挤压  </li><li>distribute vt. 分布，配线，配给  </li><li>negate vt. 否定，求反，“非”     </li><li>capture vt. 俘获，捕捉  </li><li>father n. 父，上层(树节点的)  </li><li>reinstate vt. 复原，恢复  </li><li>tutorial a. 指导的  </li><li>nicety n. 细节，精细  </li><li>roll n. &amp; v. 案卷；卷动，滚动  </li><li>exponent n. 指数，阶，幂  </li><li>exponential a. 指数的，幂的，阶的  </li><li>prefer vt. 更喜欢，宁愿  </li><li>complicated v. 使复杂化，使混乱  </li><li>reactivate v. 使恢复活动  </li><li>spread v. 展开，传播  </li><li>synchronize v. 使同步  </li><li>formation n. 构造，结构，形成  </li><li>widely ad. 广泛，很远  </li><li>comma n. 逗号“, ”，逗点  </li><li>very ad. 很，非常，最  </li><li>unnecessary a. 不必要的，多余的  </li><li>unchanged a. 不变的  </li><li>cross n. 交叉，十字准线  </li><li>yet ad. 还，仍然，至今  </li><li>slowly ad. 缓慢地  </li><li>inexperienced a. 不熟练的，外行的  </li><li>noninteractive a. 不相关的，非交互的  </li><li>unwanted a. 不需要的，多余的  </li><li>unused a. 不用的，空着的  </li><li>unmarked a. 没有标记的  </li><li>nothing n. 没有任何东西  </li><li>chart n. 图(表)  </li><li>dearly ad. 极，非常，昂贵地  </li><li>extremely ad. 极端地，非常  </li><li>hardly ad. 几乎不，未必  </li><li>placement n. 布局  </li><li>think v. 考虑，以为，判断</li><li>technical a. 技术的，专业的  </li><li>idea n. 思想，观念  </li><li>stamp n. 图章  </li><li>indirectly ad. 间接地  </li><li>equation n. 方程，方程式  </li><li>smooth v. &amp; a. 平滑；平滑的  </li><li>attached a. 附加的  </li><li>average n. 平均，平均数  </li><li>quietly ad. 静静地  </li><li>discard v. 删除，废除，放弃  </li><li>never ad. 决不，从来不  </li><li>initiate vt. 开创，起始  </li><li>powerful a. 强大的，大功率的  </li><li>purpose n. &amp; vt. 目的，用途；打算  </li><li>regard vt. 考虑，注意，关系  </li><li>daily a. 每日的，日常的  </li><li>possibly ad. 可能地，合理地  </li><li>potentially ad. 可能地，大概地  </li><li>moreover ad. 况且，并且，此外  </li><li>american a. 美国的  </li><li>guard v. &amp; n. 防护；防护装置  </li><li>world n. 世界，全球  </li><li>independent a. 独立的  </li><li>independently a. 独立地  </li><li>continuously ad. 连续不断地  </li><li>shield v. 屏蔽，罩，防护  </li><li>glance n. 闪烁  </li><li>happening n. 事件，偶然发生的事  </li><li>transaction n. 事项，事务，学报  </li><li>emulation n. 仿真，仿效  </li><li>strike v. 敲，击  </li><li>dump v. (内存信息)转储  </li><li>occasionally ad. 偶尔(地)，不时  </li><li>tension n. 张力  </li><li>probable a. 概率的，可能的  </li><li>talent n. 才能，技能，人才  </li><li>financial a. 财务的，金融的  </li><li>meter n. 仪表，米  </li><li>logged a. 记录的，浸透的  </li><li>ware n. 仪器，商品  </li><li>disregard vt. 轻视，把…忽略不计  </li><li>waiting a. 等待的  </li><li>preceding a. 先的，以前的  </li><li>comparison n. 比较，对照 </li><li>advanced a. 先进的，预先的  </li><li>rate n. 比率，速率，费率  </li><li>fly v. 飞，跳过  </li><li>programmable a. 可编程的  </li><li>definable a. 可定义的，可确定的  </li><li>readable a. 可读的  </li><li>recoverable a. 可恢复的，可回收的  </li><li>possibility n. 可能性  </li><li>finisher n. 成品机  </li><li>applicable a. 可适用的，合适的  </li><li>printable a. 可印刷的  </li><li>executable a. 可执行的  </li><li>essentially ad. 实质上，本来  </li><li>confuse vt. 使混乱，干扰  </li><li>familiarize vt. 使熟悉，使通俗化  </li><li>employe vt. 使用，花费  </li><li>suitable a. 适合的，相适宜的  </li><li>generation n. (世)代，(发展)阶段  </li><li>quality n. 质量，性质，属性  </li><li>defective a. 故障的，有毛病的  </li><li>interpretable a. 彼此协作的  </li><li>interest n. 兴趣，注意，影响  </li><li>fourscore n. 八十  </li><li>teach v. 教，讲授  </li><li>procedural a. 程序上的  </li><li>phrase n. 短语，成语  </li><li>specifically ad. 特别地，逐一地  </li><li>penalty n. 惩罚，罚款，负担  </li><li>violate vt. 违犯，妨碍，破坏  </li><li>indefinitely ad. 无限地，无穷地  </li><li>major a. 较大的，主要的  </li><li>higher a. 较高的  </li><li>wise a. 聪明的  </li><li>becoming a. 合适的，相称的  </li><li>equally ad. 相等地，相同地  </li><li>enjoy vt. 享受，欣赏，喜爱  </li><li>forth ad. 向前  </li><li>disappear vi. 消失  </li><li>crop v. 切，剪切  </li><li>diagonally ad. 斜(对)  </li><li>labeled a. 有标号的  </li><li>decision n. 判定，决定，决策  </li><li>effective a. 有效的  </li><li>significant a. 有效的，有意义的</li><li>avail v. &amp; n. 有益于；利益  </li><li>hang v. 中止，暂停，挂起  </li><li>craze n. &amp; v. 裂纹开裂  </li><li>consequently ad. 因此，从而  </li><li>introduce vt. 引进，引导  </li><li>team n. 队，小组  </li><li>visual a. 视觉的，直观的  </li><li>acknowledgment n.  接收(收妥)，承认  </li><li>efficiently ad. 有效地  </li><li>predict vt. 预测，预言  </li><li>anticipate vt. 预先考虑，抢…先  </li><li>bypass n. 旁路  </li><li>nature n. 自然，天然  </li><li>natural a. 自然的  </li><li>grant vt. 允许，授权  </li><li>logarithm n. 对数  </li><li>reappears vi. 再现，重现  </li><li>reload vt. 再装入  </li><li>occupy vt. 占有，充满  </li><li>photograph n. 照片；v.照相  </li><li>terminating n. 终止，终结，收信  </li><li>resolve v. 分辨，解像  </li><li>unsafe v. 恢复  </li><li>separator n. 分隔符  </li><li>hierarchical a. 分级的，分层的  </li><li>assortment n. 种类，花色品种  </li><li>growing n. 分类，分组，成群  </li><li>discussion n. 讨论，商议，论述  </li><li>alphabet n. 字母，字母表  </li><li>scattered a. 分散的  </li><li>eventually ad. 终于，最后  </li><li>finally ad. 终于，最后  </li><li>subgroup n. 分组，子群  </li><li>superimpose vt. 重叠，叠加  </li><li>reorganization vt. 重排，改组  </li><li>rewrite vt. 重写，再生  </li><li>university n. (综合性)大学  </li><li>deter vt. 阻止，拦住，妨碍     </li><li>pool n. &amp; v. 池，坑；共享  </li><li>moment n. 矩，力矩，磁矩  </li><li>shut v. 关闭  </li><li>closed a. 关闭的，闭迹  </li><li>respond v. 回答，响应  </li><li>repeating n. 重复，循环</li><li>repetitive a. 重复的  </li><li>reenter v. 重新进入  </li><li>rearrange v. 重新整理，重新排序  </li><li>rectangular a. 矩形的，成直角的  </li><li>tag n. 特征，标记，标识符  </li><li>suppose v. 假定，推测  </li><li>supposed a. 假定的，推测的  </li><li>manipulating v. 操纵，操作  </li><li>operator n. 操作员，运算符  </li><li>masking n. 掩蔽，屏蔽  </li><li>price n. 价格  </li><li>demonstrate v. 论证，证明，证实  </li><li>importance n. 价值，重要  </li><li>pipe n. 管，导管  </li><li>overall a. 总共的，全部的  </li><li>turnkey n. 总控钥匙  </li><li>restricted a. 受限制的，受约束的  </li><li>suspension n. 暂停，中止，挂起  </li><li>seamless a. 无缝的  </li><li>clipper n. 限幅器，钳位器  </li><li>unsigned a. 无符号的  </li><li>unformatted a. 无格式的  </li><li>infinite a. 无限的，无穷的  </li><li>useless a. 无用的  </li><li>limiter n. 限制(幅)器  </li><li>mountain n. 高山，山脉  </li><li>redundant a. 冗余的  </li><li>dependent a. 相关的  </li><li>contiguous a. 相连的，邻接的  </li><li>consistent a. 相容的，一致的  </li><li>multiprocessing n. 多重处理，多道处理  </li><li>architecture n. 结构，构造  </li><li>structural a. 结构的，结构上的  </li><li>outcome n. 结果，成果，输出  </li><li>association n. 结合，协会，联想  </li><li>opinion n. 意见，见解，判断  </li><li>interpret v. 解释  </li><li>explanatory a. 解释(性)的  </li><li>assemble v. 汇编，装配  </li><li>assembler n. 汇编程序  </li><li>cad 计算机辅助设计  </li><li>arithmetic n. 算术，运算  </li><li>varying a. 变化的，可变的  </li><li>representative a. 典型的，表示的</li><li>typical a. 典型的，标准的  </li><li>sufficient a. 充足的，足够的  </li><li>blast v. &amp; n. 清除；爆炸  </li><li>clean a. 清洁的，干净的  </li><li>caret n. 插入符号  </li><li>socket n. 插座，插孔，插口  </li><li>stated a. 规定的  </li><li>protocol n. 规约，协议，规程  </li><li>presence n. 存在，有  </li><li>telephone n. 电话  </li><li>social a. 社会的  </li><li>equipment n. 设备，装备，仪器  </li><li>lending n. &amp; a. 借给，出租；借出的  </li><li>book n. 书，手册，源程序块  </li><li>circumstances n. 情况，环境，细节  </li><li>situation n. 情况，状况，势态  </li><li>desk n. 书桌，控制台，面板  </li><li>please v. 请  </li><li>mixture n. 混合物  </li><li>representation n. 表示  </li><li>esoteric a. 深奥的，奥秘的  </li><li>depth n. 深度，浓度(颜色的)  </li><li>final a. 最终的  </li><li>physically a. 物理上，实际上  </li><li>aid n. 帮助，辅助程序  </li><li>successive a. 逐次的，相继的  </li><li>succession n. 逐次性，连续性     </li><li>unpack v. 拆开，卸，分开  </li><li>chunk n. 厚块，大部分  </li><li>alignment n. 序列，成直线  </li><li>typewriter n. 打字机  </li><li>big a. 大的，重要的  </li><li>tone n. 音调，音色，色调  </li><li>sensitive a. 敏感的，灵敏的  </li><li>reduction n. 减化，还原，减少  </li><li>indentation n. 缩进，缩排  </li><li>terminology n. 术语  </li><li>ascending a. 增长的，向上的  </li><li>augment v. 增加，添加，扩充  </li><li>increment n. 增量，加１，递增  </li><li>gain n. 增益(系数)  </li><li>stream n. 流  </li><li>obsolete a. 作废的，过时的  </li><li>accommodate v. 调节，适应  老男孩 </li><li>motif n. 主题，要点，特色  </li><li>subject n. 主题，源  </li><li>job n. 作业  </li><li>differentiate v. 区别，分辨  </li><li>distinction n. 区别，相异，特性  </li><li>distinguish v. 区别，辨识  </li><li>locking n. 锁定，加锁  </li><li>progress n. 进度，进展  </li><li>fundamental a. 基本的，根本的  </li><li>basis n. 基础，座  </li><li>underlying a. 基础的，根本的  </li><li>sound n. 声音，音响  </li><li>vital a. 生动的，不可缺少的  </li><li>national a. 国家的  </li><li>sale n. 销售，销路  </li><li>agree v. 符合，相同  </li><li>iterative a. 迭代的  </li><li>inclusive a. 包括的，内含的  </li><li>charm n. 吸引力  </li><li>hit v. 命中，瞬时干扰  </li><li>course n. 过程，航向，课程  </li><li>exceeded a. 过度的，非常的  </li><li>numerical a. 数量的，数字的  </li><li>digital a. 数字的  </li><li>combo n. 二进位组合码  </li><li>cord n. 绳子，电线</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库进阶玩法</title>
      <link href="/2024/12/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95/"/>
      <url>/2024/12/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1-创建用户并限制登录来源"><a href="#1-创建用户并限制登录来源" class="headerlink" title="1. 创建用户并限制登录来源"></a>1. <strong>创建用户并限制登录来源</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;secure_password&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="详细说明："><a href="#详细说明：" class="headerlink" title="详细说明："></a>详细说明：</h4><ul><li><p>**<code>CREATE USER</code>**：用于创建一个新的 MySQL 用户。</p></li><li><p><code>&#39;UserZood&#39;@&#39;192.168.20.%&#39;</code></p><p>：</p><ul><li><code>&#39;UserZood&#39;</code> 是用户名。</li><li><code>&#39;192.168.20.%&#39;</code> 表示此用户只能从内网的 <code>192.168.20.0/24</code> 段登录（<code>%</code> 是通配符，匹配任何主机）。</li></ul></li><li><p>**<code>IDENTIFIED BY</code>**：为用户设置初始密码。</p></li></ul><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul><li><p>如果不加限制，默认允许从任何 IP 地址登录，表示为 <code>&#39;UserZood&#39;@&#39;%&#39;</code>。</p></li><li><p>创建用户时，若主机部分有误，可以通过以下语句删除用户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="2-设置密码过期时间"><a href="#2-设置密码过期时间" class="headerlink" title="2. 设置密码过期时间"></a>2. <strong>设置密码过期时间</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span> PASSWORD EXPIRE <span class="type">INTERVAL</span> <span class="number">7</span> <span class="keyword">DAY</span>;</span><br></pre></td></tr></table></figure><h4 id="详细说明：-1"><a href="#详细说明：-1" class="headerlink" title="详细说明："></a>详细说明：</h4><ul><li><p>**<code>ALTER USER</code>**：修改现有用户的属性。</p></li><li><p><code>PASSWORD EXPIRE INTERVAL 7 DAY</code></p><p>：指定密码有效期为 7 天。</p><ul><li>用户在 7 天后需要更改密码，否则无法登录。</li></ul></li></ul><h4 id="可选的密码策略（MySQL-8-0-及更高版本）："><a href="#可选的密码策略（MySQL-8-0-及更高版本）：" class="headerlink" title="可选的密码策略（MySQL 8.0 及更高版本）："></a>可选的密码策略（MySQL 8.0 及更高版本）：</h4><ul><li><p>强制用户在下次登录时更改密码</p><p>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span> PASSWORD EXPIRE;</span><br></pre></td></tr></table></figure></li><li><p>启用密码历史记录，防止用户重复使用旧密码</p><p>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> password_history <span class="operator">=</span> <span class="number">3</span>; <span class="comment">-- 记录 3 个旧密码</span></span><br></pre></td></tr></table></figure></li><li><p>设置密码复杂性要求</p><p>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> validate_password.policy <span class="operator">=</span> <span class="string">&#x27;MEDIUM&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> validate_password.length <span class="operator">=</span> <span class="number">12</span>; <span class="comment">-- 最少 12 个字符</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="3-限制更新操作次数"><a href="#3-限制更新操作次数" class="headerlink" title="3. 限制更新操作次数"></a>3. <strong>限制更新操作次数</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> USAGE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span> <span class="keyword">WITH</span> MAX_UPDATES_PER_HOUR <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="详细说明：-2"><a href="#详细说明：-2" class="headerlink" title="详细说明："></a>详细说明：</h4><ul><li><p>**<code>GRANT USAGE</code>**：授予用户使用数据库的基础权限，不包括数据操作权限（如 <code>SELECT</code>、<code>INSERT</code> 等）。</p></li><li><p><code>WITH MAX_UPDATES_PER_HOUR</code></p><p>：限制用户每小时能执行的 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE</span><br></pre></td></tr></table></figure><p> 操作次数。</p><ul><li>这里设置为 10，即用户每小时最多更新 10 条记录。</li></ul></li></ul><h4 id="实际场景："><a href="#实际场景：" class="headerlink" title="实际场景："></a>实际场景：</h4><ul><li><p>需要确保用户有 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE</span><br></pre></td></tr></table></figure><p> 权限，具体表的权限需要单独授予，例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">UPDATE</span> <span class="keyword">ON</span> my_database.my_table <span class="keyword">TO</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="4-限制查询操作次数"><a href="#4-限制查询操作次数" class="headerlink" title="4. 限制查询操作次数"></a>4. <strong>限制查询操作次数</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> USAGE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;UserZood&#x27;</span>@<span class="string">&#x27;192.168.20.%&#x27;</span> <span class="keyword">WITH</span> MAX_QUERIES_PER_HOUR <span class="number">30</span>;</span><br></pre></td></tr></table></figure><h4 id="详细说明：-3"><a href="#详细说明：-3" class="headerlink" title="详细说明："></a>详细说明：</h4><ul><li><p><code>WITH MAX_QUERIES_PER_HOUR</code></p><p>：限制用户每小时最多执行的查询语句数量。</p><ul><li>这里设置为 30，即用户每小时最多执行 30 次查询操作。</li></ul></li></ul><h4 id="组合限制："><a href="#组合限制：" class="headerlink" title="组合限制："></a>组合限制：</h4><ul><li><pre><code>WITH<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> 子句支持组合多个限制：</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">GRANT USAGE ON *.* TO &#x27;UserZood&#x27;@&#x27;192.168.20.%&#x27;</span><br><span class="line">WITH MAX_QUERIES_PER_HOUR 30</span><br><span class="line">     MAX_UPDATES_PER_HOUR 10</span><br><span class="line">     MAX_CONNECTIONS_PER_HOUR 5;</span><br></pre></td></tr></table></figure>- `MAX_CONNECTIONS_PER_HOUR`：限制用户每小时的连接次数。</code></pre></li></ul><hr><h3 id="5-查询资源限制配置"><a href="#5-查询资源限制配置" class="headerlink" title="5. 查询资源限制配置"></a>5. <strong>查询资源限制配置</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">User</span>, Host, max_updates_per_hour, max_queries_per_hour, max_connections_per_hour</span><br><span class="line"><span class="keyword">FROM</span> mysql.user</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">User</span> <span class="operator">=</span> <span class="string">&#x27;UserZood&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><ul><li>查询用户的资源限制配置，以确认设置是否生效。</li><li>表 <code>mysql.user</code> 存储了用户的权限和资源限制。</li></ul><hr><h3 id="6-刷新权限"><a href="#6-刷新权限" class="headerlink" title="6. 刷新权限"></a>6. <strong>刷新权限</strong></h3><p>语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h4 id="说明：-1"><a href="#说明：-1" class="headerlink" title="说明："></a>说明：</h4><ul><li>修改用户权限或资源限制后，使用此命令使更改立即生效。</li><li>大多数情况下，<code>CREATE USER</code> 和 <code>GRANT</code> 语句会自动刷新权限，但手动刷新能确保一致性。</li></ul><hr><h3 id="7-扩展：使用触发器实现更灵活的限制"><a href="#7-扩展：使用触发器实现更灵活的限制" class="headerlink" title="7. 扩展：使用触发器实现更灵活的限制"></a>7. <strong>扩展：使用触发器实现更灵活的限制</strong></h3><p>如果你的 MySQL 版本不支持上述资源限制，可以使用触发器实现自定义限制。例如：</p><ul><li><p>限制每小时的更新操作：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> limit_update_count</span><br><span class="line">BEFORE <span class="keyword">UPDATE</span> <span class="keyword">ON</span> my_database.my_table</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> cnt <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">SET</span> <span class="variable">@current_hour</span> <span class="operator">=</span> <span class="keyword">HOUR</span>(NOW());</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> cnt</span><br><span class="line">    <span class="keyword">FROM</span> update_log</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="keyword">USER</span>() <span class="keyword">AND</span> <span class="keyword">hour</span> <span class="operator">=</span> <span class="variable">@current_hour</span>;</span><br><span class="line">    IF cnt <span class="operator">&gt;=</span> <span class="number">10</span> <span class="keyword">THEN</span></span><br><span class="line">        SIGNAL <span class="keyword">SQLSTATE</span> <span class="string">&#x27;45000&#x27;</span></span><br><span class="line">        <span class="keyword">SET</span> MESSAGE_TEXT <span class="operator">=</span> <span class="string">&#x27;Update limit reached for this hour&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>使用 <code>GRANT USAGE</code> 和 <code>WITH</code> 语句简单直观，但需要确保 MySQL 版本支持这些资源限制功能。</li><li>可以结合 <code>ALTER USER</code> 和全局变量实现密码策略。</li><li>使用触发器或审计日志可以实现更灵活的业务规则限制，但复杂度较高，适用于更定制化的需求。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MapReduce中的数据类型</title>
      <link href="/2024/12/09/MapReduce%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2024/12/09/MapReduce%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>Hadoop MapReduce 提供了一组官方的数据类型，这些类型被设计为可序列化（实现了 Hadoop 的 <code>Writable</code> 接口）并可用于分布式环境。以下是 Hadoop MapReduce 中的主要官方数据类型分类及说明：</p><hr><h3 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1. 基本数据类型"></a><strong>1. 基本数据类型</strong></h3><table><thead><tr><th>数据类型</th><th>描述</th><th>对应的 Java 类型</th></tr></thead><tbody><tr><td><strong><code>IntWritable</code></strong></td><td>表示一个可序列化的整数</td><td><code>int</code></td></tr><tr><td><strong><code>LongWritable</code></strong></td><td>表示一个可序列化的长整数</td><td><code>long</code></td></tr><tr><td><strong><code>FloatWritable</code></strong></td><td>表示一个可序列化的浮点数</td><td><code>float</code></td></tr><tr><td><strong><code>DoubleWritable</code></strong></td><td>表示一个可序列化的双精度浮点数</td><td><code>double</code></td></tr><tr><td><strong><code>BooleanWritable</code></strong></td><td>表示一个可序列化的布尔值</td><td><code>boolean</code></td></tr><tr><td><strong><code>ByteWritable</code></strong></td><td>表示一个可序列化的字节</td><td><code>byte</code></td></tr><tr><td><strong><code>Text</code></strong></td><td>表示一个可序列化的字符串（替代 <code>String</code> 类型）</td><td><code>String</code></td></tr><tr><td><strong><code>NullWritable</code></strong></td><td>表示空值，通常用于不需要值的场景</td><td>无（空值）</td></tr></tbody></table><hr><h3 id="2-集合数据类型"><a href="#2-集合数据类型" class="headerlink" title="2. 集合数据类型"></a><strong>2. 集合数据类型</strong></h3><table><thead><tr><th>数据类型</th><th>描述</th><th>对应的 Java 类型</th></tr></thead><tbody><tr><td><strong><code>ArrayWritable</code></strong></td><td>表示一个可序列化的数组，元素类型需是 <code>Writable</code></td><td><code>Writable[]</code></td></tr><tr><td><strong><code>MapWritable</code></strong></td><td>表示一个可序列化的键值对映射，键和值需是 <code>Writable</code></td><td><code>Map&lt;Writable, Writable&gt;</code></td></tr><tr><td><strong><code>SortedMapWritable</code></strong></td><td>表示一个有序的键值对映射，键和值需是 <code>Writable</code></td><td><code>SortedMap&lt;Writable, Writable&gt;</code></td></tr></tbody></table><hr><h3 id="3-复合数据类型"><a href="#3-复合数据类型" class="headerlink" title="3. 复合数据类型"></a><strong>3. 复合数据类型</strong></h3><table><thead><tr><th>数据类型</th><th>描述</th><th>对应的 Java 类型</th></tr></thead><tbody><tr><td><strong><code>BytesWritable</code></strong></td><td>表示一个可序列化的字节数组</td><td><code>byte[]</code></td></tr><tr><td><strong><code>GenericWritable</code></strong></td><td>支持多种数据类型的通用序列化，继承后可自定义支持的类型</td><td>任何 <code>Writable</code> 类型</td></tr><tr><td><strong><code>TupleWritable</code></strong></td><td>表示一个可序列化的多字段元组，字段类型需是 <code>Writable</code></td><td><code>Writable[]</code></td></tr></tbody></table><hr><h3 id="4-特殊数据类型"><a href="#4-特殊数据类型" class="headerlink" title="4. 特殊数据类型"></a><strong>4. 特殊数据类型</strong></h3><table><thead><tr><th>数据类型</th><th>描述</th><th>对应的 Java 类型</th></tr></thead><tbody><tr><td><strong><code>NullWritable</code></strong></td><td>表示空值，通常用于不需要输出值或输入值的场景</td><td>无（表示空值）</td></tr></tbody></table><hr><h3 id="特点与使用场景"><a href="#特点与使用场景" class="headerlink" title="特点与使用场景"></a><strong>特点与使用场景</strong></h3><ol><li><strong>轻量级设计</strong>：Hadoop 的数据类型是轻量级的，可通过实现 <code>Writable</code> 接口高效进行序列化和反序列化。</li><li><strong>网络传输优化</strong>：这些类型是 Hadoop 原生支持的，经过优化以适应分布式系统中大量数据的网络传输需求。</li><li><strong>灵活组合</strong>：集合类如 <code>ArrayWritable</code> 和 <code>MapWritable</code> 允许用户灵活表示复杂的数据结构。</li></ol><hr><h3 id="实际应用示例"><a href="#实际应用示例" class="headerlink" title="实际应用示例"></a><strong>实际应用示例</strong></h3><ul><li><strong>单词计数任务</strong>：<ul><li>使用 <code>Text</code> 作为 Mapper 的输出键类型（单词）。</li><li>使用 <code>IntWritable</code> 作为 Mapper 的输出值类型（计数）。</li></ul></li><li><strong>组合键任务</strong>：<ul><li>使用 <code>MapWritable</code> 或 <code>ArrayWritable</code> 来存储多个字段信息。</li></ul></li></ul><p>Hadoop 的这些官方数据类型覆盖了大多数 MapReduce 应用场景，可以根据具体需求进行选择和扩展。</p>]]></content>
      
      
      
        <tags>
            
            <tag> MapReduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>佛祖保佑，永无Bug注释</title>
      <link href="/2024/12/02/%E4%BD%9B%E7%A5%96%E4%BF%9D%E4%BD%91%EF%BC%8C%E6%B0%B8%E6%97%A0Bug%E6%B3%A8%E9%87%8A/"/>
      <url>/2024/12/02/%E4%BD%9B%E7%A5%96%E4%BF%9D%E4%BD%91%EF%BC%8C%E6%B0%B8%E6%97%A0Bug%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="1，佛祖保佑-永无BUG"><a href="#1，佛祖保佑-永无BUG" class="headerlink" title="1，佛祖保佑 永无BUG"></a>1，佛祖保佑 永无BUG</h2><ul><li>第一种：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *                             _ooOoo_</span><br><span class="line"> *                            o8888888o</span><br><span class="line"> *                            88&quot; . &quot;88</span><br><span class="line"> *                            (| -_- |)</span><br><span class="line"> *                            O\  =  /O</span><br><span class="line"> *                         ____/`---&#x27;\____</span><br><span class="line"> *                       .&#x27;  \\|     |//  `.</span><br><span class="line"> *                      /  \\|||  :  |||//  \</span><br><span class="line"> *                     /  _||||| -:- |||||-  \</span><br><span class="line"> *                     |   | \\\  -  /// |   |</span><br><span class="line"> *                     | \_|  &#x27;&#x27;\---/&#x27;&#x27;  |   |</span><br><span class="line"> *                     \  .-\__  `-`  ___/-. /</span><br><span class="line"> *                   ___`. .&#x27;  /--.--\  `. . __</span><br><span class="line"> *                .&quot;&quot; &#x27;&lt;  `.___\_&lt;|&gt;_/___.&#x27;  &gt;&#x27;&quot;&quot;.</span><br><span class="line"> *               | | :  `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line"> *               \  \ `-.   \_ __\ /__ _/   .-` /  /</span><br><span class="line"> *          ======`-.____`-.___\_____/___.-`____.-&#x27;======</span><br><span class="line"> *                             `=---=&#x27;</span><br><span class="line"> *          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line"> *                     佛祖保佑        永无BUG</span><br><span class="line"> *            佛曰:</span><br><span class="line"> *                   写字楼里写字间，写字间里程序员；</span><br><span class="line"> *                   程序人员写程序，又拿程序换酒钱。</span><br><span class="line"> *                   酒醒只在网上坐，酒醉还来网下眠；</span><br><span class="line"> *                   酒醉酒醒日复日，网上网下年复年。</span><br><span class="line"> *                   但愿老死电脑间，不愿鞠躬老板前；</span><br><span class="line"> *                   奔驰宝马贵者趣，公交自行程序员。</span><br><span class="line"> *                   别人笑我忒疯癫，我笑自己命太贱；</span><br><span class="line"> *                   不见满街漂亮妹，哪个归得程序员？</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><ul><li>第二种：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//                          _ooOoo_                               //</span></span><br><span class="line"><span class="comment">//                         o8888888o                              //</span></span><br><span class="line"><span class="comment">//                         88&quot; . &quot;88                              //</span></span><br><span class="line"><span class="comment">//                         (| ^_^ |)                              //</span></span><br><span class="line"><span class="comment">//                         O\  =  /O                              //</span></span><br><span class="line"><span class="comment">//                      ____/`---&#x27;\____                           //</span></span><br><span class="line"><span class="comment">//                    .&#x27;  \\|     |//  `.                         //</span></span><br><span class="line"><span class="comment">//                   /  \\|||  :  |||//  \                        //</span></span><br><span class="line"><span class="comment">//                  /  _||||| -:- |||||-  \                       //</span></span><br><span class="line"><span class="comment">//                  |   | \\\  -  /// |   |                       //</span></span><br><span class="line"><span class="comment">//                  | \_|  &#x27;&#x27;\---/&#x27;&#x27;  |   |                       //</span></span><br><span class="line"><span class="comment">//                  \  .-\__  `-`  ___/-. /                       //</span></span><br><span class="line"><span class="comment">//                ___`. .&#x27;  /--.--\  `. . ___                     //</span></span><br><span class="line"><span class="comment">//              .&quot;&quot; &#x27;&lt;  `.___\_&lt;|&gt;_/___.&#x27;  &gt;&#x27;&quot;&quot;.                  //</span></span><br><span class="line"><span class="comment">//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //</span></span><br><span class="line"><span class="comment">//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //</span></span><br><span class="line"><span class="comment">//      ========`-.____`-.___\_____/___.-`____.-&#x27;========         //</span></span><br><span class="line"><span class="comment">//                           `=---=&#x27;                              //</span></span><br><span class="line"><span class="comment">//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //</span></span><br><span class="line"><span class="comment">//         佛祖保佑       永无BUG     永不修改                       //</span></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////</span></span><br></pre></td></tr></table></figure><h2 id="2，神兽保佑，永无Bug"><a href="#2，神兽保佑，永无Bug" class="headerlink" title="2，神兽保佑，永无Bug"></a>2，神兽保佑，永无Bug</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ┏┓　　　┏┓</span></span><br><span class="line"><span class="comment">// ┏┛┻━━━┛┻┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃</span></span><br><span class="line"><span class="comment">// ┃　　　━　　　┃</span></span><br><span class="line"><span class="comment">// ┃　┳┛　┗┳　┃</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃</span></span><br><span class="line"><span class="comment">// ┃　　　┻　　　┃</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃</span></span><br><span class="line"><span class="comment">// ┗━┓　　　┏━┛</span></span><br><span class="line"><span class="comment">// ┃　　　┃ 神兽保佑</span></span><br><span class="line"><span class="comment">// ┃　　　┃ 代码无BUG！</span></span><br><span class="line"><span class="comment">// ┃　　　┗━━━┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┣┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┏┛</span></span><br><span class="line"><span class="comment">// ┗┓┓┏━┳┓┏┛</span></span><br><span class="line"><span class="comment">// ┃┫┫　┃┫┫</span></span><br><span class="line"><span class="comment">// ┗┻┛　┗┻┛</span></span><br></pre></td></tr></table></figure><h2 id="3，美女保佑，永无Bug"><a href="#3，美女保佑，永无Bug" class="headerlink" title="3，美女保佑，永无Bug"></a>3，美女保佑，永无Bug</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                       .::::.</span></span><br><span class="line"><span class="comment">//                     .::::::::.</span></span><br><span class="line"><span class="comment">//                    :::::::::::</span></span><br><span class="line"><span class="comment">//                 ..:::::::::::&#x27;</span></span><br><span class="line"><span class="comment">//              &#x27;::::::::::::&#x27;</span></span><br><span class="line"><span class="comment">//                .::::::::::</span></span><br><span class="line"><span class="comment">//           &#x27;::::::::::::::..</span></span><br><span class="line"><span class="comment">//                ..::::::::::::.</span></span><br><span class="line"><span class="comment">//              ``::::::::::::::::</span></span><br><span class="line"><span class="comment">//               ::::``:::::::::&#x27;        .:::.</span></span><br><span class="line"><span class="comment">//              ::::&#x27;   &#x27;:::::&#x27;       .::::::::.</span></span><br><span class="line"><span class="comment">//            .::::&#x27;      ::::     .:::::::&#x27;::::.</span></span><br><span class="line"><span class="comment">//           .:::&#x27;       :::::  .:::::::::&#x27; &#x27;:::::.</span></span><br><span class="line"><span class="comment">//          .::&#x27;        :::::.:::::::::&#x27;      &#x27;:::::.</span></span><br><span class="line"><span class="comment">//         .::&#x27;         ::::::::::::::&#x27;         ``::::.</span></span><br><span class="line"><span class="comment">//     ...:::           ::::::::::::&#x27;              ``::.</span></span><br><span class="line"><span class="comment">//    ```` &#x27;:.          &#x27;:::::::::&#x27;                  ::::..</span></span><br><span class="line"><span class="comment">//                       &#x27;.:::::&#x27;                    &#x27;:&#x27;````..</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h2 id="4，已OK，无Bug"><a href="#4，已OK，无Bug" class="headerlink" title="4，已OK，无Bug"></a>4，已OK，无Bug</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//                      d*##$.</span></span><br><span class="line"><span class="comment">// zP&quot;&quot;&quot;&quot;&quot;$e.           $&quot;    $o</span></span><br><span class="line"><span class="comment">//4$       &#x27;$          $&quot;      $</span></span><br><span class="line"><span class="comment">//&#x27;$        &#x27;$        J$       $F</span></span><br><span class="line"><span class="comment">// &#x27;b        $k       $&gt;       $</span></span><br><span class="line"><span class="comment">//  $k        $r     J$       d$</span></span><br><span class="line"><span class="comment">//  &#x27;$         $     $&quot;       $~</span></span><br><span class="line"><span class="comment">//   &#x27;$        &quot;$   &#x27;$E       $</span></span><br><span class="line"><span class="comment">//    $         $L   $&quot;      $F ...</span></span><br><span class="line"><span class="comment">//     $.       4B   $      $$$*&quot;&quot;&quot;*b</span></span><br><span class="line"><span class="comment">//     &#x27;$        $.  $$     $$      $F</span></span><br><span class="line"><span class="comment">//      &quot;$       R$  $F     $&quot;      $</span></span><br><span class="line"><span class="comment">//       $k      ?$ u*     dF      .$</span></span><br><span class="line"><span class="comment">//       ^$.      $$&quot;     z$      u$$$$e</span></span><br><span class="line"><span class="comment">//        #$b             $E.dW@e$&quot;    ?$</span></span><br><span class="line"><span class="comment">//         #$           .o$$# d$$$$c    ?F</span></span><br><span class="line"><span class="comment">//          $      .d$$#&quot; . zo$&gt;   #$r .uF</span></span><br><span class="line"><span class="comment">//          $L .u$*&quot;      $&amp;$$$k   .$$d$$F</span></span><br><span class="line"><span class="comment">//           $$&quot;            &quot;&quot;^&quot;$$$P&quot;$P9$</span></span><br><span class="line"><span class="comment">//          JP              .o$$$$u:$P $$</span></span><br><span class="line"><span class="comment">//          $          ..ue$&quot;      &quot;&quot;  $&quot;</span></span><br><span class="line"><span class="comment">//         d$          $F              $</span></span><br><span class="line"><span class="comment">//         $$     ....udE             4B</span></span><br><span class="line"><span class="comment">//          #$    &quot;&quot;&quot;&quot;` $r            @$</span></span><br><span class="line"><span class="comment">//           ^$L        &#x27;$            $F</span></span><br><span class="line"><span class="comment">//             RN        4N           $</span></span><br><span class="line"><span class="comment">//              *$b                  d$</span></span><br><span class="line"><span class="comment">//               $$k                 $F</span></span><br><span class="line"><span class="comment">//               $$b                $F</span></span><br><span class="line"><span class="comment">//                 $&quot;&quot;               $F</span></span><br><span class="line"><span class="comment">//                 &#x27;$                $</span></span><br><span class="line"><span class="comment">//                  $L               $</span></span><br><span class="line"><span class="comment">//                  &#x27;$               $</span></span><br><span class="line"><span class="comment">//                   $               $</span></span><br></pre></td></tr></table></figure><h2 id="5，围棋棋盘"><a href="#5，围棋棋盘" class="headerlink" title="5，围棋棋盘"></a>5，围棋棋盘</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//                             _______________________________________</span></span><br><span class="line"><span class="comment">//                            /  ___________________________________  \</span></span><br><span class="line"><span class="comment">//     _--&quot;&quot;&quot;&quot;--_            /  /_/_/_/_/_|_|_|_|_|_|_|_|_|_\_\_\_\_\  \</span></span><br><span class="line"><span class="comment">//    /          \          /  /_/_/_/_J__L_L_L_|_|_|_J_J_J__L_\_\_\_\  \</span></span><br><span class="line"><span class="comment">//   /\          /\        /  /_/_/_J__L_J__L_L_|_|_|_J_J__L_J__L_\_\_\  \</span></span><br><span class="line"><span class="comment">//   L &quot;&quot;-____-&quot;&quot; J       /  /_/_J__L_J__L_J_J__L_|_J__L_L_J__L_J__L_\_\  \</span></span><br><span class="line"><span class="comment">//   \            /      /  /_/__L_/__L_J__L_J__L_|_J__L_J__L_J__\_J__\_\  \</span></span><br><span class="line"><span class="comment">//    \_        _/      /  /_J__/_J__/__L_J__|__L_|_J__|__L_J__\__L_\__L_\  \</span></span><br><span class="line"><span class="comment">//  _--&quot;&quot;&quot;&quot;&quot;--_&quot;       /  /  F /  F J  J  |  F J  |  F J  |  F  F J  \ J  \  \</span></span><br><span class="line"><span class="comment">// /           \      /  /--/-J--/--L--|--L-J--J--|--L--L-J--|--J--\--L-\--\  \</span></span><br><span class="line"><span class="comment">///\           /\    /  /__/__L_J__J___L_J__J__|__|__|__L__L_J___L__L_J__\__\  \</span></span><br><span class="line"><span class="comment">//L &quot;&quot;-_____-&quot;&quot; J   /  /  /  /  F  F  J  J  |  |  |  |  |  F  F  J  J  \  \  \  \</span></span><br><span class="line"><span class="comment">//\             /  /  /--/--/--/--J---L--|--|--|--o--|--|--|--J---L--\--\--\--\  \</span></span><br><span class="line"><span class="comment">// \_         _/  /  /__/__J__J___L__J___L__L__L__|__J__J__J___L__J___L__L__\__\  \</span></span><br><span class="line"><span class="comment">//   &quot;--___--&quot;   /  /  /   F  F  J   F  J  J   F  |  J   F  F  J   F  J  J   \  \  \</span></span><br><span class="line"><span class="comment">//              /  /--/---/--J---L--J---L--|--J---|---L--|--J---L--J---L--\---\--\  \</span></span><br><span class="line"><span class="comment">//             /  /__J___/___L__/___L__J___L__J___|___L__J___L__J___\__J___\___L__\  \</span></span><br><span class="line"><span class="comment">//            /  /   F  J   /  J   J   |  J   J   |   F   F  |   F   F  \   F  J   \  \</span></span><br><span class="line"><span class="comment">//           /  /---/---L--J---L---L---L--|---|---|---|---|--J---J---J---L--J---\---\  \</span></span><br><span class="line"><span class="comment">//          /  /___/___/___L__J___J___J___|___|___|___|___|___L___L___L__J___\___\___\  \</span></span><br><span class="line"><span class="comment">//         /  /   /   /   /   F   F   F   F   F   |   J   J   J   J   J   \   \   \   \  \</span></span><br><span class="line"><span class="comment">//        /  /___/___J___J___J___J___J____L___L___|___J___J____L___L___L___L___L___\___\  \</span></span><br><span class="line"><span class="comment">//       /  /   /    F   F   F   |   |   J    F   |   J    F   |   |   J   J   J    \   \  \</span></span><br><span class="line"><span class="comment">//      /  /___J____/___/___J____L___L___|___J____|____L___|___J___J____L___\___\____L___\  \</span></span><br><span class="line"><span class="comment">//     /  /    F   /   J    F   J   J    |   J    |    F   |    F   F   J    F   \   J    \  \</span></span><br><span class="line"><span class="comment">//    /  /____/___J____L___/____L___|____L___|____|____|___J____|___J____\___J____L___\____\  \</span></span><br><span class="line"><span class="comment">//   /  /    /    F   /   J    J    F   J    F    |    J    F   J    F    F   \   J    \    \  \</span></span><br><span class="line"><span class="comment">//  /  /____/____/___J____L____|____L___J____L____|____J____L___J____|____J____L___\____\____\  \</span></span><br><span class="line"><span class="comment">// /                                                                                             \</span></span><br><span class="line"><span class="comment">///_______________________________________________________________________________________________\</span></span><br><span class="line"><span class="comment">//|                                                                                               |</span></span><br><span class="line"><span class="comment">//|                                                                                               |</span></span><br><span class="line"><span class="comment">//|_______________________________________________________________________________________________|</span></span><br></pre></td></tr></table></figure><h2 id="6，书本"><a href="#6，书本" class="headerlink" title="6，书本"></a>6，书本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//                .-~~~~~~~~~-._       _.-~~~~~~~~~-.</span></span><br><span class="line"><span class="comment">//            __.&#x27;              ~.   .~              `.__</span></span><br><span class="line"><span class="comment">//          .&#x27;//                  \./                  \\`.</span></span><br><span class="line"><span class="comment">//        .&#x27;//                     |                     \\`.</span></span><br><span class="line"><span class="comment">//      .&#x27;// .-~&quot;&quot;&quot;&quot;&quot;&quot;&quot;~~~~-._     |     _,-~~~~&quot;&quot;&quot;&quot;&quot;&quot;&quot;~-. \\`.</span></span><br><span class="line"><span class="comment">//    .&#x27;//.-&quot;                 `-.  |  .-&#x27;                 &quot;-.\\`.</span></span><br><span class="line"><span class="comment">//  .&#x27;//______.============-..   \ | /   ..-============.______\\`.</span></span><br><span class="line"><span class="comment">//.&#x27;______________________________\|/______________________________`.</span></span><br></pre></td></tr></table></figure><h2 id="7，电脑"><a href="#7，电脑" class="headerlink" title="7，电脑"></a>7，电脑</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">                     ,----------------,              ,---------,</span><br><span class="line">                ,-----------------------,          ,&quot;        ,&quot;|</span><br><span class="line">              ,&quot;                      ,&quot;|        ,&quot;        ,&quot;  |</span><br><span class="line">             +-----------------------+  |      ,&quot;        ,&quot;    |</span><br><span class="line">             |  .-----------------.  |  |     +---------+      |</span><br><span class="line">             |  |                 |  |  |     | -==----&#x27;|      |</span><br><span class="line">             |  |  I LOVE DOS!    |  |  |     |         |      |</span><br><span class="line">             |  |  Bad command or |  |  |/----|`---=    |      |</span><br><span class="line">             |  |  C:\&gt;_          |  |  |   ,/|==== ooo |      ;</span><br><span class="line">             |  |                 |  |  |  // |(((( [33]|    ,&quot;</span><br><span class="line">             |  `-----------------&#x27;  |,&quot; .;&#x27;| |((((     |  ,&quot;</span><br><span class="line">             +-----------------------+  ;;  | |         |,&quot;</span><br><span class="line">                /_)______________(_/  //&#x27;   | +---------+</span><br><span class="line">           ___________________________/___  `,</span><br><span class="line">          /  oooooooooooooooo  .o.  oooo /,   \,&quot;-----------</span><br><span class="line">         / ==ooooooooooooooo==.o.  ooo= //   ,`\--&#123;)B     ,&quot;</span><br><span class="line">        /_==__==========__==_ooo__ooo=_/&#x27;   /___________,&quot;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript从入门到实践</title>
      <link href="/2024/11/29/JavaScript%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/"/>
      <url>/2024/11/29/JavaScript%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript从入门到实践"><a href="#JavaScript从入门到实践" class="headerlink" title="JavaScript从入门到实践"></a>JavaScript从入门到实践</h1><ul><li>软件版本(VSCode)：</li></ul><blockquote><p>版本: 1.95.3 (user setup)<br>提交: f1a4fb101478ce6ec82fe9627c43efbf9e98c813<br>日期: 2024-11-13T14:50:04.152Z<br>Electron: 32.2.1<br>ElectronBuildId: 10427718<br>Chromium: 128.0.6613.186<br>Node.js: 20.18.0<br>V8: 12.8.374.38-electron.0</p></blockquote><h2 id="JavaScript是什么❓"><a href="#JavaScript是什么❓" class="headerlink" title="JavaScript是什么❓"></a>JavaScript是什么❓</h2><p>JavaScript 是一种广泛使用的编程语言，主要用于网页开发。它是一种 <strong>脚本语言</strong>，最初用于为网页添加交互性和动态内容。JavaScript 可以在网页中执行，使得页面不需要重新加载就能更新内容。它通常与 HTML 和 CSS 一起使用，来构建和设计网站。</p><p>JavaScript 的核心特点包括：</p><ol><li><strong>客户端脚本语言</strong>：JavaScript 通常在用户的浏览器中运行，而不是在服务器上运行。这意味着它可以快速响应用户输入，无需与服务器频繁交互。</li><li><strong>事件驱动</strong>：JavaScript 允许网页响应用户的各种操作，如点击、键盘输入、鼠标移动等。</li><li><strong>动态类型语言</strong>：变量的类型在运行时可以改变，不需要声明变量类型。</li><li><strong>支持面向对象编程（OOP）和函数式编程（FP）</strong>：JavaScript 支持这两种编程范式，允许开发者使用不同的编程风格。</li><li><strong>跨平台性</strong>：JavaScript 可以在所有现代浏览器中运行，并且也可以在服务器端通过 Node.js 来执行，使其适用于全栈开发。</li></ol><h3 id="主要用途："><a href="#主要用途：" class="headerlink" title="主要用途："></a>主要用途：</h3><ul><li><strong>网页前端开发</strong>：通过 DOM（文档对象模型）和 AJAX（异步 JavaScript 和 XML）技术，JavaScript 可以使网页响应用户行为，实现如表单验证、动态更新内容等功能。</li><li><strong>服务器端开发</strong>：通过 Node.js，JavaScript 也可以用于后端开发，构建 API 和服务器应用。</li><li><strong>Web应用和移动应用开发</strong>：框架如 React、Vue 和 Angular 等使得 JavaScript 成为构建现代单页应用（SPA）的重要工具。</li></ul><p>总结来说，JavaScript 是一门强大且灵活的编程语言，推动了现代网页和应用开发的快速发展。</p><h2 id="JavaScript上手"><a href="#JavaScript上手" class="headerlink" title="JavaScript上手"></a>JavaScript上手</h2><ul><li><p>首先，我们在写网页前端时，如果单单使用Html语法会显得太单调，那么这个时候，我们就可以选择在Html页面中添加一些JavaScript来进行优化，以及配合Css样式（还没学）来进行美化。</p></li><li><p>在开始编写JavaScript文件时（在下面我们统称为Js），请注意将文件名称修改为【***.js】后缀格式</p></li></ul><hr><ul><li>开始编写第一个Js：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;我是一个弹窗&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在上面这段代码中，我们<code> &lt;script&gt;&lt;/script&gt;</code>标签之内就是Js语法，一般地，我们Js的框架要跟在 <code>&lt;body&gt;&lt;/body&gt;</code>标签的下方，因为我们html文件加载如同大多数编程语言一样，加载从上到下。</li></ul><hr><ul><li><p>在上面，我们学会了如何在html文件内编写Js代码，但是在平常的使用中，我们会更喜欢将Js语法单独写在一个文件内，而不是写在一个html文件中（影响美观）</p></li><li><p>那么我们应该怎么样从外部调用Js文件呢？</p><ul><li>请看示例：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;JS/Task2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>相比于上一个示例，这个示例显得更简洁，我们将Js文件单独存放在一个文件夹中，在<script>标签中使用<code>src=&quot;&quot;</code>进行引用，这使我们的html页面更加简洁</li></ul></li></ul><h2 id="JavaScript注释"><a href="#JavaScript注释" class="headerlink" title="JavaScript注释"></a>JavaScript注释</h2><ul><li><p>在JavaScript中，你可以使用两种方式来对代码中想要添加注释的地方添加注释。</p></li><li><p>第一种：</p><ul><li>使用单行注释</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 我是一个单行注释</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内部JS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;你好，js~&#x27;</span>, das)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>第二种：：</p><ul><li>使用多行注释</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">我是一个多行注释</span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内部JS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;你好，js~&#x27;</span>, das)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>使用注释时，注释里面的内容并不会被页面加载出来</p><h2 id="JavaScript结束符"><a href="#JavaScript结束符" class="headerlink" title="JavaScript结束符"></a>JavaScript结束符</h2><ul><li>作用：使用英文的 <code>;</code> 表示代码结束</li><li>实际情况：在实际开发中，可写可不写，浏览会自动判断语句的结束位置</li><li>约定：为了风格统一，结束符要么每一句都写，要么每一句都不写（看个人习惯）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 有结束符</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(<span class="string">&#x27;有结束符&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 无结束符</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(<span class="string">&#x27;无结束符&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript输入和输出"><a href="#JavaScript输入和输出" class="headerlink" title="JavaScript输入和输出"></a>JavaScript输入和输出</h2><ul><li>我们在编写JS文件时，需要去遵守一个语法规则，就像你说话一样，你想问别人<code>吃饭了吗？</code>你不能将这句话颠倒过来说<code>你妈吃了？</code>这是不行的。</li></ul><h3 id="输出语法："><a href="#输出语法：" class="headerlink" title="输出语法："></a>输出语法：</h3><ul><li>案例①：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  // 文档输出内容</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;我是一个div标签&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 可以在Html种使用&lt;h1&gt;标签来直接显示文字，这与在html文件种直接写标签时没有差异的</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;h1&gt;我是标题&lt;/h1&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pxy.shenyi.cyou/2024/11/29/1732861865936.png" alt="1732861865936.png"></p><ul><li>案例②：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- altert表示在html页面对用户进行弹窗 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;要输出的内容&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pxy.shenyi.cyou/2024/11/29/1732862214051.png" alt="1732862214051.png"></p><ul><li>案例③（控制台输出语法，程序员测试使用）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;控制台打印&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pxy.shenyi.cyou/2024/11/29/1732862340668.png" alt="1732862340668.png"></p><h3 id="输入语法："><a href="#输入语法：" class="headerlink" title="输入语法："></a>输入语法：</h3><ul><li>案例①：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  /*</span><br><span class="line">  作用：显示一个对话框，对话框种包含一条文字信息，用于提示用户输入文字</span><br><span class="line">  */</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的名字：&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://pxy.shenyi.cyou/2024/11/29/1732862729650.png" alt="1732862729650.png"></p><h2 id="JavaScript变量的写法"><a href="#JavaScript变量的写法" class="headerlink" title="JavaScript变量的写法"></a>JavaScript变量的写法</h2><ul><li>变量是计算机中用来存储数据的“容器”，简单理解是一个盒子里面装着数据（学过其他编程语言不难理解）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    声明一个变量，记录值为10  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在上面的代码中，我们不难理解变量是用关键字“let”来进行声明，使用“=”号来对变量进行赋值</li></ul><h3 id="变量的基本使用"><a href="#变量的基本使用" class="headerlink" title="变量的基本使用"></a>变量的基本使用</h3><ul><li>在定义过一个变量之后，我们也可以对这个变量进行更新</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span><br><span class="line"><span class="language-javascript">    a = <span class="number">11</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 我们在进行重复赋值的时候，不需要对变量前面引用一个var标识符表示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面这个html中，我们可以先定义一个变量a =10，后面再在下方重新定义一个变量a = 11对第一个变量进行重写，这样子我们就实现了变量的更新。我们可以将结果打印到控制台输出</p><p><img src="https://pxy.shenyi.cyou/2024/12/02/1733138337538.png" alt="1733138337538.png"></p><p>可能有的人会问？为什么用let而不用var？</p><ul><li><p>解析：</p><ul><li><p>在 JavaScript 中，<code>let</code> 相较于 <code>var</code> 提供了更现代、更灵活的变量声明方式。使用 <code>let</code> 而不是 <code>var</code> 的原因主要体现在以下几个方面：</p><h3 id="1-块级作用域-Block-Scope"><a href="#1-块级作用域-Block-Scope" class="headerlink" title="1. 块级作用域 (Block Scope)"></a>1. <strong>块级作用域 (Block Scope)</strong></h3><ul><li><code>let</code> 具有块级作用域，也就是说它只在其所在的代码块（例如 <code>if</code> 语句、<code>for</code> 循环等）内有效。</li><li>而 <code>var</code> 是函数作用域（function-scoped），即它在整个函数内都是有效的（如果在函数外声明，则是全局作用域）。</li></ul><p>例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">10</span>;  <span class="comment">// 只在这个 if 块内有效</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);  <span class="comment">// 输出 10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);  <span class="comment">// ReferenceError: x is not defined</span></span><br></pre></td></tr></table></figure><p>而使用 <code>var</code> 时：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> y = <span class="number">20</span>;  <span class="comment">// 在整个函数或全局作用域内有效</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(y);  <span class="comment">// 输出 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(y);  <span class="comment">// 输出 20</span></span><br></pre></td></tr></table></figure><h3 id="2-变量提升-Hoisting"><a href="#2-变量提升-Hoisting" class="headerlink" title="2. 变量提升 (Hoisting)"></a>2. <strong>变量提升 (Hoisting)</strong></h3><ul><li><code>let</code> 声明的变量会被提升，但不会初始化，因此在声明之前访问会导致 <strong>ReferenceError</strong> 错误。</li><li><code>var</code> 声明的变量会被提升并初始化为 <code>undefined</code>，这可能导致一些意外的错误，尤其是你在声明之前就访问了该变量。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);  <span class="comment">// ReferenceError: a is not defined (let)</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);  <span class="comment">// undefined (var)</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="3-避免重复声明-No-Duplicate-Declarations"><a href="#3-避免重复声明-No-Duplicate-Declarations" class="headerlink" title="3. 避免重复声明 (No Duplicate Declarations)"></a>3. <strong>避免重复声明 (No Duplicate Declarations)</strong></h3><ul><li>在同一作用域内，<code>let</code> 不允许重复声明相同的变量。如果尝试重复声明会抛出 <code>SyntaxError</code>。</li><li><code>var</code> 允许在同一作用域内多次声明相同的变量，容易造成潜在的错误。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">2</span>;  <span class="comment">// SyntaxError: Identifier &#x27;x&#x27; has already been declared</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">2</span>;  <span class="comment">// 没有错误，y 的值会变成 2</span></span><br></pre></td></tr></table></figure><h3 id="4-块级作用域的循环行为"><a href="#4-块级作用域的循环行为" class="headerlink" title="4. 块级作用域的循环行为"></a>4. <strong>块级作用域的循环行为</strong></h3><ul><li>当使用 <code>let</code> 在循环中声明变量时，每次迭代会创建一个新的变量实例，这避免了常见的闭包问题。</li><li>使用 <code>var</code> 声明的变量会共享同一个作用域，容易导致在异步回调中获取到错误的变量值。</li></ul><p>例如，使用 <code>let</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);  <span class="comment">// 0, 1, 2</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 <code>var</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);  <span class="comment">// 3, 3, 3</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用 <code>var</code> 时，所有的回调函数都共享同一个 <code>i</code> 变量，它的值在循环结束后为 <code>3</code>。</p><h3 id="5-更符合现代-JavaScript-规范"><a href="#5-更符合现代-JavaScript-规范" class="headerlink" title="5. 更符合现代 JavaScript 规范"></a>5. <strong>更符合现代 JavaScript 规范</strong></h3><ul><li><code>let</code> 是 ES6 (ECMAScript 2015) 引入的，符合现代 JavaScript 的编程习惯。它提供了更好的作用域控制和更安全的变量管理方式。</li><li><code>var</code> 是旧有的 JavaScript 规范，它的一些行为（如变量提升、作用域规则）可能导致意外的错误，现代 JavaScript 推荐使用 <code>let</code> 或 <code>const</code> 来避免这些问题。</li></ul><h3 id="6-let-与-const-的结合"><a href="#6-let-与-const-的结合" class="headerlink" title="6. let 与 const 的结合"></a>6. <strong><code>let</code> 与 <code>const</code> 的结合</strong></h3><ul><li><code>const</code> 用于声明常量，而 <code>let</code> 用于声明可变的变量。使用这两者可以更好地遵循不可变性和最佳实践，在代码中更易于维护和理解。</li></ul><p>综上所述，<code>let</code> 提供了更严格、更可预测的作用域管理、更强的错误检测和更好的循环控制，因此在现代 JavaScript 开发中，推荐使用 <code>let</code> 而非 <code>var</code> 来声明变量。</p></li></ul></li><li><p>案例①（用户在网页输入名字，将名字输入到页面中）</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> name = <span class="title function_">prompt</span>(<span class="string">&quot;请输入您的名字&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(name)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora激活教程</title>
      <link href="/2024/11/20/Typora%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
      <url>/2024/11/20/Typora%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora激活教程"><a href="#Typora激活教程" class="headerlink" title="Typora激活教程"></a>Typora激活教程</h1><ul><li><p>Typora 是一款轻量级的Markdown编辑器，它支持即时渲染Markdown文档，让用户在编写Markdown时能够即时预览最终的排版效果。Typora以其简洁的界面和直观的操作方式受到许多Markdown爱好者和内容创作者的喜爱。以下是Typora的一些主要特点：</p><ol><li><p><strong>所见即所得（WYSIWYG）</strong>：Typora提供了一个直观的界面，允许用户在编辑Markdown的同时看到格式化后的内容。</p></li><li><p><strong>实时预览</strong>：Typora的实时预览功能使得用户可以即时看到Markdown语法应用后的效果。</p></li><li><p><strong>简洁的界面</strong>：Typora的设计简洁，没有多余的按钮和工具栏，使得用户可以专注于写作。</p></li><li><p><strong>支持多种Markdown语法</strong>：Typora支持几乎所有的Markdown语法，包括标题、列表、代码块、表格、图片、链接等。</p></li><li><p><strong>文件导出</strong>：Typora支持将Markdown文件导出为HTML、PDF、Word等多种格式。</p></li><li><p><strong>文件管理</strong>：Typora内置了文件浏览器，方便用户管理文档。</p></li><li><p><strong>主题和样式</strong>：Typora提供了多种主题和样式，用户可以根据个人喜好调整编辑器的外观。</p></li><li><p><strong>快捷键支持</strong>：Typora支持丰富的快捷键，提高编辑效率。</p></li><li><p><strong>跨平台</strong>：Typora支持Windows、macOS和Linux，用户可以在不同的操作系统上使用。</p></li><li><p><strong>图床支持</strong>：Typora支持将图片上传到图床，方便在Markdown中插入图片。</p></li></ol><p>Typora是一款付费软件，但提供了一个试用期，用户可以在试用期内免费体验所有功能。由于其易用性和强大的功能，Typora成为了很多Markdown用户的首选编辑器。</p></li></ul><hr><h3 id="激活方法："><a href="#激活方法：" class="headerlink" title="激活方法："></a>激活方法：</h3><ol><li>找到 <strong>Typora</strong> 安装目录，进入 <code>Typora\resources\page-dist\static\js</code> 这个目录下。编辑 <code>Licenseindex.****</code>这个文件</li><li>打开文件查找<code>e.hasActivated=&quot;true&quot;==e.hasActivated</code>将中间的<code>e.hasActivated</code>替换为true</li><li>这样子就激活完成了，但是这样有一个弊端，每次打开都会跳一个提醒激活，虽然说不影响使用，但是一直跳也烦</li></ol><h3 id="关闭弹窗："><a href="#关闭弹窗：" class="headerlink" title="关闭弹窗："></a>关闭弹窗：</h3><ol><li>继续在Typora的安装目录中<code>resources\page-dist\license.html</code>这个目录下，找到<code>license</code>文件。</li><li>打开查找到<code>&lt;/body&gt;&lt;/html&gt;</code>替换为<code>&lt;/body&gt;&lt;script&gt;window.οnlοad=function()&#123;setTimeout(()=&gt;&#123;window.close();&#125;,5);&#125;&lt;/script&gt;&lt;/html&gt;</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> 技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS笔记</title>
      <link href="/2024/11/15/Linux%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/11/15/Linux%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux系统基本概念"><a href="#Linux系统基本概念" class="headerlink" title="Linux系统基本概念"></a>Linux系统基本概念</h2><ul><li>多用户的系统：允许同时有很多个用户登录系统，使用系统里的资源</li><li>多任务的系统：允许同时执行多个任务</li><li>严格区分大小写：命令，选项，参数，文件名，目录名都严格区分大小写</li><li>一切皆文件：硬件设备（内存、CPU、网卡、显示器、硬盘等等）都是以文件的形式存在的</li><li>不管是文件还是目录都是以倒挂的树形结构，存在于系统的“&#x2F;”根目录下，根目录是Linux系统的起点</li><li>对于Linux系统而言，目录&#x2F;文件没有扩展名一说，扩展名如：.sh（脚本文件)   .conf（配置文件） .log（日志文件）   .rpm（软件包）.tar（压缩包）是易于用户方便识别</li><li>没有提示就是最好的提示（成功了）</li><li>Linux系统没有回收站</li></ul><h4 id="命令终端字段含义介绍"><a href="#命令终端字段含义介绍" class="headerlink" title="命令终端字段含义介绍"></a>命令终端字段含义介绍</h4><ul><li><p>[root@localhost ~]# </p></li><li><p>解释：</p><ul><li>root：当前登录系统用户名(root超级管理员)</li><li>localhost ：当前主机名</li><li><del>：当前用户所在目录（</del> 为家目录） ，root超级管理员家目录：&#x2F;root</li><li>#： 当前用户身份是超级管理员</li></ul></li><li><p>[student@localhost ~]$ </p><ul><li>$：当前用户身份为普通用户，普通用户的家目录：&#x2F;home&#x2F;用户名同名</li></ul></li></ul><h4 id="命令行一般命令格式"><a href="#命令行一般命令格式" class="headerlink" title="命令行一般命令格式"></a>命令行一般命令格式</h4><ul><li>命令字 [-选项…] [参数…]<ul><li>命令字：命令本身（功能）</li><li>选项：调整命令功能的<ul><li>短选项：-l  -a  -d  -h（单个字符），短选项可以合并使用：-lad   -lh</li><li>长选项：–help（单词），长选项通常是不能合并使用的</li></ul></li><li>参数：命令的执行对象，文件&#x2F;目录&#x2F;程序等</li><li>[]：可选的</li><li>…：可以同时有多个选项或参数</li></ul></li></ul><h4 id="Linux系统辨别目录与文件的方法"><a href="#Linux系统辨别目录与文件的方法" class="headerlink" title="Linux系统辨别目录与文件的方法"></a>Linux系统辨别目录与文件的方法</h4><p>蓝色表示目录（windows系统里的文件夹）</p><p>白色表示文件</p><p>浅蓝色表示链接文件（类似于windows系统的快捷方式）</p><p>绿色表示可执行文件（如脚本，命令程序文件）</p><p>红色表示压缩文件</p><p>黄色表示设备文件（硬盘、键盘、鼠标、网卡、CPU硬件设备都是以文件的形式存在的）</p><p>红色闪动文件——&gt;表示链接文件不可用</p><h4 id="ls-查看目录-文件命令"><a href="#ls-查看目录-文件命令" class="headerlink" title="ls 查看目录&#x2F;文件命令"></a>ls 查看目录&#x2F;文件命令</h4><ul><li><p>ls命令（英文全拼：list）：用于查看目录下内容及目录和文件详细属性信息</p></li><li><p>命令格式：ls [-选项…] [参数…]</p></li><li><p>常用选项：</p><ul><li>-a 显示目录下所有内容，包含隐藏的内容</li><li>-l 以长格式显示目录下的内容及详细属性</li><li>-h 人性化显示目录下内容大小（kB、MB、GB）</li><li>-d 仅显示目录本身而不显示目录下的内容</li><li>-i 查看inode号（系统任何的文件或目录都有一个唯一的编号）</li><li>-R：递归查看目录下所有内容（从头到尾）</li></ul></li></ul><h4 id="Linux-系统文件类型"><a href="#Linux-系统文件类型" class="headerlink" title="Linux 系统文件类型"></a>Linux 系统文件类型</h4><p>- 文件：</p><p>d 目录：</p><p>l 链接文件</p><p>b 硬件设备文件</p><p>c 字符设备文件</p><p>p 管道设备文件</p><p>s 套接字</p><h4 id="Linux-系统下的归属关系"><a href="#Linux-系统下的归属关系" class="headerlink" title="Linux 系统下的归属关系"></a>Linux 系统下的归属关系</h4><ul><li><p>在Linux系统下，文件给用户分成了三类</p><ul><li><p>所有者：文件或目录的拥有者，拥有者的权限通常是最大的</p></li><li><p>所属组：文件或目录属于哪一个组，所属组的权限略微比所有者小</p></li><li><p>其他人：既不是文件或目录的所有者，也不属于文件或目录组内的成员，其他人的权限通常最小的权限</p></li></ul></li><li><p>ls命令示例：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示当前所在目录下的所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看根目录下所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span>   /</span><br><span class="line">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看/etc目录下所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看/bin目录下所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看/dev目录下所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看目录下所有目录和文件，包括隐藏的内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#以长格式显示目录下所有内容，包括详细的属性信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l</span><br><span class="line">-rw-r--r--. 1 root root 0 10月 24 15:16 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#解释</span></span><br><span class="line">-：文件类型</span><br><span class="line">1：代表文件的引用次数</span><br><span class="line">root：文件的所有者</span><br><span class="line">root：文件的所属组</span><br><span class="line">0：文件的大小，默认以字节为单位显示大小</span><br><span class="line">10月 24 15:16：文件最近一次的修改时间</span><br><span class="line">hello：文件名</span><br><span class="line"></span><br><span class="line"><span class="comment">#以长格式显示目录所有内容，以人性化的方式显示详细的属性信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l -h</span><br><span class="line"></span><br><span class="line"><span class="comment">#短选项合并使用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -lh</span><br><span class="line"></span><br><span class="line"><span class="comment">#以长格式显示目录所有内容，以人性化的方式显示详细的属性信息，包括隐藏的内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -lha</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#以长格式显示根目录下所有内容，包括详细的属性信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /</span><br><span class="line">lrwxrwxrwx.   1 root root    7 3月  13 17:15 bin -&gt; usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建hello.txt文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件的元数据信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> hello.txt</span><br><span class="line">  文件：<span class="string">&quot;hello.txt&quot;</span></span><br><span class="line">  大小：0         块：0          IO 块：4096   普通空文件</span><br><span class="line">设备：fd00h/64768dInode：33575020    硬链接：1</span><br><span class="line">权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)</span><br><span class="line">环境：unconfined_u:object_r:admin_home_t:s0</span><br><span class="line">最近访问：2021-03-14 16:38:14.349861770 +0800</span><br><span class="line">最近更改：2021-03-14 16:38:14.349861770 +0800</span><br><span class="line">最近改动：2021-03-14 16:38:14.349861770 +0800</span><br><span class="line">创建时间：-</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="命令行编辑技巧"><a href="#命令行编辑技巧" class="headerlink" title="命令行编辑技巧"></a>命令行编辑技巧</h4><p>键盘上下键调出历史命令</p><p>Ctrl + c：废弃当前命令行中的命令，取消当前执行的命令，例如ping</p><p>Ctrl + l,clear：清屏</p><p>tab键自动补齐：可补齐命令、参数、文件路径、软件名</p><p>esc + . ：将上一条命令参数变成当前命令的执行对象</p><p>Ctrl + a：将当前光标移动至行首</p><p>Ctrl + e：将当前光标移动至行尾</p><p> Ctrl + u 清空至行首</p><p> Ctrl + w 删除一个单词</p><p>exit，logout：退出系统</p><h4 id="Linux-基本权限的类别"><a href="#Linux-基本权限的类别" class="headerlink" title="Linux 基本权限的类别"></a>Linux 基本权限的类别</h4><ul><li><p>r 读取  w 写入  x 执行  - 没有权限</p></li><li><p>权限顺序：rwx  rwx  rwx</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l</span><br><span class="line">-rw-r--r--. 1 root root 1831 3月  13 17:45 initial-setup-ks.cfg</span><br><span class="line"><span class="comment">#解释</span></span><br><span class="line">-：文件类型</span><br><span class="line">rw- r-- r--：所有者u、所属组g、其他人o的权限</span><br><span class="line">u   g   o</span><br><span class="line"></span><br><span class="line">r 读取权限，w写入权限，x执行权限，-没有任何权限</span><br><span class="line"></span><br><span class="line">1：代表文件的引用次数</span><br><span class="line">root：文件的所有者</span><br><span class="line">root：文件的所属组</span><br><span class="line">1831：文件的大小，默认以字节为单位显示大小</span><br><span class="line">3月  13 17:45：文件最近一次的修改时间</span><br><span class="line">initial-setup-ks.cfg：文件名</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看/root目录本身详细属性信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -ld /root</span><br><span class="line">dr-xr-x---. 14 root root 4096 3月  14 16:38 /root</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前目录下所有内容的inode号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -i</span><br><span class="line">33574979 anaconda-ks.cfg  33574984 initial-setup-ks.cfg  33575035 模板  33575036 图片  17470701 下载            17470702 音乐</span><br><span class="line">33575020 hello.txt        51909391 公共                  51909392 视频   3204374 文档  33575017 新建文件夹.zip   3204373 桌面</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看hello.txt文件的inode号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -i hello.txt</span><br><span class="line">33575020 hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看/etc/目录本身的inode号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -<span class="built_in">id</span> /etc</span><br><span class="line">16777281 /etc</span><br></pre></td></tr></table></figure><h4 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h4><ul><li>遇到问题：前期不要求你们有排错的能力</li><li>思考自己能不能决绝：百度、Google、最后在问老师</li><li>培养主动学习，不要被动学习</li><li>不要死磕一个技术点，低头拉车的时候不要忘了抬头看路</li></ul><h4 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h4><p>1.命令行以$作为结尾代表什么含义？</p><p>普通用户</p><p>2.请写出Linux系统一般的命令格式？</p><p>命令字  [-选项…] [参数…]</p><p>3.在Linux系统下，如何辨别目录与文件及其他的文件？</p><p>白色：文件</p><p>蓝色：目录</p><p>浅蓝色：链接文件</p><p>绿色：可执行文件</p><p>红色：压缩文件</p><p>红色带闪动的文件：链接文件不可用</p><p>黄色：设备文件（硬盘，网卡，CPU，鼠标，键盘）</p><p>4.如何查看一个文件的详细属性？</p><p>ls -l 文件名</p><p>5.如何查看一个目录本身的详细属性？</p><p>ls -dl 目录名字</p><p>6.查看文件详细属性，并以KB、MB、GB的方式显示文件的大小？</p><p>ls -lh 文件名</p><p>7.如何查看一个文件的inode号？</p><p>ls -i 文件名</p><p>8.请写出Linux下文件和目录的三个归属关系？</p><p>u 所有者</p><p>g 所属组</p><p>o 其他人</p><p>9.请写出Linux下基本权限的表示方式？</p><p>r：读取，w写入，x执行</p><p>10.命令行以#作为结尾代表什么含义？</p><p>超级管理员</p><h4 id="mkdir-创建目录命令"><a href="#mkdir-创建目录命令" class="headerlink" title="mkdir 创建目录命令"></a>mkdir 创建目录命令</h4><ul><li><p>mkdir（英文全拼：make directory）用于创建新目录</p></li><li><p>命令格式：mkdir [-选项] 目录名</p></li><li><p>常用选项：</p><ul><li>-p 递归创建多个目录</li></ul></li><li><p>注意事项：</p><ul><li>目录还是文件的名字，除了以“&#x2F;”以外的任意名称，“&#x2F;”根目录，路径分隔符</li><li>文件或目录的名字长度不能超过255个字符</li></ul></li><li><p>mkdir命令示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在当前所在目录创建test目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> <span class="built_in">test</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在当前所在目录同时创建多个目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> test1 test2 test3</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定在/tmp目录下创建abc目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /tmp/abc</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /tmp</span><br><span class="line">abc</span><br><span class="line"></span><br><span class="line"><span class="comment">#在指定目录下同时创建多个目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /tmp/abc1 /tmp/abc2 /tmp/abc3</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/opt目录下创建student，在当前目录创建student1..3</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/student student1  student2 student3</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student</span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir默认无法在一个不存在的目录下创建目录，需要通过-p选项</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/xx/oo</span><br><span class="line"><span class="built_in">mkdir</span>: 无法创建目录<span class="string">&quot;/opt/xx/oo&quot;</span>: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/a/b/c/d</span><br><span class="line"><span class="built_in">mkdir</span>: 无法创建目录<span class="string">&quot;/opt/a/b/c/d&quot;</span>: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/opt目录下递归创建目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p /opt/xx/oo</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  xx</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p /opt/a/b/c/d</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">a  rh  student  xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#ls -R选项可以递归目录下所有内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -R /opt/a</span><br><span class="line">/opt/a:</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">/opt/a/b:</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">/opt/a/b/c:</span><br><span class="line">d</span><br></pre></td></tr></table></figure><h4 id="cd-切换工作目录命令"><a href="#cd-切换工作目录命令" class="headerlink" title="cd 切换工作目录命令"></a>cd 切换工作目录命令</h4><ul><li>cd（英文全拼：change directory）切换目录</li></ul><p>命令格式：cd [-选项] [目录名]</p><ul><li>提示：目录名称可以是绝对路径或相对路径，如果不指定目录名称，则切换到当前用户的家目录~</li></ul><h4 id="绝对路径与相对路径"><a href="#绝对路径与相对路径" class="headerlink" title="绝对路径与相对路径"></a>绝对路径与相对路径</h4><ul><li><p>绝对路径：以&#x2F;（根）为起点，到达你想去的目标目录称为绝对路径</p></li><li><p>相对路径：以当前路径为起点，到达你想去的目标目录（必须保证在同一层目录中）</p></li><li><p>常用快捷操作：</p><ul><li>~ 表示为家目录</li><li>. 表示为当前目录</li><li>.. 表示上一级目录</li><li>-可在两路径之间来回切换</li></ul></li></ul><h4 id="pwd-打印当前所在目录"><a href="#pwd-打印当前所在目录" class="headerlink" title="pwd 打印当前所在目录"></a>pwd 打印当前所在目录</h4><ul><li><p>pwd（英文全拼：print work directory）打印当前所在的工作目录，执行pwd命令后，可显示当前所在的工作目录的绝对路径名称</p></li><li><p>命令格式：pwd [-选项]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /opt/a/b/c/d</span><br><span class="line"></span><br><span class="line"><span class="comment">#打印当前所在目录绝对路径</span></span><br><span class="line">[root@localhost d]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到用户家目录</span></span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span> ~</span><br><span class="line">[root@localhost ~]# <span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /opt/a/b/c/d</span><br><span class="line">[root@localhost d]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c/d</span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">pwd</span></span><br><span class="line">/root</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /bin</span><br><span class="line">[root@localhost bin]# <span class="built_in">pwd</span></span><br><span class="line">/bin</span><br><span class="line"></span><br><span class="line">[root@localhost bin]# <span class="built_in">cd</span> /boot</span><br><span class="line">[root@localhost boot]# <span class="built_in">pwd</span></span><br><span class="line">/boot</span><br><span class="line">[root@localhost boot]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">[root@localhost boot]# <span class="built_in">cd</span> /dev</span><br><span class="line">[root@localhost dev]# <span class="built_in">pwd</span></span><br><span class="line">/dev</span><br><span class="line">[root@localhost dev]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">[root@localhost dev]# <span class="built_in">cd</span> /etc</span><br><span class="line">[root@localhost etc]# <span class="built_in">pwd</span></span><br><span class="line">/etc</span><br><span class="line">[root@localhost etc]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">[root@localhost etc]# <span class="built_in">ls</span> /</span><br><span class="line">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line"></span><br><span class="line"><span class="comment">#“.”表示当前所在目录，对于cd命令而言作用不大</span></span><br><span class="line">[root@localhost etc]# <span class="built_in">cd</span> .</span><br><span class="line"></span><br><span class="line">[root@localhost etc]# <span class="built_in">cd</span> /opt/a/b/c/d</span><br><span class="line">[root@localhost d]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line"><span class="comment">#“..”切换到当前目录的上一级目录</span></span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost c]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c</span><br><span class="line"></span><br><span class="line">[root@localhost c]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost b]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b</span><br><span class="line"></span><br><span class="line">[root@localhost b]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost a]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost opt]# <span class="built_in">pwd</span></span><br><span class="line">/opt</span><br><span class="line"></span><br><span class="line">[root@localhost opt]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost /]# <span class="built_in">cd</span> ..</span><br><span class="line">[root@localhost /]# <span class="built_in">cd</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /opt/a/b/c/d</span><br><span class="line">[root@localhost d]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line"><span class="comment">#&quot;-&quot;可在两个路径之间来回切换</span></span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span> /etc/yum</span><br><span class="line">[root@localhost yum]# <span class="built_in">cd</span> -</span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line">[root@localhost d]# <span class="built_in">pwd</span></span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span> -</span><br><span class="line">/etc/ym</span><br><span class="line"></span><br><span class="line">[root@localhost yum]# <span class="built_in">cd</span> -</span><br><span class="line">/opt/a/b/c/d</span><br><span class="line"></span><br><span class="line">[root@localhost d]# <span class="built_in">cd</span> -</span><br><span class="line">/etc/yum</span><br></pre></td></tr></table></figure><h4 id="rmdir-删除空目录命令"><a href="#rmdir-删除空目录命令" class="headerlink" title="rmdir 删除空目录命令"></a>rmdir 删除空目录命令</h4><ul><li><p>rmdir（英文全拼：remove directory）删除空目录</p></li><li><p>命令格式：rmdir [-选项] 目录名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#rmdir只能删除空目录，如果目录下存在数据无法删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/a</span><br><span class="line"><span class="built_in">rmdir</span>: 删除 <span class="string">&quot;/opt/a&quot;</span> 失败: 目录非空</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -R /opt/a</span><br><span class="line">/opt/a:</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">/opt/a/b:</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">/opt/a/b/c:</span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">/opt/a/b/c/d:</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/a/b/c/d</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -R /opt/a</span><br><span class="line">/opt/a:</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">/opt/a/b:</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">/opt/a/b/c:</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/a/b/c</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -R /opt/a/b</span><br><span class="line">/opt/a/b:</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/a/b</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -R /opt/a</span><br><span class="line">/opt/a:</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/a</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  xx</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rmdir</span> /opt/</span><br><span class="line"><span class="built_in">rmdir</span>: 删除 <span class="string">&quot;/opt/&quot;</span> 失败: 目录非空</span><br></pre></td></tr></table></figure><h4 id="touch-创建文件命令"><a href="#touch-创建文件命令" class="headerlink" title="touch 创建文件命令"></a>touch 创建文件命令</h4><ul><li><p>touch 命令用于创建新的空白文件</p></li><li><p>命令格式：touch [-选项] 文件名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在当前路径创建空文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> hello</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在当前路径同时创建多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> t1 t2 t3 t4</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在指定路径同时创建多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /opt/test1 /opt/test2 /opt/test3</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  test1  test2  test3  xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果存在同名目录时，无法创建</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> <span class="built_in">test</span></span><br><span class="line"><span class="built_in">mkdir</span>: 无法创建目录<span class="string">&quot;test&quot;</span>: 文件已存在</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果存在同名文件时，touch命令没有提示，但原有文件不会被覆盖</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> t1</span><br><span class="line"></span><br><span class="line"><span class="comment">#对于目录而言，只有单个目录的时候，“/”可有可无</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt/</span><br><span class="line">rh  student  test1  test2  test3  xx</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  test1  test2  test3  xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#对于目录而言，查看目录下的内容时，必须要有“/”</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt/xx</span><br><span class="line">oo</span><br><span class="line"></span><br><span class="line"><span class="comment">#对于文件而言，后边绝对不能有“/”</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt/test1</span><br><span class="line">/opt/test1</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt/test1/</span><br><span class="line"><span class="built_in">ls</span>: 无法访问/opt/test1/: 不是目录</span><br></pre></td></tr></table></figure><h4 id="cp-复制命令"><a href="#cp-复制命令" class="headerlink" title="cp 复制命令"></a>cp 复制命令</h4><ul><li><p>cp（英文全拼：copy file）用于复制文件或目录，cp命令在复制时也可修改目录或文件名字</p></li><li><p>命令格式：cp [-选项] 源文件或目录 目标目录</p></li><li><p>常用选项：</p><ul><li>-p 保留源文件属性不变（如：修改时间、归属关系、权限）</li><li>-r 复制目录（包含该目录下所有的子目录和文件）</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制当前目录文件到/opt目录（相对路径方式复制）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> t1 /opt/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  t1  test1  test2  test3  xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制文件到/opt目录（绝对路径方式复制）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> /root/t2 /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  student  t1  t2  test1  test2  test3  xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时复制多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> t3 t4 /opt/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> abc</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用-r对目录执行复制</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r abc /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时复制多个目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> abc1 abc2 abc3</span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r abc1 abc2 abc3 /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制hello文件到/opt并改名为hello.txt</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> hello /opt/hello.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制xxxx目录到/opt并改名xxoo</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> xxxx</span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r xxxx /opt/xxoo</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用“.”配合cp命令执行复制</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /etc/sysconfig/network-scripts/</span><br><span class="line">[root@localhost network-scripts]# <span class="built_in">pwd</span></span><br><span class="line">/etc/sysconfig/network-scripts</span><br><span class="line"></span><br><span class="line">[root@localhost network-scripts]# <span class="built_in">cp</span> /root/t1 .</span><br><span class="line">[root@localhost network-scripts]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#操持属性不变复制文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -p anaconda-ks.cfg /opt</span><br><span class="line"><span class="built_in">cp</span>：是否覆盖<span class="string">&quot;/opt/anaconda-ks.cfg&quot;</span>？ y                         </span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 root root 1800 3月  13 17:34 /opt/anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#对比以上两个文件的详细属性信息（最后一次修改时间）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 root root 1800 3月  13 17:34 anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#这两个操作代表什么意思？</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r xxxx /mnt/oooo  <span class="comment">#拷贝并改名</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r xxxx /mnt/oooo  <span class="comment">#拷贝</span></span><br></pre></td></tr></table></figure><h4 id="mv-移动命令"><a href="#mv-移动命令" class="headerlink" title="mv 移动命令"></a>mv 移动命令</h4><ul><li><p>mv（英文全拼：move file）用于移动文件或目录到其他位置，也可用于修改目录或文件名</p></li><li><p>命令格式：mv [-选项] 源文件… 目标路径</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#移动当前路径hello文件到/mnt目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> hello /mnt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">hello  home  oooo  <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#同时移动多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> t1 t2 t3 t4 /mnt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">hello  home  oooo  student1  t1  t2  t3  t4  <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#移动/opt目录下文件到/mnt</span></span><br><span class="line">root@localhost ~]# <span class="built_in">mv</span> /opt/test1 /opt/test2 /opt/test3 /mnt/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">hello  home  oooo  student1  t1  t2  t3  t4  <span class="built_in">test</span>  test1  test2  test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#移动目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> student1 /mnt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">hello  home  oooo  student1  <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#移动文件并改名</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> hello.txt /media/hello</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /media/</span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#移动目录并改名</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> <span class="built_in">test</span> /media/testxx</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /media/</span><br><span class="line">hello  testxx</span><br></pre></td></tr></table></figure><h4 id="cat-查看文件内容命令"><a href="#cat-查看文件内容命令" class="headerlink" title="cat 查看文件内容命令"></a>cat 查看文件内容命令</h4><ul><li><p>cat （英文全拼：concatenate）命令用于查看文本文件内容</p></li><li><p>命令格式：cat [选项] 文件名</p></li><li><p>常用选项</p><ul><li>-n #查看文件时以行号的形式显示文件内容</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> anaconda-ks.cfg </span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> initial-setup-ks.cfg </span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看网卡文件内容，网卡配置文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/sysconfig/network-scripts/ifcfg-ens32 </span><br><span class="line">...</span><br><span class="line">NAME=<span class="string">&quot;ens32&quot;</span>   //网卡名</span><br><span class="line">UUID=<span class="string">&quot;16085f4c-f690-4058-b29e-d55c73387026&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens32&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=<span class="string">&quot;192.168.0.50&quot;</span>     //网卡IP地址</span><br><span class="line">PREFIX=<span class="string">&quot;24&quot;</span>      //子网掩码</span><br><span class="line">GATEWAY=<span class="string">&quot;192.168.0.254&quot;</span>   //网关</span><br><span class="line">DNS1=<span class="string">&quot;114.114.114.114&quot;</span>    //DNS</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前系统用户基本信息文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前系统主机名配置文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/hostname</span><br><span class="line">localhost.localdomain</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前系统版本信息文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.6.1810 (Core) </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前系统开机自动挂载配置文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统组基本信息文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/group</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用“-n”以行号形式显示文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/hostname</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/fstab</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/group</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/services </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="less命令"><a href="#less命令" class="headerlink" title="less命令"></a>less命令</h4><ul><li><p>less工具是对文件的输出进行分页显示的工具，常用于查看内容量较大的文件</p></li><li><p>命令格式：less [-选项] 文件</p></li><li><p>常用选项：</p><ul><li>-N #以行号形式显示文件内容</li></ul></li><li><p>使用技巧：</p><ul><li>键盘上下键逐行查看</li><li>pgdn ：向下翻一页（Fn + 下键）</li><li>pgup ：向上翻一页（Fn + 上键）</li></ul></li><li><p>&#x2F;字符串 ：搜索指定字符串（n从上向下搜索，N从下向上搜索）</p><ul><li>G：直接跳转到文件最后一行</li><li>gg：直接跳转到文件行首</li><li>：1000   #精准的定位到某一行</li><li>q ：退出</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# less -N /etc/services</span><br></pre></td></tr></table></figure><h4 id="head与tail命令"><a href="#head与tail命令" class="headerlink" title="head与tail命令"></a>head与tail命令</h4><ul><li><p>head命令：用来显示文件开头部分内容，默认显示文件开头10行内容</p></li><li><p>命令格式：head [选项] 参数</p></li><li><p>常用选项：</p><ul><li>-n&lt;行数&gt; 指定显示的行数</li></ul></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/fstab</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/group</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/hostname</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/hosts</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/sysconfig/network-scripts/ifcfg-ens32 </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看存放DNS配置文件信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/resolv.conf </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用-n指定显示文件前多少行内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 5 /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 6 /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 15 /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 20 /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><p>tail命令：用来显示文件末尾部分内容，默认显示文件末尾10行内容</p></li><li><p>命令格式：tail [选项] 参数</p></li><li><p>常用选项：-n&lt;行数&gt; 指定显示的行数  -f 动态显示</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">tail</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用“-n”指定显示文件末尾多少行内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -n 5 /etc/passwd</span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -n 5 /etc/sysconfig/network-scripts/ifcfg-ens32 </span><br><span class="line">IPADDR=<span class="string">&quot;192.168.0.50&quot;</span></span><br><span class="line">PREFIX=<span class="string">&quot;24&quot;</span></span><br><span class="line">GATEWAY=<span class="string">&quot;192.168.0.254&quot;</span></span><br><span class="line">DNS1=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">IPV6_PRIVACY=<span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#动态查看文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> t1</span><br><span class="line">root@localhost ~]# <span class="built_in">tail</span> -f t1</span><br><span class="line"></span><br><span class="line"><span class="comment">#另开一个终端向文件写入内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> 123 &gt; t1</span><br></pre></td></tr></table></figure><h4 id="rm删除命令"><a href="#rm删除命令" class="headerlink" title="rm删除命令"></a>rm删除命令</h4><ul><li><p>rm（英文全拼：remove）命令用于删除文件或者目录。</p></li><li><p>命令格式：rm [-选项…] 目录或文件…</p></li><li><p>常用选项</p><ul><li>-f 强制删除</li><li>-r 删除目录</li><li>“*”特殊字符：系统常用符号，用来代表任意所有字符</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">abc  abc1  abc2  abc3  anaconda-ks.cfg  hello.txt  home  rh  student  t1  t2  t3  t4  xx  xxoo</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">hello  home  oooo  student1  t1  t2  t3  t4  <span class="built_in">test</span>  test1  test2  test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定目录下文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> /opt/anaconda-ks.cfg </span><br><span class="line"><span class="built_in">rm</span>：是否删除普通文件 <span class="string">&quot;/opt/anaconda-ks.cfg&quot;</span>？y  <span class="comment">#默认需要确认（y|n）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件是否被成功删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">abc  abc1  abc2  abc3  hello.txt  home  rh  student  t1  t2  t3  t4  xx  xxoo</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> /opt/hello.txt </span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;/opt/hello.txt&quot;</span>？y</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时删除目录下指定文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> /opt/t1 /opt/t2 /opt/t3 /opt/t4</span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;/opt/t1&quot;</span>？y</span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;/opt/t2&quot;</span>？y</span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;/opt/t3&quot;</span>？y</span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;/opt/t4&quot;</span>？y</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件是否被成功删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">abc  abc1  abc2  abc3  home  rh  student  xx  xxoo</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用“-f”强制删除文件（无需确认，直接删除）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -f /mnt/hello</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">home  oooo  student1  t1  t2  t3  t4  <span class="built_in">test</span>  test1  test2  test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时强制删除多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -f /mnt/t1 /mnt/t2 /mnt/t3 /mnt/t4</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span>  -r /opt/abc</span><br><span class="line"><span class="built_in">rm</span>：是否删除目录 <span class="string">&quot;/opt/abc&quot;</span>？y</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">abc1  abc2  abc3  home  rh  student  xx  xxoo</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时删除多个目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -r /opt/abc1 /opt/abc2 /opt/abc3</span><br><span class="line"><span class="built_in">rm</span>：是否删除目录 <span class="string">&quot;/opt/abc1&quot;</span>？y</span><br><span class="line"><span class="built_in">rm</span>：是否删除目录 <span class="string">&quot;/opt/abc2&quot;</span>？y</span><br><span class="line"><span class="built_in">rm</span>：是否删除目录 <span class="string">&quot;/opt/abc3&quot;</span>？y</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">home  rh  student  xx  xxoo</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时强制删除多个目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -rf /opt/home /opt/student /opt/xx /opt/xxoo</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录与文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /opt/t1</span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/test</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">rh  t1  <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#rm命令在删除目录时，包含改目录及目录下所有数据全部删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -rf /opt/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br><span class="line">home  oooo  student1  <span class="built_in">test</span>  test1  test2  test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用“*”通配任意所有字符，删除/mnt目录下所有数据</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -rf /mnt/*</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt</span><br></pre></td></tr></table></figure><h4 id="软连接与硬连接"><a href="#软连接与硬连接" class="headerlink" title="软连接与硬连接"></a>软连接与硬连接</h4><ul><li>Linux中的链接文件类似于windows中的快捷方式</li><li>软连接特点：软连接可以跨分区，可以对目录进行链接，源文件删除后，链接文件不可用</li><li>软连接命令格式：ln -s 源文件路径  目标路径</li><li>注意：创建链接时一定要写目录或文件的绝对路径，哪怕是在当前路径下，也要写绝对路径·</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">touch</span> hello.soft</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建软连接（必须要绝对路径创建）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/hello.soft /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看连接文件详细属性</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/hello.soft </span><br><span class="line">lrwxrwxrwx. 1 root root 16 3月  21 14:28 /opt/hello.soft -&gt; /root/hello.soft</span><br><span class="line"><span class="comment">#提示：链接文件的权限最终取决于源文件的权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#普通用户验证</span></span><br><span class="line">[lisi@localhost ~]$ <span class="built_in">ls</span> /opt</span><br><span class="line">hello.soft</span><br><span class="line">[lisi@localhost ~]$ <span class="built_in">ls</span> -l /opt/hello.soft </span><br><span class="line">lrwxrwxrwx. 1 root root 16 3月  21 14:28 /opt/hello.soft -&gt; /root/hello.soft</span><br><span class="line">[lisi@localhost ~]$ <span class="built_in">cat</span> /opt/hello.soft </span><br><span class="line"><span class="built_in">cat</span>: /opt/hello.soft: 权限不够</span><br><span class="line"><span class="comment">#提示：由于源文件存放于/root目录下，而普通用户对/root目录没有任何权限，所以普通用户无法查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除源文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -f /root/hello.soft </span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#山粗源文件后，软链接文件不可用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/hello.soft </span><br><span class="line">lrwxrwxrwx. 1 root root 16 3月  21 14:28 /opt/hello.soft -&gt; /root/hello.soft</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建文件并创建软连接</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> hello.soft</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/hello.soft /opt</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/hello.soft </span><br><span class="line">lrwxrwxrwx. 1 root root 16 3月  21 14:39 /opt/hello.soft -&gt; /root/hello.soft</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除链接文件后，源文件仍然可用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -f /opt/hello.soft </span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> hello.soft </span><br><span class="line"></span><br><span class="line"><span class="comment">#对目录创建软连接</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/test1 /opt/</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -ld /opt/test1</span><br><span class="line">lrwxrwxrwx. 1 root root 11 3月  21 14:44 /opt/test1 -&gt; /root/test1</span><br><span class="line"></span><br><span class="line">3创建链接时一定要写目录或文件的绝对路径，哪怕是在当前路径下，也要写绝对路径</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s hello.soft /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">hello.soft  test1</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/hello.soft </span><br><span class="line">lrwxrwxrwx. 1 root root 10 3月  21 14:47 /opt/hello.soft -&gt; hello.soft</span><br></pre></td></tr></table></figure><ul><li><p>硬链接特点：硬连接不可以跨分区，不可以对目录进行链接，源文件删除后，链接文件仍然可用</p></li><li><p>硬连接命令格式：ln  源文件路径  目标路径</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建文件，并创建硬连接</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> hello.hard</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> /root/hello.hard /opt/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /opt</span><br><span class="line">hello.hard  hello.soft  test1</span><br><span class="line"></span><br><span class="line"><span class="comment">#向硬连接的源文件写入内容</span></span><br><span class="line">root@localhost ~]# <span class="built_in">echo</span> 123 &gt; /root/hello.hard </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看源文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /root/hello.hard </span><br><span class="line">123</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看链接文件内容，以同步更新</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /opt/hello.hard </span><br><span class="line">123</span><br><span class="line"></span><br><span class="line"><span class="comment">#向链接文件写入内容，查看源文件以同步更新</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> xx &gt;&gt; /opt/hello.hard </span><br><span class="line"></span><br><span class="line"><span class="comment">#擦看源文件，以同步更新</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /root/hello.hard </span><br><span class="line">123</span><br><span class="line">xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#硬连接文件的特点可以保持文件属性不发生改变</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /root/hello.hard </span><br><span class="line">-rw-r--r--. 2 root root 7 3月  21 14:55 /root/hello.hard</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -l /opt/hello.hard </span><br><span class="line">-rw-r--r--. 2 root root 7 3月  21 14:55 /opt/hello.hard</span><br><span class="line"></span><br><span class="line"><span class="comment">#并且硬连接文件的i节点号相同</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -i /root/hello.hard </span><br><span class="line">33711090 /root/hello.hard</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -i /opt/hello.hard </span><br><span class="line">33711090 /opt/hello.hard</span><br><span class="line"></span><br><span class="line"><span class="comment">#硬连接不允许对目录进行连接</span></span><br><span class="line">root@localhost ~]# <span class="built_in">ln</span> /root/test1 /opt</span><br><span class="line"><span class="built_in">ln</span>: <span class="string">&quot;/root/test1&quot;</span>: 不允许将硬链接指向目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#硬连接源文件删除后，链接文件仍然可用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -f /root/hello.hard </span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /opt/hello.hard </span><br><span class="line">123</span><br><span class="line">xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#向硬连接文件写入内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span>  abc &gt;&gt; /opt/hello.hard </span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /opt/hello.hard </span><br><span class="line">123</span><br><span class="line">xx</span><br><span class="line">abc</span><br><span class="line"></span><br><span class="line"><span class="comment">#硬连接不允许跨分区</span></span><br><span class="line">[root@localhost ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0              11:0    1  4.3G  0 rom  </span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> /root/hello.soft /boot</span><br><span class="line"><span class="built_in">ln</span>: 无法创建硬链接<span class="string">&quot;/boot/hello.soft&quot;</span> =&gt; <span class="string">&quot;/root/hello.soft&quot;</span>: 无效的跨设备连接</span><br></pre></td></tr></table></figure><h4 id="–help-命令帮助手册"><a href="#–help-命令帮助手册" class="headerlink" title="–help 命令帮助手册"></a>–help 命令帮助手册</h4><ul><li><p>–help命令用于查看系统中命令的帮助信息，包括使用方法、选项等…</p></li><li><p>命令格式：命令  –help</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看命令帮助手册（命令自带）</span></span><br><span class="line">[root@localhost etc]# <span class="built_in">cat</span> --<span class="built_in">help</span></span><br><span class="line">[root@localhost etc]# <span class="built_in">ls</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h4 id="man-获取命令帮助手册"><a href="#man-获取命令帮助手册" class="headerlink" title="man 获取命令帮助手册"></a>man 获取命令帮助手册</h4><ul><li><p>man 命令用于查看系统命令的帮助信息，包括使用方法、选项、使用例子等…，对比–help ，man 输出的信息更加详细</p></li><li><p>命令格式：man [-选项]   命令</p></li><li><p>常用快捷操作</p><ul><li><p>向下键向下移一行</p></li><li><p>向上键向上移一行</p></li><li><p>[Page Down] 向下翻一页</p></li><li><p>[Page Up] 向上翻一页</p></li><li><p>&#x2F;关键字   #搜索关键字，配合n（向下查询）、N（向上查询）</p></li><li><p>q 退出</p></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]# man <span class="built_in">ls</span></span><br><span class="line">[root@localhost etc]# man <span class="built_in">cat</span></span><br><span class="line">[root@localhost etc]# man <span class="built_in">touch</span></span><br><span class="line">[root@localhost etc]# man <span class="built_in">mkdir</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]# info <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h4 id="Linux系统的运行级别"><a href="#Linux系统的运行级别" class="headerlink" title="Linux系统的运行级别"></a>Linux系统的运行级别</h4><p>Linux系统运行级别：linux系统有7个运行级别，不同的运行级别运行的程序和功能都不一样，而Linux系统默认是运行在一个标准的级别上，系统运行级别文件&#x2F;etc&#x2F;inittab文件</p><p>运行级别 0：所有进程被终止，机器将有序的停止，关机时系统处于这个运行级别（关机）</p><p>运行级别 1：单用户模式，（root用户进行系统维护），系统里运行的所有服务也都不会启动</p><p>运行级别 2：多用户模式（网络文件系统NFS服务没有被启动）</p><p>运行级别 3：完全多用户模式，（有NFS网络文件系统）标准的运行级别，命令行模式</p><p>运行级别 4：系统未使用</p><p>运行级别 5：登录后，进入带GUI的图形化界面，标准的运行级别</p><p>运行级别 6：系统正常关闭并重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前系统运行级别</span></span><br><span class="line">[root@localhost etc]# runlevel</span><br><span class="line">N 5</span><br><span class="line"><span class="comment">#解释；当前系统处于的运行级别</span></span><br><span class="line"><span class="comment">#解释：N代表没有从任何级别跳转过来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切换系统运行级别</span></span><br><span class="line">[root@localhost ~]# init N</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看运行级别文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/inittab </span><br><span class="line"><span class="comment"># inittab is no longer used when using systemd.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ADDING CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Ctrl-Alt-Delete is handled by /usr/lib/systemd/system/ctrl-alt-del.target</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># systemd uses &#x27;targets&#x27; instead of runlevels. By default, there are two main targets:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># multi-user.target: analogous to runlevel 3   #运行级别3</span></span><br><span class="line"><span class="comment"># graphical.target: analogous to runlevel 5    #运行级别5</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To view current default target, run:</span></span><br><span class="line"><span class="comment"># systemctl get-default     #查看当前系统默认的运行级别</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To set a default target, run:</span></span><br><span class="line"><span class="comment"># systemctl set-default TARGET.target    #修改当前系统默认运行级别  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看默认运行级别</span></span><br><span class="line">[root@localhost ~]# systemctl get-default</span><br><span class="line">graphical.target  <span class="comment">#默认运行级别为5</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#修改默认运行级别为3</span></span><br><span class="line">[root@localhost ~]# systemctl set-default multi-user.target </span><br><span class="line">[root@localhost ~]# systemctl get-default</span><br><span class="line">multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改默认运行级别为5</span></span><br><span class="line">[root@localhost ~]# systemctl set-default graphical.target</span><br><span class="line">[root@localhost ~]# systemctl get-default</span><br><span class="line">graphical.target</span><br></pre></td></tr></table></figure><h4 id="关机与重启"><a href="#关机与重启" class="headerlink" title="关机与重启"></a>关机与重启</h4><ul><li><p>linux下常用的关机命令有：shutdown、halt、poweroff、init</p><ul><li>init 0 关机</li><li>halt #立刻关机</li></ul></li><li><p>shutdown –h now   #立刻关机</p><ul><li>shutdown -h 10    #10分钟后自动关机</li><li><strong>poweroff           #立刻关机   （记这个）</strong></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# poweroff</span><br></pre></td></tr></table></figure><ul><li>重启命令：reboot  shutdown<ul><li><strong>reboot #立刻重启 （记这个）</strong></li><li>shutdown -r now   #立刻重启</li><li>shutdown -r 10 #过十分钟后重启</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# reboot</span><br></pre></td></tr></table></figure><h4 id="课后练习-1"><a href="#课后练习-1" class="headerlink" title="课后练习"></a>课后练习</h4><p>1.请在&#x2F;tmp目录下创建student目录，并在student目录下同时创建t1、t2、t3文件</p><p>mkdir &#x2F;tmp&#x2F;student</p><p>cd &#x2F;tmp&#x2F;student&#x2F;</p><p>touch t1 t2 t3</p><p>touch &#x2F;tmp&#x2F;student&#x2F;t1 &#x2F;tmp&#x2F;student&#x2F;t2 &#x2F;tmp&#x2F;student&#x2F;t3</p><p>2.请在&#x2F;tmp目录下递归创建test1&#x2F;test2&#x2F;test3目录</p><p>mkdir -p &#x2F;tmp&#x2F;test1&#x2F;test2&#x2F;test3</p><p>3.切换到&#x2F;tmp&#x2F;test1&#x2F;test2&#x2F;test3目录下，并打印(查看)当前所在目录</p><p>cd &#x2F;tmp&#x2F;test1&#x2F;test2&#x2F;test3</p><p>pwd</p><p>4.请同时在&#x2F;opt、&#x2F;media目录下创建upload文件</p><p>touch &#x2F;opt&#x2F;upload &#x2F;media&#x2F;upload</p><p>5.请将&#x2F;opt目录下的upload文件移动至&#x2F;tmp&#x2F;test1&#x2F;test2&#x2F;test3目录下，并改名为upload.bak</p><p>mv &#x2F;opt&#x2F;upload &#x2F;tmp&#x2F;test&#x2F;1&#x2F;test&#x2F;2&#x2F;test3&#x2F;upload.bak</p><p>6.请将&#x2F;etc&#x2F;passwd文件拷贝至&#x2F;opt目录下，改名为passwd.bak，并保持属性不变</p><p>cp -p &#x2F;etc&#x2F;passwd &#x2F;opt&#x2F;passwd.bak</p><p>7.请将&#x2F;etc&#x2F;fstab文件拷贝至&#x2F;opt目录下，并改名为fstab.bak</p><p>cp -p &#x2F;etc&#x2F;fstab &#x2F;opt&#x2F;fstab.bak</p><p>8.请将&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32 文件拷贝至&#x2F;opt目录下，并改名为ens32.bak</p><p>cp &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32 &#x2F;opt&#x2F;ens32.bak</p><p>9.请删除&#x2F;etc&#x2F;yum.repos.d&#x2F;目录下所有内容</p><p>rm -rf &#x2F;etc&#x2F;yum.repos.d&#x2F;*</p><p>10.请在&#x2F;etc&#x2F;yum.repos.d&#x2F;目录下创建local.repo文件</p><p>touch &#x2F;etc&#x2F;yum.repos.d&#x2F;local.repo</p><p>11.请查看&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32文件末尾5行内容</p><p>tail -5 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32 </p><p>tail -n 5 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32</p><p>12.请查看&#x2F;etc&#x2F;passwd文件第1行内容</p><p>head -n 1 &#x2F;etc&#x2F;passwd</p><p>head -1 &#x2F;etc&#x2F;passwd</p><p>13.请查看&#x2F;etc&#x2F;hostname文件内容</p><p>cat &#x2F;etc&#x2F;hostname </p><p>14.请查看&#x2F;etc&#x2F;hosts文件内容</p><p>cat &#x2F;etc&#x2F;hosts</p><p>15.请说出软连接与硬连接的特点</p><p>软连接：可以跨分区，可以对目录链接，源文件删除后链接文件不可用</p><p>硬连接：不可以跨分区，不可以对目录进行连接，源文件删除后，链接文件以然可用</p><p>16.请在&#x2F;opt目录下创建hello.soft文件，并创建软连接到&#x2F;tmp目录下</p><p>touch &#x2F;opt&#x2F;hello.soft</p><p>ln -s &#x2F;opt&#x2F;hello.soft &#x2F;tmp</p><p>17.请在&#x2F;opt目录下创建hello.hard文件，并创建硬连接到&#x2F;tmp目录下，并查看连接文件详细属性</p><p>touch &#x2F;opt&#x2F;hello.hard</p><p>ln &#x2F;opt&#x2F;hello.hard &#x2F;tmp</p><p>18.如何获取ls命令的帮助信息？</p><p>man ls</p><p>ls –help</p><p>19.请说出Linux系统的运行级别</p><p>0：关机</p><p>1：单用户模式</p><p>2：多用户模式（没有NFS）</p><p>3：完全多用户模式，标准运行级别</p><p>4：保留</p><p>5：带GUI图形化界面，标准的运行级别</p><p>6：系统关闭并重启</p><p>20.如何重启Linux系统？</p><p>reboot</p><p>init 6</p><h4 id="计算机硬件组成部分"><a href="#计算机硬件组成部分" class="headerlink" title="计算机硬件组成部分"></a>计算机硬件组成部分</h4><ul><li><p>输入设备：键盘、鼠标、触控屏等</p></li><li><p>主机设备：主板、中央处理器（CPU）、主存储器（内存）、网卡、声卡、显示卡等</p></li><li><p>输出设备：屏幕、耳机、打印机、投影仪等</p></li><li><p>外部存储设备：硬盘、软盘、光盘、U盘等、蓝光光驱</p></li><li><p>CPU缓存</p></li><li><p>CPU比较主流的厂商</p><ul><li>AMD公司</li><li>Interl公司</li></ul></li><li><p>CPU架构</p><ul><li>x86架构，8086架构，80286，80386，x86称号</li><li>8位、16位、32位、64位，CPU一次可以处理的数据量，</li><li>32位CPU一次可以从内存中读取大约3.25G左右的数据量</li><li>64位CPU一次可以从内存中读取大约128G左右的数据量</li></ul></li><li><p>CPU核心</p><ul><li>单核心，一颗CPU只能有一个运算单元</li><li>多核心，一颗CPU里边有两个以上的运算单元</li></ul><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1616909159062.png" alt="1616909159062"></p></li></ul><h4 id="Linux系统目录介绍"><a href="#Linux系统目录介绍" class="headerlink" title="Linux系统目录介绍"></a>Linux系统目录介绍</h4><ul><li><p>&#x2F;（根）:系统所有数据都存放在根目录下</p></li><li><p>&#x2F;bin：存放用户和管理员必备的可执行的二进制程序文件</p></li><li><p>&#x2F;boot：存放Linux系统内核及引导系统程序所需要的文件目录  </p></li><li><p>&#x2F;dev：存放硬件设备的目录，如键盘、鼠标、硬盘、光盘等等  （记住）</p></li><li><p>&#x2F;etc：存放服务的配置文件，用户信息文件  （记住）</p></li><li><p>&#x2F;root：超级管理员的家目录</p></li><li><p>&#x2F;home：系统普通用户的家目录（记住）</p></li><li><p>&#x2F;lib：存放系统中的程序运行所需要的共享库及内核模块  </p></li><li><p>&#x2F;opt：额外安装的可选应用程序包所放置的位置</p></li><li><p>&#x2F;srv：服务启动之后需要访问的数据目录  </p></li><li><p>&#x2F;tmp：一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下  </p></li><li><p>&#x2F;var：存放系统执行过程中经常变化的文件，如随时都在变化的日志文件就存放&#x2F;var&#x2F;log&#x2F;下  （记住）</p></li><li><p>&#x2F;mnt、&#x2F;media ：光盘和镜像等预设的挂载点（记住）</p></li><li><p>&#x2F;proc：Linux伪文件系统，该目录下的数据存在于内存当中，不占用磁盘空间</p></li><li><p>&#x2F;lib64 ：存放函式库</p></li><li><p>&#x2F;run ：程序或服务启动后，存放PID的目录</p></li><li><p>&#x2F;sys：存放被建立在内存中的虚拟文件系统</p></li><li><p>&#x2F;usr：操作系统软件资源所放置的目录  </p><ul><li>&#x2F;usr&#x2F;bin：与&#x2F;bin目录相同，存放用户可以使用的命令程序</li><li>&#x2F;usr&#x2F;lib：与&#x2F;lib目录相同，存放系统中的程序运行所需要的共享库及内核模块</li><li>&#x2F;usr&#x2F;etc：用于存放安装软件时使用的配置文件</li><li>&#x2F;usr&#x2F;games：与游戏比较相关的数据放置处</li><li>&#x2F;usr&#x2F;include：c&#x2F;c++等程序语言的档头(header)与包含档(include)放置处 </li><li>&#x2F;usr&#x2F;lib64：与&#x2F;lib64目录相同，存放函式库</li><li>&#x2F;usr&#x2F;libexec：不经常被使用的执行程序或脚本会放置在此目录中</li><li>&#x2F;usr&#x2F;local： 额外安装的软件存放目录  (记住)</li><li>&#x2F;usr&#x2F;sbin：该目录与&#x2F;sbin目录相同，存放用户可执行的二进制程序文件</li><li>&#x2F;usr&#x2F;share： 放置只读架构的杂项数据文件 </li><li>&#x2F;usr&#x2F;src：一般软件源代码建议存放该目录下</li></ul></li></ul><h4 id="查看内核信息"><a href="#查看内核信息" class="headerlink" title="查看内核信息"></a>查看内核信息</h4><ul><li><p>uname 命令用于显示系统内核信息</p></li><li><p>命令格式：uname [-选项…]</p></li><li><p>常用选项：</p><ul><li>-s ：显示内核名称</li><li>-r ：显示内核版本</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">uname</span></span><br><span class="line">Linux</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">uname</span> -rs</span><br><span class="line">Linux 3.10.0-957.el7.x86_64</span><br><span class="line"><span class="comment">#解释：</span></span><br><span class="line">Linux <span class="comment">#内核名称</span></span><br><span class="line">3<span class="comment">#主版本</span></span><br><span class="line">10<span class="comment">#次版本</span></span><br><span class="line">0<span class="comment">#修改版本</span></span><br><span class="line">957<span class="comment">#补丁次数</span></span><br><span class="line">el7<span class="comment">#Enterprise Linux（企业版Linux）</span></span><br><span class="line">x86_64<span class="comment">#CPU架构</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Linux内核官网</span></span><br><span class="line">https://www.kernel.org/</span><br></pre></td></tr></table></figure><h4 id="查看CPU信息"><a href="#查看CPU信息" class="headerlink" title="查看CPU信息"></a>查看CPU信息</h4><ul><li><p>&#x2F;proc&#x2F;cpuinfo文件用于存放系统CPU信息</p></li><li><p>lscpu 用于显示CPU架构信息</p></li><li><p>命令格式：lscpu [-选项]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看/proc/cpuinfo文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /proc/cpuinfo </span><br><span class="line">processor　：#系统中逻辑处理核的编号。对于单核处理器，则可认为是其CPU编号，对于多核处理器则可以是物理核、或者使用超线程技术虚拟的逻辑核</span><br><span class="line">vendor_id　：   <span class="comment">#CPU制造商     </span></span><br><span class="line">cpu family　：  <span class="comment">#CPU产品系列代号</span></span><br><span class="line">model　　　：    <span class="comment">#CPU属于其系列中的哪一代的代号</span></span><br><span class="line">model name：    <span class="comment">#CPU属于的名字及其编号、标称主频</span></span><br><span class="line">stepping　  ：   <span class="comment">#CPU属于制作更新版本</span></span><br><span class="line">cpu MHz　  ：    <span class="comment">#CPU的实际使用主频</span></span><br><span class="line">cache size   ：  <span class="comment">#CPU二级缓存大小</span></span><br><span class="line">physical <span class="built_in">id</span>   ： <span class="comment">#单个CPU的标号</span></span><br><span class="line">siblings       ：#单个CPU逻辑物理核数</span><br><span class="line">core <span class="built_in">id</span>        ：#当前物理核在其所处CPU中的编号，这个编号不一定连续</span><br><span class="line">cpu cores    ：  <span class="comment">#该逻辑核所处CPU的物理核数</span></span><br><span class="line">apicid          ：#用来区分不同逻辑核的编号，系统中每个逻辑核的此编号必然不同，此编号不一定连续</span><br><span class="line">fpu             ： <span class="comment">#是否具有浮点运算单元（Floating Point Unit）</span></span><br><span class="line">fpu_exception  ：  <span class="comment">#是否支持浮点计算异常</span></span><br><span class="line">cpuid level   ：   <span class="comment">#执行cpuid指令前，eax寄存器中的值，根据不同的值cpuid指令会返回不同的内容</span></span><br><span class="line">wp             ：  <span class="comment">#表明当前CPU是否在内核态支持对用户空间的写保护（Write Protection）</span></span><br><span class="line">flags          ：   <span class="comment">#当前CPU支持的功能</span></span><br><span class="line">bogomips   ：       <span class="comment">#在系统内核启动时粗略测算的CPU速度（Million Instructions Per Second）</span></span><br><span class="line">clflush size  ：    <span class="comment">#每次刷新缓存的大小单位</span></span><br><span class="line">cache_alignment ：  <span class="comment">#缓存地址对齐单位</span></span><br><span class="line">address sizes     ：#可访问地址空间位数</span><br><span class="line">power management ： <span class="comment">#对能源管理的支持，有以下几个可选支持功能：</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用lscpu查看cpu信息</span></span><br><span class="line">[root@localhost ~]# lscpu</span><br><span class="line">　Architecture: <span class="comment">#架构 </span></span><br><span class="line">　　CPU(s): <span class="comment">#逻辑cpu核数 </span></span><br><span class="line">　　Thread(s) per core: <span class="comment">#每个核心线程 </span></span><br><span class="line">　　Core(s) per socket: <span class="comment">#每个cpu插槽核数/每颗物理cpu核数 </span></span><br><span class="line">　　CPU socket(s): <span class="comment">#cpu插槽数 </span></span><br><span class="line">　　Vendor ID: <span class="comment">#cpu厂商ID </span></span><br><span class="line">　　CPU family: <span class="comment">#cpu系列 </span></span><br><span class="line">　　Model: <span class="comment">#型号 </span></span><br><span class="line">　　Stepping: <span class="comment">#步进 </span></span><br><span class="line">　　CPU MHz: <span class="comment">#cpu主频 </span></span><br><span class="line">　　Virtualization: <span class="comment">#cpu支持的虚拟化技术 </span></span><br><span class="line">　　L1d cache: <span class="comment">#一级缓存（google了下，这具体表示表示cpu的L1数据缓存） </span></span><br><span class="line">　　L1i cache: <span class="comment">#一级缓存（具体为L1指令缓存） </span></span><br><span class="line">　　L2 cache: <span class="comment">#二级缓存</span></span><br></pre></td></tr></table></figure><h4 id="查看系统内存信息"><a href="#查看系统内存信息" class="headerlink" title="查看系统内存信息"></a>查看系统内存信息</h4><ul><li><p>&#x2F;proc&#x2F;meminfo文件用于存放系统内存信息</p></li><li><p>free 用于查看内存使用情况</p></li><li><p>命令格式：free [-选项]</p></li><li><p>常用选项：-h   #以人类易读方式显示大小（KB，MB，GB）</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看/proc/meminfo文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /proc/meminfo </span><br><span class="line">MemTotal:          995896 kB    <span class="comment">#所有可用的内存大小，物理内存减去预留位和内核使用。系统从加电开始到引导完成，firmware/BIOS要预留一些内存，内核本身要占用一些内存，最后剩下可供内核支配的内存就是MemTotal。这个值在系统运行期间一般是固定不变的，重启会改变。</span></span><br><span class="line">MemFree:            244196 kB   <span class="comment">#表示系统尚未使用的内存。</span></span><br><span class="line">MemAvailable:       435080 kB   <span class="comment">#真正的系统可用内存，系统中有些内存虽然已被使用但是可以回收的，比如cache/buffer、slab都有一部分可以回收，所以这部分可回收的内存加上MemFree才是系统可用的内存</span></span><br><span class="line">Buffers:             2132 kB   <span class="comment">#用来给块设备做缓存的内存，(文件系统的 metadata、pages)</span></span><br><span class="line">Cached:             314632 kB  <span class="comment">#分配给文件缓冲区的内存,例如vi一个文件，就会将未保存的内容写到该缓冲区</span></span><br><span class="line">SwapCached:            0 kB    <span class="comment">#被高速缓冲存储用的交换空间（硬盘的swap）的大小</span></span><br><span class="line">Active:            295908 kB    <span class="comment">#经常使用的高速缓冲存储器页面文件大小</span></span><br><span class="line">Inactive:          271552 kB    <span class="comment">#不经常使用的高速缓冲存储器文件大小</span></span><br><span class="line">Active(anon):      251528 kB    <span class="comment">#活跃的匿名内存</span></span><br><span class="line">Inactive(anon):     13044 kB    <span class="comment">#不活跃的匿名内存</span></span><br><span class="line">Active(file):       44380 kB    <span class="comment">#活跃的文件使用内存</span></span><br><span class="line">Inactive(file):    258508 kB   <span class="comment">#不活跃的文件使用内存</span></span><br><span class="line">Unevictable:           0 kB    <span class="comment">#不能被释放的内存页</span></span><br><span class="line">Mlocked:               0 kB    <span class="comment">#系统调用 mlock 家族允许程序在物理内存上锁住它的部分或全部地址空间。这将阻止Linux 将这个内存页调度到交换空间（swap space），即使该程序已有一段时间没有访问这段空间</span></span><br><span class="line">SwapTotal:             0 kB    <span class="comment">#交换空间总内存</span></span><br><span class="line">SwapFree:              0 kB    <span class="comment">#交换空间空闲内存</span></span><br><span class="line">Dirty:                 4 kB    <span class="comment">#等待被写回到磁盘的</span></span><br><span class="line">Writeback:             0 kB    <span class="comment">#正在被写回的</span></span><br><span class="line">AnonPages:         15100 kB    <span class="comment">#未映射页的内存/映射到用户空间的非文件页表大小</span></span><br><span class="line">Mapped:             7160 kB    <span class="comment">#映射文件内存</span></span><br><span class="line">Shmem:               100 kB    <span class="comment">#已经被分配的共享内存</span></span><br><span class="line">Slab:               9236 kB    <span class="comment">#内核数据结构缓存</span></span><br><span class="line">SReclaimable:       2316 kB    <span class="comment">#可收回slab内存</span></span><br><span class="line">SUnreclaim:         6920 kB    <span class="comment">#不可收回slab内存</span></span><br><span class="line">KernelStack:        2408 kB    <span class="comment">#内核消耗的内存</span></span><br><span class="line">PageTables:         1268 kB    <span class="comment">#管理内存分页的索引表的大小</span></span><br><span class="line">NFS_Unstable:          0 kB    <span class="comment">#不稳定页表的大小</span></span><br><span class="line">Bounce:                0 kB    <span class="comment">#在低端内存中分配一个临时buffer作为跳转，把位于高端内存的缓存数据复制到此处消耗的内存</span></span><br><span class="line">WritebackTmp:          0 kB    <span class="comment">#FUSE用于临时写回缓冲区的内存</span></span><br><span class="line">CommitLimit:       22980 kB    <span class="comment">#系统实际可分配内存</span></span><br><span class="line">Committed_AS:     536244 kB    <span class="comment">#系统当前已分配的内存</span></span><br><span class="line">VmallocTotal:     892928 kB    <span class="comment">#预留的虚拟内存总量</span></span><br><span class="line">VmallocUsed:       29064 kB    <span class="comment">#已经被使用的虚拟内存</span></span><br><span class="line">VmallocChunk:     860156 kB    <span class="comment">#可分配的最大的逻辑连续的虚拟内存</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用free命令查看内存使用情况</span></span><br><span class="line">[root@localhost ~]# free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           972M        344M        238M         13M        389M        424M</span><br><span class="line">Swap:          2.0G          0B        2.0G</span><br><span class="line"><span class="comment">#解释：Mem 物理内存统计信息</span></span><br><span class="line">total：<span class="comment">#物理内存总量</span></span><br><span class="line">used：<span class="comment">#以使用的内存总量</span></span><br><span class="line">free：<span class="comment">#空闲内存总量</span></span><br><span class="line">shared：<span class="comment">#共享内存总量</span></span><br><span class="line">buff/cache：<span class="comment">#块设备与普通文件占用的缓存数量</span></span><br><span class="line">available：<span class="comment">#还可以被应用程序使用的物理内存大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解释：Swap 内存交换空间，当物理内存不足时，可以使用硬盘空间充当内存使用</span></span><br><span class="line">total：<span class="comment">#交换分区内存总量</span></span><br><span class="line">used：<span class="comment">#正在使用的交换分区内存</span></span><br><span class="line">free：<span class="comment">#空闲交换分区内存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭swap功能（临时关闭）</span></span><br><span class="line">[root@localhost ~]# swapoff -a</span><br></pre></td></tr></table></figure><h4 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h4><ul><li>网卡配置文件地址： &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;网卡名</li><li>ifconfig 用于显示和设置网卡的参数</li><li>命令格式： ifconfig [网卡名]</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/sysconfig/network-scripts/ifcfg-ens32</span><br><span class="line">TYPE=“Ethernet“<span class="comment">#网卡类型=以太 ※</span></span><br><span class="line">PROXY_METHOD=“none“<span class="comment">#代理方式=关闭</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no“#只是浏览器=否</span></span><br><span class="line"><span class="string">BOOTPROTO=“none“#获取IP地址的方式=固定IP ※</span></span><br><span class="line"><span class="string">DEFROUTE=“yes“#是否设置默认路由=是</span></span><br><span class="line"><span class="string">IPV4_FAILURE_FATAL=“no“#是否开启ipv4致命检测=否（如果ipv4配置失败禁用设备）</span></span><br><span class="line"><span class="string">NAME=“ens32“#物理网卡设备名字 ※</span></span><br><span class="line"><span class="string">UUID=“3ef0d258-f9a4-49e5-a9da-7b47bc98daa0“#网卡UUID</span></span><br><span class="line"><span class="string">DEVICE=“ens32“#网卡名字 ※</span></span><br><span class="line"><span class="string">ONBOOT=“yes“#开机或重启时是否启动网卡  ※</span></span><br><span class="line"><span class="string">IPADDR=“192.168.0.210“#IP地址  ※</span></span><br><span class="line"><span class="string">PREFIX=“24“#子网掩码 ※</span></span><br><span class="line"><span class="string">GATEWAY=“192.168.0.254“#网关※</span></span><br><span class="line"><span class="string">DNS1=“8.8.8.8“#dns服务器IP地址 ※</span></span><br><span class="line"><span class="string">DNS2=8.8.4.4#备用dns服务器IP地址 ※</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用ifconfig命令查看网卡信息</span></span><br><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">ens32: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.29  netmask 255.255.255.0  broadcast 192.168.0.255</span><br><span class="line">        inet6 fe80::8d50:c4d5:97b0:9d64  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:b0:cf:c8  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 3948  bytes 1811465 (1.7 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2538  bytes 459113 (448.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"><span class="comment">#解释：</span></span><br><span class="line">ens32: <span class="comment">#网卡名称  ※</span></span><br><span class="line">flags=4163：<span class="comment">#标志</span></span><br><span class="line">UP：<span class="comment">#网卡处于活跃状态  ※</span></span><br><span class="line">BROADCAST：<span class="comment">#支持广播</span></span><br><span class="line">RUNNING：<span class="comment">#网线已接入</span></span><br><span class="line">MULTICAST：<span class="comment">#支持组播</span></span><br><span class="line">mtu 1500：<span class="comment">#最大传输单元（字节），表示此网卡一次能传输的最大数据包 ※</span></span><br><span class="line">inet 192.168.0.29<span class="comment">#IPV4地址 ※</span></span><br><span class="line">netmask 255.255.255.0<span class="comment">#子网掩码 ※</span></span><br><span class="line">broadcast 192.168.0.255<span class="comment">#广播地址 ※</span></span><br><span class="line">inet6 fe80::8d50:c4d5:97b0:9d64<span class="comment">#IPV6地址</span></span><br><span class="line">prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;<span class="comment">#前缀 64 作用域 0x20</span></span><br><span class="line">ether 00:0c:29:b0:cf:c8<span class="comment">#网卡MAC地址 ※</span></span><br><span class="line">xqueuelen 1000<span class="comment">#网卡设置的传送队列长度</span></span><br><span class="line">(Ethernet)<span class="comment">#网卡连接类型</span></span><br><span class="line">RX packets 3948<span class="comment">#接收正确的数据包 ※</span></span><br><span class="line">bytes 1811465 (1.7 MiB)<span class="comment">#接收的数据量与字节 ※</span></span><br><span class="line">RX errors 0  dropped 0  overruns 0  frame 0 <span class="comment">#接收到的错误包、丢弃的数据包数、由于速度过快而丢失的数据包、发生frame错误而丢失的数据包数 ※</span></span><br><span class="line">TX packets 100 <span class="comment">#发送的正确的数据包数 ※</span></span><br><span class="line">bytes 8116 (7.9 KiB)#发送的数据量、字节  ※</span><br><span class="line">TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0 <span class="comment">#发送时产生错误的数据包数、丢弃的数据包数、由于速度过快而丢失的数据包数、发生carrier错误而丢失的数据包数、冲突信息包的数目 ※</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#只查看指定的网卡</span></span><br><span class="line">[root@localhost ~]# ifconfig ens32</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lo: 本地回环网卡，不是物理网卡，通过软件虚拟出来的一个网卡，127.0.0.1，用于测试本机的联通性</span><br><span class="line">[root@localhost ~]# ping 127.0.0.1</span><br><span class="line"></span><br><span class="line">virbr0: 虚拟化的网络接口，通过软件技术虚拟出来的一个网卡，192.168.122.1，KVM虚拟化技术的时候</span><br></pre></td></tr></table></figure><h4 id="查看主机名及修改主机名"><a href="#查看主机名及修改主机名" class="headerlink" title="查看主机名及修改主机名"></a>查看主机名及修改主机名</h4><ul><li><p>&#x2F;etc&#x2F;hostname文件用于存放主机名</p></li><li><p>hostname 命令用于显示和设置主机名</p></li><li><p>命令格式：hostname  [新名称]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看主机名</span></span><br><span class="line">[root@localhost ~]# hostname</span><br><span class="line">localhost.localdomain</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看主机名配置文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/hostname </span><br><span class="line">localhost.localdomain</span><br><span class="line"></span><br><span class="line"><span class="comment">#临时修改主机名（立刻生效，服务器重启以后失效）</span></span><br><span class="line">[root@localhost ~]# hostname <span class="built_in">test</span></span><br><span class="line">[root@localhost ~]# hostname</span><br><span class="line"><span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#exit/loguot登出系统</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">exit</span></span><br><span class="line">[c:\~]$ ssh 192.168.0.50</span><br><span class="line">[root@<span class="built_in">test</span> ~]# </span><br><span class="line"></span><br><span class="line"><span class="comment">#命令行永久修改主机名（立刻生效，不需要重启系统）</span></span><br><span class="line">[root@localhost ~]# hostnamectl set-hostname <span class="built_in">test</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h4 id="vi-vim文本编辑器"><a href="#vi-vim文本编辑器" class="headerlink" title="vi&#x2F;vim文本编辑器"></a>vi&#x2F;vim文本编辑器</h4><ul><li><p>Vim是从 vi 发展出来的一个文本编辑器，vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性</p></li><li><p>vi&#x2F;vim 共分为三种模式：命令模式、输入模式、底线命令模式（末行模式）</p><ul><li><p>命令模式：刚刚启动 vi&#x2F;vim，便进入了命令模式</p></li><li><p>输入模式：在命令模式下按 a&#x2F;i&#x2F;o 就进入了输入模式</p></li><li><p>ESC，退出输入模式，切换到命令模式</p></li><li><p>底线命令模式：在命令模式下按下:（英文冒号）就进入了底线命令模式</p></li></ul></li><li><p>命令格式：vim 文件名</p><ul><li>若文件不存在，则新创建文件并编辑</li><li>若文件以存在，则打开文件并编辑</li></ul></li><li><p>命令模式：刚刚启动 vi&#x2F;vim，便进入了命令模式</p><ul><li>i    切换到输入模式，在当前光标所在字符前插入</li><li>a   切换到输入模式，在当前光标所在字符后插入</li><li>o   切换到输入模式，在当前光标所在行下插入新行</li><li>:    切换到底线命令模式，以在最底一行输入命令</li><li>x    在命令模式下删除当前光标所在的单字符</li><li>dd   删除一整行内容，配合数字可删除指定范围内的行</li><li>C    删除当前光标及光标后所有内容并进入输入模式</li><li>u    恢复上一次修改内容，一次恢复一个操作，可多次恢复，直到恢复本次操作初始状态为止</li><li>$    将光标移动至行尾</li><li>0（零）    将光标移动至行首</li><li>gg   跳转至文件第一行</li><li>G    跳转至文件最后一行</li><li>yy    复制当前行，配合数字可以同时复制多行</li><li>p    粘贴当前光标所在行下</li><li>&#x2F;关键字  搜索文件内关键字，n从上向下快速定位关键字，N从下向上快速定位关键字</li></ul></li><li><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><ul><li>:w   保存</li><li>:q   退出</li><li>:wq    保存并退出</li><li>:x        保存并退出</li><li>ZZ       保存并退出</li><li>:q!     强制退出不保存</li><li>:wq!  强制保存并退出，适用于只读文件（没有写权限）</li><li>:set nu   以行号形式显示文件内容</li><li>:set nonu 取消行号显示</li><li>:行号     快速跳转到指定行</li><li>:%s          替换文件内容，g替换全文，默认只替换每一行匹配到的第一个关键字（数字s 指定替换的行）</li><li>:nohl   取消高亮显示</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# vim /etc/services </span><br></pre></td></tr></table></figure><h4 id="修改网卡IP地址"><a href="#修改网卡IP地址" class="headerlink" title="修改网卡IP地址"></a>修改网卡IP地址</h4><ul><li>网卡配置文件地址： &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;网卡名</li><li>ifconfig          #用于显示和设置网卡的参数</li><li>systemctl restart network  #重启网络</li><li>ifup 网卡名       #启动该网卡设备</li><li>ifdown 网卡名  #禁用该网卡设备</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改IP地址</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# vim /etc/sysconfig/network-scripts/ifcfg-ens32 </span><br><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;ens32&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;16085f4c-f690-4058-b29e-d55c73387026&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens32&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=<span class="string">&quot;192.168.0.60&quot;</span>   <span class="comment">#修改IP地址</span></span><br><span class="line">PREFIX=<span class="string">&quot;24&quot;</span></span><br><span class="line">GATEWAY=<span class="string">&quot;192.168.0.254&quot;</span></span><br><span class="line">DNS1=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">IPV6_PRIVACY=<span class="string">&quot;no&quot;</span></span><br><span class="line">~                    </span><br><span class="line"><span class="comment">#重启网络（IP地址发生改变，当前终端会断开）</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# systemctl restart network</span><br><span class="line">[c:\~]$ ssh 192.168.0.60</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭网卡并激活网卡</span></span><br><span class="line">[root@localhost ~]# ifdown ens32;ifup ens32</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有网卡信息</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# ip a </span><br></pre></td></tr></table></figure><ul><li>使用命令修改网卡IP地址</li></ul><p>nmcli connection modify 网卡名 ipv4.method manual ipv4.addresses Ip地址&#x2F;掩码 connection.autoconnect yes</p><p>解释：2</p><p>nmcli connection modify（修改） </p><p>网卡名 ipv4.method（配置ipv4地址方法）</p><p>manual （手动配置）</p><p>ipv4.addresses（ipv4地址） </p><p>Ip地址&#x2F;掩码 connection.autoconnect yes（开机自动连接）</p><ul><li>激活网卡：nmcli connection up 网卡名</li><li>关闭网卡：nmcli connection down 网卡名</li><li>重启网卡：nmcli connection reload 网卡名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用命令修改网卡IPV地址</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# nmcli connection modify ens32 ipv4.method manual ipv4.addresses 192.168.0.50/24 connection.autoconnect <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#激活网卡</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# nmcli connection up ens32</span><br><span class="line">[c:\~]$ ssh 192.168.0.50</span><br></pre></td></tr></table></figure><h4 id="host命令"><a href="#host命令" class="headerlink" title="host命令"></a>host命令</h4><ul><li>host用于将一个域名解析到一个IP地址<ul><li>补充：如果最小化安装没有该命令（可以查询该命令由哪个软件包提供： yum provides host）</li><li>安装：yum -y install bind-utils</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# host www.baidu.com</span><br><span class="line">www.baidu.com has address 110.242.68.3</span><br><span class="line">www.baidu.com has address 110.242.68.4</span><br><span class="line">www.baidu.com is an <span class="built_in">alias</span> <span class="keyword">for</span> www.a.shifen.com.</span><br><span class="line">www.baidu.com is an <span class="built_in">alias</span> <span class="keyword">for</span> www.a.shifen.com.</span><br></pre></td></tr></table></figure><h4 id="nslookup命令"><a href="#nslookup命令" class="headerlink" title="nslookup命令"></a>nslookup命令</h4><ul><li>nslookup用于查询域名解析是否正常，在网络故障时用来诊断网络问题</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# nslookup www.baidu.com</span><br><span class="line">Server:114.114.114.114</span><br><span class="line">Address:114.114.114.114#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:www.baidu.com</span><br><span class="line">Address: 110.242.68.4</span><br><span class="line">Name:www.baidu.com</span><br><span class="line">Address: 110.242.68.3</span><br></pre></td></tr></table></figure><h4 id="alias别名管理"><a href="#alias别名管理" class="headerlink" title="alias别名管理"></a>alias别名管理</h4><ul><li><p>alias命令用于设置命令别名，用户可以使用alias自定义命令别名来简化命令的复杂度</p></li><li><p>.bashrc 文件存放命令别名</p></li><li><p>命令格式：aliasi [别名]&#x3D;[命令]       #注意事项：等号（&#x3D;）前后不能有空格</p></li><li><p>unalias 别名         #取消别名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义别名</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span> lsnet=<span class="string">&#x27;ls /etc/sysconfig/network-scripts/&#x27;</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# lsnet</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span> myls=<span class="string">&#x27;ls -ldh&#x27;</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# myls /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前系统可用命令别名</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">&#x27;egrep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fgrep=<span class="string">&#x27;fgrep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l.=<span class="string">&#x27;ls -d .* --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -l --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> lsnet=<span class="string">&#x27;ls /etc/sysconfig/network-scripts/&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> myls=<span class="string">&#x27;ls -ldh&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">which</span>=<span class="string">&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#两条命令效果相同</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span> -l hello</span><br><span class="line">-rw-r--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line">[root@<span class="built_in">test</span> ~]# ll hello</span><br><span class="line">-rw-r--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">which</span> <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line">/usr/sbin/ls</span><br><span class="line">[root@<span class="built_in">test</span> ~]# /usr/sbin/ls</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#取消本次命令的别名功能“\”</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# \<span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#取消命令别名</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">unalias</span> myls</span><br><span class="line">[root@<span class="built_in">test</span> ~]# myls</span><br><span class="line">bash: myls: 未找到命令...</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义别名不要跟系统命令发生冲突</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span> <span class="built_in">ls</span>=hostname</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#取消命令别名</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">unalias</span> <span class="built_in">ls</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新定义别名</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h4 id="history-管理命令历史"><a href="#history-管理命令历史" class="headerlink" title="history 管理命令历史"></a>history 管理命令历史</h4><ul><li><p>history命令用于显示历史记录和执行过的命令，登录系统时会读取.bash_history历史文件中记录下的命令，当退出时，会自动保存到历史命令文件，该命令单独使用时，仅显示历史命令</p></li><li><p>历史命令默认只能存储1000条，可以通过&#x2F;etc&#x2F;profile文件修改</p></li><li><p>命令格式：history [-选项] [参数]</p></li><li><p>常用选项：</p><ul><li>-a 追加本次新执行的命令至历史命令文件中</li><li>-d 删除历史命令中指定的命令</li><li>-c 清空历史命令列表</li></ul></li><li><p>快捷操作：</p><ul><li><p>!# 调用命令历史中第N条命令</p></li><li><p>!string 调用命令历史中最近一次以strind开头的命令</p></li><li><p>!! 重复执行上一条命令</p></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取命令帮助</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">help</span> <span class="built_in">history</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看历史命令</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看记录历史命令文件</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> .bash_history </span><br><span class="line"></span><br><span class="line"><span class="comment">#将历史命令同步至历史命令配置文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span> -a</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> .bash_history </span><br><span class="line"></span><br><span class="line"><span class="comment">#删除历史命令中655条命令历史</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span> -d 655</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span> -d 637</span><br><span class="line"></span><br><span class="line"><span class="comment">#清空缓存中所有历史命令</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span> -c</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">history</span></span><br><span class="line">    1  <span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除历史命令配置文件（该文件删除后系统会再次自动创建）</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">rm</span> -rf .bash_history </span><br><span class="line"></span><br><span class="line"><span class="comment">#快速调用历史命令中第1条</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# !1</span><br><span class="line">[root@<span class="built_in">test</span> ~]# !3</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用历史命令中以cat开头的命令（只调用最近使用的cat历史命令）</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# !<span class="built_in">cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重复执行上一条命令</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# !!</span><br><span class="line"></span><br><span class="line"><span class="comment">#历史命令默认只能记录1000条，可以通过/etc/profile文件修改</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# vim /etc/profile</span><br><span class="line">...</span><br><span class="line">46 HISTSIZE=100</span><br></pre></td></tr></table></figure><h4 id="date日期时间管理"><a href="#date日期时间管理" class="headerlink" title="date日期时间管理"></a>date日期时间管理</h4><ul><li><p>date命令用于显示或设置系统日期与时间</p></li><li><p>命令格式：date  [+格式符]       #查看系统日期时间</p></li><li><p>命令格式：date  [-选项]            #设置日期时间</p></li><li><p>常用选项：-s 设置日期时间</p></li><li><p>格式符：</p><ul><li><p>+%Y 年份</p></li><li><p>+%B 月份</p></li><li><p>+%d 日</p></li><li><p>+%H 时</p></li><li><p>+%M 分</p></li><li><p>+%S 秒</p></li><li><p>+%F 年-月-日</p></li><li><p>+%X 时：分：秒</p></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示系统日期与时间</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span></span><br><span class="line">2021年 03月 28日 星期日 17:08:34 CST</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示年分</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%Y</span><br><span class="line">2021</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示月份</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%B</span><br><span class="line">三月</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示几号</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%d</span><br><span class="line">28</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示小时</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%H</span><br><span class="line">17</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示分钟</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%M</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示秒</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%S</span><br><span class="line">24</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示年月日</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%F</span><br><span class="line">2021-03-28</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示时分秒</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%X</span><br><span class="line">17时12分10秒</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示年月日时分秒</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%F%X</span><br><span class="line">2021-03-2817时12分39秒</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以自定义分隔符“-”</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%F-%X</span><br><span class="line">2021-03-28-17时13分38秒</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> +%F:%X</span><br><span class="line">2021-03-28:17时13分55秒</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改系统年月日</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> -s 2020-03-28</span><br><span class="line">2020年 03月 28日 星期六 00:00:00 CST</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改系统时分秒</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> -s 17:16:00</span><br><span class="line">2020年 03月 28日 星期六 17:16:00 CST</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改年月日时分秒</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span> -s <span class="string">&#x27;2021-03-28 17:17:00&#x27;</span></span><br><span class="line">2021年 03月 28日 星期日 17:17:00 CST</span><br><span class="line"><span class="comment">#解释：</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>单引号：引用整体，屏蔽特殊符号的功能</span><br><span class="line"><span class="string">&quot;&quot;</span>双引号：引用整体，不会屏蔽特殊符号的功能</span><br><span class="line"></span><br><span class="line"><span class="comment">#Linux的两种时钟</span></span><br><span class="line">系统时钟：内核通过CPU的工作频率去计算的时间</span><br><span class="line">硬件时钟：</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示硬件时间</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# clock</span><br><span class="line">2021年03月28日 星期日 17时23分42秒  -0.945549 秒</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示并同步系统与硬件时钟</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# man hwclock</span><br><span class="line">-s：把系统时间设置成与硬件时间相同</span><br><span class="line">-w：把硬件时间设置成与系统时间相同</span><br><span class="line">[root@<span class="built_in">test</span> ~]# hwclock -w</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">date</span></span><br><span class="line">2021年 03月 28日 星期日 17:27:18 CST</span><br><span class="line"></span><br><span class="line"><span class="comment">#cal显示日历</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# cal</span><br><span class="line">      三月 2021     </span><br><span class="line">日 一 二 三 四 五 六</span><br><span class="line">    1  2  3  4  5  6</span><br><span class="line"> 7  8  9 10 11 12 13</span><br><span class="line">14 15 16 17 18 19 20</span><br><span class="line">21 22 23 24 25 26 27</span><br><span class="line">28 29 30 31</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示指定的全年月份</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# cal 2021</span><br></pre></td></tr></table></figure><h4 id="wc统计命令"><a href="#wc统计命令" class="headerlink" title="wc统计命令"></a>wc统计命令</h4><ul><li><p>wc 用于统计文件的字节数、行数，并将统计的结果输出到屏幕</p></li><li><p>命令格式：wc [-选项] 文件名</p></li><li><p>常用选项：</p><ul><li>-c #统计字节数</li><li>-l #统计行数</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">wc</span> /etc/passwd</span><br><span class="line">43   87 2259 /etc/passwd</span><br><span class="line">行数 单词 字节  文件名</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计文件字节数</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">wc</span> -c /etc/passwd</span><br><span class="line">2259 /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计文件行数</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">wc</span> -l /etc/passwd</span><br><span class="line">43 /etc/passwd</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">wc</span> -l /etc/fstab</span><br><span class="line">11 /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h4><ul><li>管道符“|”：将命令的输出结果交给另外一条命令作为参数继续处理</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">head</span> -10 /etc/passwd |<span class="built_in">tail</span> -5</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">head</span> -10 /etc/passwd |<span class="built_in">tail</span> -5 |<span class="built_in">wc</span> -l</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> -n /etc/passwd |<span class="built_in">head</span> -10|<span class="built_in">tail</span> -5</span><br><span class="line">     6<span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">     7shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">     8halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">     9mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">    10operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# ifconfig ens32 |<span class="built_in">head</span> -2</span><br><span class="line">ens32: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.50  netmask 255.255.255.0  broadcast 192.168.0.255</span><br></pre></td></tr></table></figure><h4 id="重定向操作"><a href="#重定向操作" class="headerlink" title="重定向操作"></a>重定向操作</h4><ul><li><p>重定向操作：将前面命令的输出结果，写入到其他的文本文件中</p></li><li><p>重定向的表示符号</p><ul><li>&gt; #重定向输出（覆盖）</li><li>&gt;&gt; #重定向输出（追加）</li><li>&lt;&lt; #输入重定向（追加）</li><li>&gt; 只收集正确的输出结果</li><li>2&gt; 只收集错误的输出结果（覆盖）</li><li>2&gt;&gt; 只收集错误的输出结果（追加）</li><li>&amp;&gt; 正确错误都收集（覆盖）</li><li>&amp;&gt;&gt; 正确错误都收集（追加）</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将命令的输出结果以覆盖的方式重定向到文件中，（&gt;附带创建文件功能）</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# ifconfig ens32 |<span class="built_in">head</span> -2 &gt; /opt/ens32.bak</span><br><span class="line">ens32: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.50  netmask 255.255.255.0  broadcast 192.168.0.255</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /etc/hostname &gt; /opt/ens32.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/ens32.bak </span><br><span class="line"><span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# free -h &gt; /opt/free.bak</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/free.bak </span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           972M        414M        123M         15M        435M        336M</span><br><span class="line">Swap:          2.0G          0B        2.0G</span><br><span class="line"></span><br><span class="line"><span class="comment">#将命令的输出结果以追加的方式重定向到文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /etc/hostname &gt;&gt; /opt/free.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/free.bak </span><br><span class="line"></span><br><span class="line"><span class="comment">#重定向输入（&gt;覆盖）以EOF开始，以EOF结束，中间写入内容</span></span><br><span class="line">[root@<span class="built_in">test</span> opt]# <span class="built_in">cat</span> &gt; xxxx.txt &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; hello</span></span><br><span class="line"><span class="string">&gt; Linux</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#追加重定向输入（&gt;&gt;最佳）</span></span><br><span class="line">[root@<span class="built_in">test</span> opt]# <span class="built_in">cat</span> &gt;&gt; xxxx.txt &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; 你好</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#“&gt;”只收集正确的输出结果，不收集错误的输出结果</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span> xxooooxx &gt; /opt/xx.txt</span><br><span class="line"><span class="built_in">ls</span>: 无法访问xxooooxx: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#“2&gt;”只收集错误的输出结果，不收集正确的输出结果</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span> xxooooxx 2&gt; /opt/xx.txt</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/xx.txt </span><br><span class="line"><span class="built_in">ls</span>: 无法访问xxooooxx: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#“2&gt;”以覆盖的方式将输出结果重定向到文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /etc/abc 2&gt; /opt/ens32.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/ens32.bak </span><br><span class="line"><span class="built_in">cat</span>: /etc/abc: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#“2&gt;&gt;”以追加的方式将输出结果重定向到文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span> /etc/abcd 2&gt;&gt; /opt/ens32.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/ens32.bak </span><br><span class="line"><span class="built_in">cat</span>: /etc/abc: 没有那个文件或目录</span><br><span class="line"><span class="built_in">ls</span>: 无法访问/etc/abcd: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#“&amp;&gt;”以覆盖的方式将正确输出与错误输出重定向到文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# lscat &amp;&gt; /opt/abc.txt</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/abc.txt </span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">ls</span> /etc/passwd &amp;&gt; /opt/pass.bak</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/pass.bak </span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# free -h &amp;&gt; /opt/pass.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/pass.bak </span><br><span class="line"></span><br><span class="line"><span class="comment">#“&amp;&gt;”以追加的方式将正确输出与错误输出重定向到文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# ifconfig ens32 | <span class="built_in">head</span> -2 &amp;&gt;&gt; /opt/pass.bak </span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /opt/pass.bak </span><br><span class="line"></span><br><span class="line"><span class="comment">#以覆盖方式将正确输出与错误输出重定向到不同文件中</span></span><br><span class="line">[root@<span class="built_in">test</span> ~]# ll -d /root/  bcd &gt;a.txt 2&gt;b.txt</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> a.txt </span><br><span class="line">dr-xr-x---. 24 root root 4096 3月  28 18:07 /root/</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> b.txt </span><br><span class="line"><span class="built_in">ls</span>: 无法访问bcd: 没有那个文件或目录</span><br></pre></td></tr></table></figure><h4 id="echo命令与sleep命令"><a href="#echo命令与sleep命令" class="headerlink" title="echo命令与sleep命令"></a>echo命令与sleep命令</h4><ul><li><p>echo命令用于输出指定的字符串和变量</p></li><li><p>命令格式：echo [-选项] [参数]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> xxoo</span><br><span class="line">xxoo</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> abc</span><br><span class="line">abc</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> 男人好难</span><br><span class="line">男人好难</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> 123</span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /etc/hostname </span><br><span class="line"><span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">echo</span> localhost &gt; /etc/hostname</span><br><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">cat</span> /etc/hostname </span><br><span class="line">localhost</span><br></pre></td></tr></table></figure><ul><li><p>sleep命令可以用来将目前动作延迟一段时间</p></li><li><p>命令格式：sleep 时间</p></li><li><p>常用选项： s 秒 m 分钟 h 小时 d 日</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]# <span class="built_in">sleep</span> 3</span><br></pre></td></tr></table></figure><h4 id="课后练习-2"><a href="#课后练习-2" class="headerlink" title="课后练习"></a>课后练习</h4><p>1.查看当前系统内核名称及版本信息</p><p>uname -sr</p><p>2.请写系统存放cpu配置文件</p><p>&#x2F;proc&#x2F;cpuinfo</p><p>3.请写出查看cpu信息命令</p><p>cat &#x2F;proc&#x2F;cpuinfo</p><p>lscpu</p><p>4.请写出系统存放内存配置文件</p><p>&#x2F;proc&#x2F;meminfo</p><p>5.请写出查看内存命令（以人类易读方式显示）</p><p>free -h</p><p>6.请写出系统存放网卡配置文件路径</p><p>&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</p><p>7.请写出查看网卡配置信息命令</p><p>ifconfig（如果系统最小化安装，需要安装net-tools）</p><p>ip a （ip address）</p><p>8.请写出系统存放主机名配置文件</p><p>&#x2F;etc&#x2F;hostname</p><p>9.请写出查看主机名命令</p><p>cat &#x2F;etc&#x2F;hostname</p><p>hostname</p><p>10.将主机名修改为student（永久修改）</p><p>hostnamectl set-hostname student</p><p>vim &#x2F;etc&#x2F;hostname</p><p>echo student &gt; &#x2F;etc&#x2F;hostname</p><p>11.请写出vim的三种模式</p><p>命令模式</p><p>输入模式</p><p>底线命令模式（末行模式）</p><p>12.将&#x2F;etc&#x2F;passwd文件复制到&#x2F;opt目录，使用vim打开文件并显示行号</p><p>cp &#x2F;etc&#x2F;passwd &#x2F;opt</p><p>vim &#x2F;opt&#x2F;passwd</p><p>:set nu</p><p>13.使用vim在&#x2F;opt&#x2F;passwd文件中搜索包含root关键字的行</p><p>&#x2F;root</p><p>14.使用vim在&#x2F;opt&#x2F;passwd文件中将光标快速跳转到第10行，并将光标跳转到行尾</p><p>:10  $</p><p>15.使用vim在&#x2F;opt&#x2F;passwd文件中快速跳转到文件最后一行并删除，在将光标跳转到文件第一行，将刚刚删除的行复制到文件第二行</p><p>G     dd  p</p><p>16.使用vim将&#x2F;etc&#x2F;hostname文件内容读入到&#x2F;opt&#x2F;passwd文件最后一行下</p><p>:r  &#x2F;etc&#x2F;hostname</p><p>17.使用vim在&#x2F;opt&#x2F;passwd文件中复制前5行内容并粘贴到文件最后一行下</p><p>5yy p</p><p>18.将本次vim的修改恢复至初始状态，并保存退出</p><p>u </p><p>:wq</p><p>19.将本机IP地址修改为192.168.0.100，并重启动网卡</p><p>vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens32</p><p>systemctl restart network</p><p>20.如何获取一个域名所对应的IP地址</p><p>host <a href="http://www.baidu.com/">www.baidu.com</a></p><p>21.如何检测本机使用的DNS是否可用</p><p>nslookup <a href="http://www.jd.com/">www.jd.com</a></p><p>22.请将hostname命令设置别名为hn（临时设置）</p><p>alias hn&#x3D;hostname</p><p>23.取消hostname命令别名</p><p>unalias hn</p><p>24.如何查看本机历史命令</p><p>history</p><p>25.执行命令历史中第20条命令</p><p>!20</p><p>26.删除命令历史中第5条命令</p><p>history -d 5</p><p>27.清空所有历史命令</p><p>history -c</p><p>rm -rf .bash_history</p><p>28.查看本机当前系统日期与时间</p><p>date</p><p>29.将本机日期时间设置与你当前时间一致</p><p>date -s ‘2021-04-10 14:32:00’</p><p>30.统计&#x2F;etc&#x2F;passwd文件行数，并将命令输出结果重定向至&#x2F;opt&#x2F;pass.bak文件中</p><p>wc -l &#x2F;etc&#x2F;passwd &gt; &#x2F;opt&#x2F;pass.bak</p><p>31.显示&#x2F;etc&#x2F;passwd文件末尾10行的前5行内容，并将输出结果追加至&#x2F;opt&#x2F;pass.bak文件中</p><p> tail -10 &#x2F;etc&#x2F;passwd | head -5 &gt; &#x2F;opt&#x2F;pass.bak</p><p> cat -n &#x2F;etc&#x2F;passwd | tail -10 | head -5 &gt;&gt; &#x2F;opt&#x2F;pass.bak </p><h4 id="用户账号管理"><a href="#用户账号管理" class="headerlink" title="用户账号管理"></a>用户账号管理</h4><ul><li>用户账号的作用：用户账号可用来登录系统</li><li>用户模板目录：&#x2F;etc&#x2F;skel&#x2F;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -a /etc/skel/</span><br><span class="line">.  ..  .bash_logout  .bash_profile  .bashrc  .mozilla</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /etc/skel/</span><br><span class="line">[root@localhost skel]# vim prompt</span><br></pre></td></tr></table></figure><h4 id="useradd创建用户"><a href="#useradd创建用户" class="headerlink" title="useradd创建用户"></a>useradd创建用户</h4><ul><li><p>useradd 命令用于创建新的用户</p></li><li><p>命令格式：useradd [-选项] 用户名</p></li><li><p>常用选项：</p><ul><li><p>-u 指定用户UID</p></li><li><p>-d 指定用户家目录（了解）</p></li><li><p>-c 用户描述信息</p></li><li><p>-g 指定用户基本组（了解）</p></li><li><p>-G 指定用户附加组</p></li><li><p>-s 指定用户的解释器程序</p></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# useradd user1</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户并指定用户的UID</span></span><br><span class="line">[root@localhost ~]# useradd -u 1100 user2</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户并指定用户的家目录</span></span><br><span class="line">root@localhost ~]# useradd -d /opt/user3 user3</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户并指定UID与用户描述信息</span></span><br><span class="line">[root@localhost ~]# useradd -u 1400  -c yunwei user4</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建test组</span></span><br><span class="line">[root@localhost ~]# groupadd <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户指定用户UID、描述信息、基本组</span></span><br><span class="line">[root@localhost ~]# useradd -u 1500 -c xxoo@163.com -g <span class="built_in">test</span> user5</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> user5</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户指定用户UID、描述信息、附加组</span></span><br><span class="line">[root@localhost ~]# useradd -u 1600 -c yunwei -G <span class="built_in">test</span> xiaozhang</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> xiaozhang</span><br><span class="line">uid=1600(xiaozhang) gid=1600(xiaozhang) 组=1600(xiaozhang),1401(<span class="built_in">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#/sbin/nologin ：禁止用户登录系统</span></span><br><span class="line">[root@localhost ~]# useradd -u 1800 -c <span class="built_in">test</span> -s /sbin/nologin user8</span><br><span class="line">user8:x:1800:1800:<span class="built_in">test</span>:/home/user8:/sbin/nologin</span><br></pre></td></tr></table></figure><h4 id="id命令"><a href="#id命令" class="headerlink" title="id命令"></a>id命令</h4><ul><li><p>id 命令用于查看系统用户和用户所在组的信息</p></li><li><p>命令格式：id [-选项] [用户名]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">id</span> user1</span><br><span class="line">uid=1001(user1) gid=1001(user1) 组=1001(user1)</span><br></pre></td></tr></table></figure><h4 id="etc-passwd用户信息文件"><a href="#etc-passwd用户信息文件" class="headerlink" title="&#x2F;etc&#x2F;passwd用户信息文件"></a>&#x2F;etc&#x2F;passwd用户信息文件</h4><p>用户的基本信息存放在&#x2F;etc&#x2F;passwd文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"><span class="comment">#每个字段含义解释：用户名:密码占位符:UID:基本组GID:用户描述信息:家目录:解释器程序</span></span><br><span class="line">UID：0 超级用户</span><br><span class="line">UID：1-999 系统伪用户，不能登录系统</span><br><span class="line">UID：1000-65535 普通用户，管理员创建的用户</span><br></pre></td></tr></table></figure><p>组：</p><p>基本组（初始组）：一个用户只允许有一个基本组</p><p>附加组（在基本组之外组）：一个用户可以允许有多个附加组</p><p>用户—&gt;bash程序（解释器）—&gt;内核—&gt;硬件</p><h4 id="etc-default-useradd文件"><a href="#etc-default-useradd文件" class="headerlink" title="&#x2F;etc&#x2F;default&#x2F;useradd文件"></a>&#x2F;etc&#x2F;default&#x2F;useradd文件</h4><p>&#x2F;etc&#x2F;default&#x2F;useradd 存放用户默认值信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/default/useradd</span><br><span class="line"><span class="comment"># useradd defaults file</span></span><br><span class="line">GROUP=100 <span class="comment">#用户默认组</span></span><br><span class="line">HOME=/home <span class="comment">#用户家目录</span></span><br><span class="line">INACTIVE=-1 <span class="comment">#密码过期宽限天数（/etc/shadow文件第7个字段）</span></span><br><span class="line">EXPIRE= <span class="comment">#密码失效时间（/etc/shadow文件第8个字段）</span></span><br><span class="line">SHELL=/bin/bash <span class="comment">#默认使用的</span></span><br><span class="line">SKEL=/etc/skel <span class="comment">#模板目录</span></span><br><span class="line">CREATE_MAIL_SPOOL=<span class="built_in">yes</span> <span class="comment">#是否建立邮箱</span></span><br></pre></td></tr></table></figure><h4 id="var-spool-mail-用户邮件目录"><a href="#var-spool-mail-用户邮件目录" class="headerlink" title="&#x2F;var&#x2F;spool&#x2F;mail&#x2F;用户邮件目录"></a>&#x2F;var&#x2F;spool&#x2F;mail&#x2F;用户邮件目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /var/spool/mail/</span><br><span class="line">laowang  lisi  rpc  user1  user2  user3  user4  user5  user8  xiaozhang</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看邮件</span></span><br><span class="line">[root@localhost ~]# mail</span><br></pre></td></tr></table></figure><h4 id="passwd设置用户密码"><a href="#passwd设置用户密码" class="headerlink" title="passwd设置用户密码"></a>passwd设置用户密码</h4><ul><li><p>passwd命令用于设置用户密码</p></li><li><p>命令格式：passwd [-选项] [用户名]</p></li><li><p>密码规范：长度不能少于8个字符，复杂度（数字、字母区分大小写，特殊字符）</p></li><li><p>密码规范：本次修改的密码不能和上次修改的密码太相近  </p></li><li><p>常用选项</p><ul><li>-S 查看密码信息</li><li>-l 锁定用户密码</li><li>-u 解锁用户密码</li><li>-d 删除密码</li><li>–stdin 通过管道方式设置用户密码</li></ul></li><li><p>非交互设置用户密码</p><blockquote><p>命令格式：echo ‘密码’ | passwd –stdin 用户名</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置用户密码</span></span><br><span class="line">[root@localhost ~]# passwd user1</span><br><span class="line">更改用户 user1 的密码 。</span><br><span class="line">新的 密码：1</span><br><span class="line">无效的密码： 密码是一个回文</span><br><span class="line">重新输入新的 密码：1</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用user1用户登录系统</span></span><br><span class="line">[user1@localhost ~]$ <span class="built_in">ls</span></span><br><span class="line">prompt</span><br><span class="line">[user1@localhost ~]$ <span class="built_in">cat</span> prompt </span><br><span class="line">不允许随便修改系统xx文件！</span><br><span class="line">有问题可联系管理员邮箱：xxoo@163.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看用户密码信息</span></span><br><span class="line">[root@localhost ~]# passwd -S user1</span><br><span class="line"></span><br><span class="line"><span class="comment">#锁定用户当密码</span></span><br><span class="line">[root@localhost ~]# passwd -l user2</span><br><span class="line">锁定用户 user2 的密码 。</span><br><span class="line">passwd: 操作成功</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# passwd -S user2</span><br><span class="line">user2 LK 2021-04-10 0 99999 7 -1 (密码已被锁定。)</span><br><span class="line"></span><br><span class="line"><span class="comment">#解锁用户密码</span></span><br><span class="line">[root@localhost ~]# passwd -u user2</span><br><span class="line">解锁用户 user2 的密码。</span><br><span class="line">passwd: 操作成功</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除用户密码</span></span><br><span class="line">[root@localhost ~]# passwd -d user2</span><br><span class="line">清除用户的密码 user2。</span><br><span class="line">passwd: 操作成功</span><br><span class="line"></span><br><span class="line"><span class="comment">#非交互设置用户密码</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> 1 | passwd --stdin laowang</span><br><span class="line">更改用户 laowang 的密码 。</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br></pre></td></tr></table></figure><h4 id="etc-shadow用户密码文件"><a href="#etc-shadow用户密码文件" class="headerlink" title="&#x2F;etc&#x2F;shadow用户密码文件"></a>&#x2F;etc&#x2F;shadow用户密码文件</h4><ul><li>用户的密码信息存放在&#x2F;etc&#x2F;shadow文件中，该文件默认任何人都没有任何权限（不包括root）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/shadow</span><br><span class="line">root:$6$1ji5e8yglrZWAcI6<span class="variable">$FONKr3qebZufQ</span>.u0Mf/MbipzGw/MVvxS.vgXcy/duc4b/GU0U7tfe37wPQ4XJEXstqBuwvaJqq2/kY/g/783u/::0:99999:7:::</span><br><span class="line"><span class="comment">#每个字段含义解释：</span></span><br><span class="line">第一字段：用户名</span><br><span class="line">第二字段：密码加密字符串，加密算法为SHA512散列加密算法，如果密码位是“*”或者“!!”表示密码已过期</span><br><span class="line">第三个字段：密码最后一次修改日期，日期从1970年1月1日起，每过一天时间戳加1</span><br><span class="line">第四个字段：密码修改的期限，如果该字段为0表示随时可以修改密码，例如：该字段为10，代表10天之内不可以修改密</span><br><span class="line">第五个字段：密码有效期</span><br><span class="line">第六个字段：密码到期前警告时间（和第五个字段相比）</span><br><span class="line">第七个字段：密码过期后的宽限天数（和第五个字段相比）</span><br><span class="line">第八个字段：账号失效时间，日期从1970年1月1日起</span><br><span class="line">第九个字段：保留</span><br><span class="line"></span><br><span class="line"><span class="comment">#chage命令用于修改/etc/shadow文件信息，修改文件内容第三个字段（密码最后一次修改时间）</span></span><br><span class="line">[root@localhost ~]# chage -d 0 user8</span><br></pre></td></tr></table></figure><h4 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h4><ul><li><p>su命令用于切换当前用户身份到其他用户身份</p></li><li><p>命令格式：su [-选项] [用户名]</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只切换用户身份，环境没有改变</span></span><br><span class="line">[root@localhost ~]# su user1</span><br><span class="line">[user1@localhost root]$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span>: 无法打开目录.: 权限不够</span><br><span class="line">[user1@localhost root]$ <span class="built_in">cd</span></span><br><span class="line">[user1@localhost ~]$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切换用户身份，连同环境一起切换</span></span><br><span class="line">[root@localhost ~]# su - user1</span><br><span class="line">上一次登录：六 4月 10 16:54:40 CST 2021pts/1 上</span><br><span class="line">[user1@localhost ~]$ <span class="built_in">pwd</span></span><br><span class="line">/home/user1</span><br><span class="line"></span><br><span class="line"><span class="comment">#普通用户切换为root（需要输入root用户的密码）</span></span><br><span class="line">[user1@localhost ~]$ su - root</span><br><span class="line">密码：</span><br><span class="line">上一次登录：六 4月 10 16:05:17 CST 2021从 192.168.0.1pts/2 上</span><br></pre></td></tr></table></figure><h4 id="usermod修改用户属性"><a href="#usermod修改用户属性" class="headerlink" title="usermod修改用户属性"></a>usermod修改用户属性</h4><ul><li><p>usermod 命令用于修改已存在用户的基本信息</p></li><li><p>命令格式：usermod [-选项] 用户名</p></li><li><p>常用选项：</p><ul><li>-u 修改用户UID</li><li>-d 修改用户家目录（了解）</li><li>-g 修改用户基本组（了解）</li><li>-c 修改用户描述信息</li><li>-G 添加用户附加组</li><li>-s 修改用户shell</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改用户UID（用户如果以登录系统，不允许修改）</span></span><br><span class="line">[root@localhost ~]# usermod -u 1111 user1</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> user1</span><br><span class="line">uid=1111(user1) gid=1001(user1) 组=1001(user1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户描述信息</span></span><br><span class="line">[root@localhost ~]# usermod -c xxoo@163.com user8</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户的附加组</span></span><br><span class="line">[root@localhost ~]# usermod -G <span class="built_in">test</span> user8</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> user8</span><br><span class="line">uid=1800(user8) gid=1800(user8) 组=1800(user8),1401(<span class="built_in">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户的解释器</span></span><br><span class="line">[root@localhost ~]# usermod -s /bin/bash user8</span><br></pre></td></tr></table></figure><h4 id="userdel删除用户"><a href="#userdel删除用户" class="headerlink" title="userdel删除用户"></a>userdel删除用户</h4><ul><li><p>userdel 用于删除给定的用户以及与用户相关的文件，该命令若不加选项仅删除用户账号，不删除用户的家目录</p></li><li><p>命令格式：userdel [-选项] 用户名</p></li><li><p>常用选项：</p><ul><li>-r 删除用户同时，并删除用户的家目录</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除用户，仅删除账号，不删除家目录</span></span><br><span class="line">[root@localhost ~]# userdel user8</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /home</span><br><span class="line">laowang  lisi  user1  user2  user4  user5  user8  xiaozhang</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> user8</span><br><span class="line"><span class="built_in">id</span>: user8: no such user</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除用户，连同用户家目录一并删掉</span></span><br><span class="line">[root@localhost ~]# userdel -r user4</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /home</span><br><span class="line">laowang  lisi  user1  user2  user5  user8  xiaozhang</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> user4</span><br><span class="line"><span class="built_in">id</span>: user4: no such user</span><br></pre></td></tr></table></figure><h4 id="groupadd添加新组"><a href="#groupadd添加新组" class="headerlink" title="groupadd添加新组"></a>groupadd添加新组</h4><ul><li><p>groupadd 用于创建一个新的工作组，新组的信息将被添加到&#x2F;etc&#x2F;group文件中</p></li><li><p>命令格式：groupadd [-选项] 组名</p></li><li><p>常用选项：</p><ul><li>-g GID                     #指定组的GID</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建组</span></span><br><span class="line">[root@localhost ~]# groupadd -g 1555 student</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/group</span><br></pre></td></tr></table></figure><h4 id="etc-group组信息文件"><a href="#etc-group组信息文件" class="headerlink" title="&#x2F;etc&#x2F;group组信息文件"></a>&#x2F;etc&#x2F;group组信息文件</h4><ul><li>组信息存放在&#x2F;etc&#x2F;group文件中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/group</span><br><span class="line">root:x:0:</span><br><span class="line"><span class="comment">#每个字段含义解释：组名:组密码占位符:GID:组中附加用户</span></span><br></pre></td></tr></table></figure><h4 id="etc-gshadow组密码文件"><a href="#etc-gshadow组密码文件" class="headerlink" title="&#x2F;etc&#x2F;gshadow组密码文件"></a>&#x2F;etc&#x2F;gshadow组密码文件</h4><ul><li>组密码信息存放在&#x2F;etc&#x2F;gshadow文件中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/gshadow</span><br><span class="line">root:::</span><br><span class="line"><span class="comment">#每个字段含义解释：组名:组密码:组内管理员:组中附加用户</span></span><br></pre></td></tr></table></figure><h4 id="groupmod修改组属性"><a href="#groupmod修改组属性" class="headerlink" title="groupmod修改组属性"></a>groupmod修改组属性</h4><ul><li><p>groupmod 用于修改指定工作组属性</p></li><li><p>命令格式：groupmod [-选项] 组名</p></li><li><p>常用选项：</p><ul><li>-g GID      #修改组的GID</li><li>-n 新组名  #修改组名</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改组名</span></span><br><span class="line">[root@localhost ~]# groupmod -n stugrp student</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改组GID</span></span><br><span class="line">root@localhost ~]# groupmod -g 1666 stugrp</span><br></pre></td></tr></table></figure><h4 id="gpasswd组管理命令"><a href="#gpasswd组管理命令" class="headerlink" title="gpasswd组管理命令"></a>gpasswd组管理命令</h4><ul><li><p>gpasswd 是Linux工作组文件&#x2F;etc&#x2F;group和&#x2F;etc&#x2F;gshadow管理工具，用于将用户添加到组或从组中删除</p></li><li><p>命令格式：gpasswd [-选项] 用户名 组名</p></li><li><p>常用选项：</p><ul><li>-a  #将用户添加到工作组</li><li>-d  #将用户从工作组中删除</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建用户</span></span><br><span class="line">[root@localhost ~]# useradd hary</span><br><span class="line">[root@localhost ~]# useradd tom</span><br><span class="line">[root@localhost ~]# useradd natasha</span><br><span class="line">[root@localhost ~]# useradd kenji</span><br><span class="line">[root@localhost ~]# useradd jack</span><br><span class="line"></span><br><span class="line"><span class="comment">#讲用户加入到组</span></span><br><span class="line">[root@localhost ~]# gpasswd -a hary stugrp</span><br><span class="line">正在将用户“hary”加入到“stugrp”组中</span><br><span class="line">[root@localhost ~]# gpasswd -a tom stugrp</span><br><span class="line">正在将用户“tom”加入到“stugrp”组中</span><br><span class="line">[root@localhost ~]# gpasswd -a kenji stugrp</span><br><span class="line">正在将用户“kenji”加入到“stugrp”组中</span><br><span class="line">[root@localhost ~]# gpasswd -a natasha stugrp</span><br><span class="line">正在将用户“natasha”加入到“stugrp”组中</span><br><span class="line">[root@localhost ~]# gpasswd -a jack stugrp</span><br><span class="line">正在将用户“jack”加入到“stugrp”组中</span><br><span class="line">[root@localhost ~]# </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看组文件信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/group</span><br><span class="line">stugrp:x:1666:hary,tom,kenji,natasha,jack</span><br><span class="line"></span><br><span class="line"><span class="comment">#将用户从组中删除</span></span><br><span class="line">root@localhost ~]# gpasswd -d tom stugrp</span><br><span class="line">[root@localhost ~]# gpasswd -d hary stugrp</span><br><span class="line">正在将用户“hary”从“stugrp”组中删除</span><br><span class="line">[root@localhost ~]# gpasswd -d jack stugrp</span><br><span class="line">正在将用户“jack”从“stugrp”组中删除</span><br><span class="line">[root@localhost ~]# gpasswd -d kenji stugrp</span><br><span class="line">正在将用户“kenji”从“stugrp”组中删除</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/group</span><br></pre></td></tr></table></figure><h4 id="groupdel删除组"><a href="#groupdel删除组" class="headerlink" title="groupdel删除组"></a>groupdel删除组</h4><ul><li><p>groupdel 用于删除指定工作组</p></li><li><p>命令格式：groupdel 组名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# groupdel stugrp</span><br></pre></td></tr></table></figure><h4 id="chmod权限管理"><a href="#chmod权限管理" class="headerlink" title="chmod权限管理"></a>chmod权限管理</h4><blockquote><p>权限的重要性：<br>任何一个系统，权限都是非常重要的，如果没有权限的话，那系统的安全就没办法保障，特别是对于Linux这种多用户的系统来讲，通常一台机器有很多个用户都在使用的话，那我们就应该通过权限去控制这些用户在系统的操作</p></blockquote><ul><li>chmod（英文全拼：change mode）设置用户对文件的权限</li><li>命令格式：chmod [-选项] 归属关系+-&#x3D;权限类别 文件…</li><li>不常用选项：<ul><li>-R 递归修改目录下所有的子文件与子目录的权限与父目录相同</li></ul></li><li>归属关系：u 所有者  g 所属组  o 其他人</li><li>权限类别： r 读取 w 写入 x 执行 - 没有权限  </li><li>操作：+ 添加权限 - 去除权限 &#x3D; 重新定义权限</li><li>权限数字表示：r —- 4   w —- 2  x —- 1   0 没有权限</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看文件详细属性</span></span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-        rw-      r--       r--       . 1 root  root  426 3月 28 15:00 hello</span><br><span class="line">文件类型  所有者权限 所属组权限 其他人的权限     所有者 所属组         </span><br><span class="line"></span><br><span class="line"><span class="comment">#为文件所有者添加执行权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u+x hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxr--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#为文件所属组添加写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+w hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrw-r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#为文件其他人添加写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o+w hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrw-rw-. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用（逗号）可以同时为多个用户授权</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+x,o+x hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrwxrwx. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除所有者执行权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u-x hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rw-rwxrwx. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除所属组执行权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g-x hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rw-rw-rwx. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除其他人执行权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o-x hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rw-rw-rw-. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时去除ugo写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u-w,g-w,o-w hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-r--r--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新定义所有者权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u=rwx hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxr--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新定义所属组权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g=rwx hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrwxr--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新定义其他人权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o=rwx hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrwxrwx. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录并设置目录权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 14:30 /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#为目录所属组添加写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+w /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxr-x. 2 root root 6 4月  11 14:30 /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#为目录其他人添加写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o+w /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxrwx. 2 root root 6 4月  11 14:30 /test</span><br><span class="line">[root@localhost ~]# </span><br><span class="line"></span><br><span class="line"><span class="comment">#重新定义所有用户权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u=rwx,g=rx,o=rx /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 14:30 /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时为所有用户定义相同权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> ugo=rwx /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxrwx. 2 root root 21 4月  11 14:37 /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#权限数字定义方式</span></span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxrwxrwx. 1 root root 426 3月  28 15:00 hello</span><br><span class="line">所有者：rwx   4+2+1=7</span><br><span class="line">所属组：r     4</span><br><span class="line">其他人：r     4</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 744 hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rwxr--r--. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line">所有者：rw 4+2=6</span><br><span class="line">所属组：rw 4+2=6</span><br><span class="line">其他人：--- 0</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 660 hello</span><br><span class="line">[root@localhost ~]# ll hello</span><br><span class="line">-rw-rw----. 1 root root 426 3月  28 15:00 hello</span><br><span class="line"></span><br><span class="line">所有者：rwx 4+2+1=7</span><br><span class="line">所属组：wx  2+1=3</span><br><span class="line">其他人：--- 0</span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /hello.txt</span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">-rw-r--r--. 1 root root 0 4月  11 14:45 /hello.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 730 /hello.txt </span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">-rwx-wx---. 1 root root 0 4月  11 14:45 /hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除所有用户权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 000 /hello.txt </span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">----------. 1 root student 0 4月  11 14:45 /hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#递归修改目录下所有子文件与子目录权限</span></span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxrwx. 2 root root 21 4月  11 14:37 /test</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test/xxoo</span><br><span class="line">[root@localhost ~]# ll -d /test/xxoo/</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 14:54 /test/xxoo/</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ll /test/abc.txt </span><br><span class="line">-rw-r--r--. 1 root root 0 4月  11 14:37 /test/abc.txt</span><br><span class="line"><span class="comment">#默认用户在该目录下创建文件权限与父目录不一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#递归修改目录下所有子文件与子目录权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> -R 777 /test</span><br><span class="line">[root@localhost ~]# ll /test/abc.txt </span><br><span class="line">-rwxrwxrwx. 1 root root 0 4月  11 14:37 /test/abc.txt</span><br><span class="line">[root@localhost ~]# ll -d /test/xxoo</span><br><span class="line">drwxrwxrwx. 2 root root 6 4月  11 14:54 /test/xxoo</span><br><span class="line"></span><br><span class="line"><span class="comment">#深入理解权限，</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test1</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 777 /test1</span><br><span class="line">[root@localhost ~]# ll -d /test1</span><br><span class="line">drwxrwxrwx. 2 root root 6 4月  11 14:57 /test1</span><br><span class="line"></span><br><span class="line"><span class="comment">#在该目录下创建文件与目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /test1/root.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test1/rootbak</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o=rx /test1</span><br><span class="line">[root@localhost ~]# ll -d /test1</span><br><span class="line">drwxrwxr-x. 2 root root 6 4月  11 14:59 /test1</span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /test1/root.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#普通用户对该目录如果拥有rwx权限是可以删除该目录下任何用户创建的文件（包括root）</span></span><br><span class="line">[user1@localhost ~]$ <span class="built_in">cd</span> /test1</span><br><span class="line">[user1@localhost test1]$ <span class="built_in">ls</span></span><br><span class="line">root.txt</span><br><span class="line">[user1@localhost test1]$ ll root.txt </span><br><span class="line">-rw-r--r--. 1 root root 0 4月  11 14:57 root.txt</span><br><span class="line">[user1@localhost test1]$ <span class="built_in">rm</span> -rf root.txt </span><br><span class="line">[user1@localhost test1]$ <span class="built_in">ls</span></span><br><span class="line">rootbak</span><br><span class="line">[user1@localhost test1]$ <span class="built_in">rm</span> -rf rootbak/</span><br><span class="line">[user1@localhost test1]$ <span class="built_in">ls</span></span><br><span class="line">[user1@localhost test1]$ ll -d /test1</span><br><span class="line">drwxrwxrwx. 2 root root 6 4月  11 14:59 /test1</span><br><span class="line"></span><br><span class="line">总结：用户对文件拥有rwx权限（针对的是文件的内容）</span><br><span class="line">r：查看文件内容</span><br><span class="line">w：对文件内容拥有增删改权限，并不能删除文件，删除文件取决于对文件所在的目录有没有rwx权限</span><br><span class="line">x：可以运行该文件</span><br><span class="line"></span><br><span class="line">2.用户对目录拥有rwx权限</span><br><span class="line">r：查看目录下内容</span><br><span class="line">w：在该目录创建文件，修改文件属性，删除任何用户的文件（包括root）</span><br><span class="line">x：可以切换到该目录</span><br></pre></td></tr></table></figure><h4 id="umask预设权限"><a href="#umask预设权限" class="headerlink" title="umask预设权限"></a>umask预设权限</h4><ul><li>umask用于显示或设置创建目录的权限掩码</li><li>命令格式：umask [-p] [-S] [mode]</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@localhost ~]# <span class="built_in">mkdir</span> /test2</span><br><span class="line">[root@localhost ~]# ll -d /test2</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 15:05 /test2</span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> --<span class="built_in">help</span></span><br><span class="line"><span class="built_in">umask</span>: 用法:<span class="built_in">umask</span> [-p] [-S] [模式]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看目录默认权限掩码，以数字形式显示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> -p</span><br><span class="line"><span class="built_in">umask</span> 0022</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看目录默认权限掩码，以字母形式显示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> -S</span><br><span class="line">u=rwx,g=rx,o=rx</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置目录默认权限掩码，为所属组添加写权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> g+w </span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test3</span><br><span class="line">[root@localhost ~]# ll -d /test3</span><br><span class="line">drwxrwxr-x. 2 root root 6 4月  11 15:09 /test3</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除目录默认权限掩码</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> g-w </span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test4</span><br><span class="line">[root@localhost ~]# ll -d /test4</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 15:10 /test4</span><br></pre></td></tr></table></figure><h4 id="chown归属关系管理"><a href="#chown归属关系管理" class="headerlink" title="chown归属关系管理"></a>chown归属关系管理</h4><ul><li><p>chown（英文全拼：change owner）用于设置文件的所有者和所属组关系</p></li><li><p>命令格式：</p><ul><li>chown [-选项] 所有者:所属组 文档                  #同时修改所有者和所属组身份</li><li>chown [-选项] 所有者 文档                               #只修改所有者身份</li><li>chown [-选项] :所属组 文档                               #只修改所属组身份</li></ul></li><li><p>常用选项：</p><ul><li>-R 递归修改</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 744 /hello.txt </span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">-rwxr--r--. 1 root student 0 4月  11 14:45 /hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改文件所有者为user1用户</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> user1 /hello.txt </span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">-rwxr--r--. 1 user1 student 0 4月  11 14:45 /hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改文件所有者与所属组为lisi</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> lisi:lisi /hello.txt </span><br><span class="line">[root@localhost ~]# ll /hello.txt </span><br><span class="line">-rwxr--r--. 1 lisi lisi 4 4月  11 15:26 /hello.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test5</span><br><span class="line">[root@localhost ~]# ll -d /test5</span><br><span class="line">drwxr-xr-x. 2 root root 6 4月  11 15:30 /test5</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改目录所有者与所属组为lisi</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> lisi:lisi /test5</span><br><span class="line">[root@localhost ~]# ll -d /test5</span><br><span class="line">drwxr-xr-x. 2 lisi lisi 6 4月  11 15:30 /test5</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /test5/root.txt</span><br><span class="line">[root@localhost ~]# ll /test5/root.txt </span><br><span class="line">-rw-r--r--. 1 root root 0 4月  11 15:31 /test5/root.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#递归修目录下所有子文件与子目录归属关系</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> -R lisi:lisi /test5</span><br><span class="line">[root@localhost ~]# ll /test5/root.txt </span><br><span class="line">-rw-r--r--. 1 lisi lisi 0 4月  11 15:31 /test5/root.txt</span><br></pre></td></tr></table></figure><h4 id="SetUID特殊权限"><a href="#SetUID特殊权限" class="headerlink" title="SetUID特殊权限"></a>SetUID特殊权限</h4><ul><li><p>SetUID（SUID）：对于一个可执行的文件用了SUID权限后，普通用户在执行该文件后，临时拥有文件所有者的身份，该权限只在程序执行过程中有效，程序执行完毕后用户恢复原有身份</p></li><li><p>SetUID权限会附加在所有者的 x 权限位上，所有者的 x 权限标识会变成 s</p></li><li><p>设置SetUID命令格式：chmod u+s 文件名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#搜索命令绝对路径</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> passwd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">[root@localhost ~]# ll /usr/bin/passwd </span><br><span class="line">-rwsr-xr-x. 1 root root 27832 6月  10 2014 /usr/bin/passwd</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> <span class="built_in">cat</span></span><br><span class="line">/usr/bin/cat</span><br><span class="line">[root@localhost ~]# ll /usr/bin/cat</span><br><span class="line">-rwxr-xr-x. 1 root root 54160 10月 31 2018 /usr/bin/cat</span><br><span class="line"></span><br><span class="line"><span class="comment">#普通用户使用cat命令是默认无法查看/etc/shadow文件内容</span></span><br><span class="line">[lisi@localhost ~]$ <span class="built_in">cat</span> /etc/shadow</span><br><span class="line"><span class="built_in">cat</span>: /etc/shadow: 权限不够</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置SUID权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u+s /usr/bin/cat</span><br><span class="line">[root@localhost ~]# ll /usr/bin/cat</span><br><span class="line">-rwsr-xr-x. 1 root root 54160 10月 31 2018 /usr/bin/cat</span><br><span class="line"></span><br><span class="line"><span class="comment">#普通用户再次使用cat命令时临时获取文件所有者身份</span></span><br><span class="line">[lisi@localhost ~]$ <span class="built_in">cat</span> /etc/shadow</span><br><span class="line"></span><br><span class="line"><span class="comment">#去除SUID权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u-s /usr/bin/cat</span><br><span class="line">[root@localhost ~]# ll /usr/bin/cat</span><br><span class="line">-rwxr-xr-x. 1 root root 54160 10月 31 2018 /usr/bin/cat</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> vim</span><br><span class="line">/usr/bin/vim</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ll /usr/bin/vim</span><br><span class="line">-rwxr-xr-x. 1 root root 2294208 10月 31 2018 /usr/bin/vim</span><br><span class="line"></span><br><span class="line"><span class="comment">#为vim设置SUID权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u+s /usr/bin/vim</span><br><span class="line">[root@localhost ~]# ll /usr/bin/vim</span><br><span class="line">-rwsr-xr-x. 1 root root 2294208 10月 31 2018 /usr/bin/vim</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ll /etc/passwd</span><br><span class="line">-rw-r--r--. 1 root root 2737 4月  10 17:26 /etc/passwd</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u-s /usr/bin/vim</span><br><span class="line">[root@localhost ~]# vim /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="SetGID特殊权限"><a href="#SetGID特殊权限" class="headerlink" title="SetGID特殊权限"></a>SetGID特殊权限</h4><ul><li><p>SetGID（SGID）：当对一个可执行的程序文件设置了SGID后，普通用户在执行该文件时临时拥有其所属组的权限，该权限只在程序执行过程中有效，程序执行完毕后用户恢复原有组身份</p></li><li><p>当对一个目录作设置了SGID权限后，普通用户在该目录下创建的文件的所属组，均与该目录的所属组相同</p></li><li><p>SetGID权限会附加在所属组的 x 权限位上，所属组的 x 权限标识会变成 s</p></li><li><p>设置SetGID命令格式：chmod g+s 文件名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /test6</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 777 /test6</span><br><span class="line">[root@localhost ~]# ll -d /test6</span><br><span class="line">drwxrwxrwx. 2 root root 6 4月  11 15:59 /test6</span><br><span class="line"></span><br><span class="line"><span class="comment">#为目录设置SGID权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+s /test6</span><br><span class="line">[root@localhost ~]# ll -d /test6</span><br><span class="line">drwxrwsrwx. 2 root root 6 4月  11 15:59 /test6</span><br><span class="line"><span class="comment">#SGID权限会附加在所属组执行权限位，所属组执行权限变为s</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /test6/1.txt</span><br><span class="line">[root@localhost ~]# ll /test6/1.txt </span><br><span class="line">-rw-r--r--. 1 root root 0 4月  11 16:00 /test6/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改目录所属组为lisi组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> :lisi /test6</span><br><span class="line">[root@localhost ~]# ll -d /test6</span><br><span class="line">drwxrwsrwx. 2 root lisi 19 4月  11 16:00 /test6</span><br><span class="line"></span><br><span class="line"><span class="comment">#SGID对目录设置后，在该目录下创建的任何文件都会继承父目录的所属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> /test6/2.txt</span><br><span class="line">[root@localhost ~]# ll /test6/2.txt </span><br><span class="line">-rw-r--r--. 1 root lisi 0 4月  11 16:01 /test6/2.txt</span><br></pre></td></tr></table></figure><h4 id="Sticky-BIT特殊权限"><a href="#Sticky-BIT特殊权限" class="headerlink" title="Sticky BIT特殊权限"></a>Sticky BIT特殊权限</h4><ul><li><p>Sticky BIT（SBIT）：该权限只针对于目录有效，当普通用户对一个目录拥有rwx权限时，普通用户可以在此目录下拥有增删改的权限，应为普通用户对目录拥有rwx权限时，是可以删除此目录下的所有文件</p></li><li><p>如果对一个目录设置了SBIT权限，除了root可以删除所有文件以外，普通用户就算对该目录拥有rwx权限，也只能删除自己建立的文件，不能删除其他用户建立的文件</p></li><li><p>SBIT权限会附加在其他人的 x 权限位上，其他人的 x 权限标识会变成 t</p></li><li><p>设置SBIT命令格式：chmod o+t 目录名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为目录设置SBIT</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o+t /test</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxrwt. 2 root root 6 4月  11 16:07 /test</span><br><span class="line"></span><br><span class="line">[lisi@localhost <span class="built_in">test</span>]$ <span class="built_in">ls</span></span><br><span class="line">kenji.txt  laowang.txt  lisi.txt</span><br><span class="line"></span><br><span class="line">[lisi@localhost <span class="built_in">test</span>]$ <span class="built_in">rm</span> -rf *</span><br><span class="line"><span class="built_in">rm</span>: 无法删除<span class="string">&quot;kenji.txt&quot;</span>: 不允许的操作</span><br><span class="line"><span class="built_in">rm</span>: 无法删除<span class="string">&quot;laowang.txt&quot;</span>: 不允许的操作</span><br></pre></td></tr></table></figure><h4 id="FACL访问控制列表"><a href="#FACL访问控制列表" class="headerlink" title="FACL访问控制列表"></a>FACL访问控制列表</h4><ul><li><p>FACL（Filesystemctl Access Control List）文件系统访问控制列表：利用文件扩展属性保存额外的访问控制权限（单独为每一个用户量身定制一个权限）</p></li><li><p>命令格式：setfacl 选项 归属关系:用户名:权限 文档</p></li><li><p>常用选项：</p><ul><li>-m 设置权限</li><li>-x  删除指定用户权限</li><li>-b  删除所有用户权限</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为natasha用户设置ACL权限</span></span><br><span class="line">[root@localhost ~]# setfacl -m u:natasha:rx /yunwei/</span><br><span class="line">[root@localhost ~]# ll -d /yunwei/</span><br><span class="line">drwxrwx---+ 2 root yunwei 54 4月  11 16:43 /yunwei/</span><br><span class="line">[root@localhost ~]# ll -d /test</span><br><span class="line">drwxrwxrwt. 2 root root 42 4月  11 16:11 /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看目录ACL权限</span></span><br><span class="line">[root@localhost ~]# getfacl /yunwei</span><br><span class="line">getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names</span><br><span class="line"><span class="comment"># file: yunwei</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: yunwei</span></span><br><span class="line">user::rwx</span><br><span class="line">user:natasha:r-x</span><br><span class="line">group::rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::---</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户测试权限</span></span><br><span class="line">[natasha@localhost ~]$ <span class="built_in">ls</span> /yunwei/</span><br><span class="line">hell.sh  kenji.txt  lisi.txt</span><br><span class="line">[natasha@localhost yunwei]$ <span class="built_in">rm</span> -rf kenji.txt </span><br><span class="line"><span class="built_in">rm</span>: 无法删除<span class="string">&quot;kenji.txt&quot;</span>: 权限不够</span><br><span class="line">[natasha@localhost yunwei]$ <span class="built_in">touch</span> natasha.txt</span><br><span class="line"><span class="built_in">touch</span>: 无法创建<span class="string">&quot;natasha.txt&quot;</span>: 权限不够</span><br><span class="line">[natasha@localhost yunwei]$ vim kenji.txt </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# setfacl -m u:tom:rx /yunwei</span><br><span class="line">[root@localhost ~]# setfacl -m u:jack:rx /yunwei</span><br><span class="line">[root@localhost ~]# setfacl -m u:hary:rx /yunwei</span><br><span class="line">[root@localhost ~]# getfacl /yunwei</span><br><span class="line">getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names</span><br><span class="line"><span class="comment"># file: yunwei</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: yunwei</span></span><br><span class="line">user::rwx</span><br><span class="line">user:hary:r-x</span><br><span class="line">user:tom:r-x</span><br><span class="line">user:natasha:r-x</span><br><span class="line">user:jack:r-x</span><br><span class="line">group::rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::---</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定用户ACL权限</span></span><br><span class="line">[root@localhost ~]# setfacl -x u:tom /yunwei</span><br><span class="line">[root@localhost ~]# getfacl /yunwei</span><br><span class="line">getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names</span><br><span class="line"><span class="comment"># file: yunwei</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: yunwei</span></span><br><span class="line">user::rwx</span><br><span class="line">user:hary:r-x</span><br><span class="line">user:natasha:r-x</span><br><span class="line">user:jack:r-x</span><br><span class="line">group::rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::---</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有用户ACL权限</span></span><br><span class="line">[root@localhost ~]# setfacl -b /yunwei</span><br><span class="line">[root@localhost ~]# getfacl /yunwei</span><br><span class="line">getfacl: Removing leading <span class="string">&#x27;/&#x27;</span> from absolute path names</span><br><span class="line"><span class="comment"># file: yunwei</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: yunwei</span></span><br><span class="line">user::rwx</span><br><span class="line">group::rwx</span><br><span class="line">other::---</span><br></pre></td></tr></table></figure><h4 id="课后练习-3"><a href="#课后练习-3" class="headerlink" title="课后练习"></a>课后练习</h4><p>1.创建test1用户，并指定用户UID为6666，指定用户描述信息为<a href="mailto:&#x74;&#101;&#115;&#x74;&#49;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;">&#x74;&#101;&#115;&#x74;&#49;&#x40;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;</a>，指定用户解释器为&#x2F;sbin&#x2F;nologin</p><p>test1:x:6666:6666:<a href="mailto:&#x74;&#x65;&#115;&#116;&#x31;&#64;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;">&#x74;&#x65;&#115;&#116;&#x31;&#64;&#49;&#54;&#51;&#46;&#99;&#x6f;&#x6d;</a>:&#x2F;home&#x2F;test1:&#x2F;sbin&#x2F;nologin</p><p>2.创建名为stugrp组，将test1用户加入到stugrp组</p><p>[root@localhost ~]# groupadd stugrp</p><p>[root@localhost ~]# gpasswd -a test1 stugrp</p><p>3.请写出&#x2F;etc&#x2F;passwd文件中每个字段含义</p><p>用户名 密码占位符 UID GID 描述信息 家目录 解释器</p><p>4.创建test2用户，并设置密码为123456</p><p>[root@localhost ~]# useradd test2<br>[root@localhost ~]# passwd test2</p><p>5.修改root用户密码为123456</p><p>[root@localhost ~]# passwd</p><p>6.请写出Linux系统下存放用户密码信息文件</p><p>&#x2F;etc&#x2F;shadow</p><p>7.设置test2用户首次登录系统需要修改密码</p><p>[root@localhost ~]# chage -d 0 test2</p><p>8.使用root切换为test1用户身份</p><p>su - 用户名</p><p>9.将test2用户添加至stugrp组，并锁定用户密码</p><p>[root@localhost ~]# gpasswd -a test2 stugrp</p><p>[root@localhost ~]# passwd -l test2</p><p>10.删除test1用户，连同用户家目录一并删除</p><p>root@localhost ~]# userdel -r test1</p><p>11.请写出Linux系统存放组信息文件，与组密码信息文件</p><p>[root@localhost ~]# ls &#x2F;etc&#x2F;group</p><p>[root@localhost ~]# ls &#x2F;etc&#x2F;gshadow</p><p>12.将test2用户从stugrp组中删除</p><p>[root@localhost ~]# gpasswd -d test2 stugrp</p><p>13.在根下创建upload目录，并修改目录所有者为test2用户，所属组为stugrp组，并将lisi用户加入到stugrp组，修改所有者权限rwx，修改所属组权限为rwx，设置其他人没有任何权限</p><p>[root@localhost ~]# mkdir &#x2F;upload</p><p>[root@localhost ~]# chown test2:stugrp &#x2F;upload&#x2F;</p><p>[root@localhost ~]# gpasswd -a lisi stugrp</p><p>[root@localhost ~]# chmod 770 &#x2F;upload&#x2F;</p><p>14.创建test3用户，非交互式设置用户密码为123456，并设置test3用户可以对upload目录拥有rx权限</p><p>[root@localhost ~]# useradd test3<br>[root@localhost ~]# echo 123456 | passwd –stdin test3</p><p>[root@localhost ~]# setfacl -m u:test3:rx &#x2F;upload&#x2F;<br>[root@localhost ~]# getfacl &#x2F;upload&#x2F;</p><p>15.在根下创建shared目录，并同时设置所有人都有完全权限（至少两种方法设置），要求所有普通用户在该目录下只能修改自己创建的文件</p><p>[root@localhost ~]# mkdir &#x2F;shared<br>[root@localhost ~]# chmod ugo&#x3D;rwx &#x2F;shared&#x2F;<br>[root@localhost ~]# chmod 777 &#x2F;shared&#x2F;<br>[root@localhost ~]# ll -d &#x2F;shared&#x2F;</p><p>[root@localhost ~]# chmod o+t &#x2F;shared&#x2F;</p><h4 id="常用特殊符号的使用"><a href="#常用特殊符号的使用" class="headerlink" title="常用特殊符号的使用"></a>常用特殊符号的使用</h4><p>Linux系统下特殊符号起到了很大的作用，特殊符号可以完成一些特殊的功能</p><blockquote><p>*常用的特殊符号，在文件名上，用来代表任意多个任意字符</p></blockquote><blockquote><p>? 常用的特殊符号，在文件名上，用来代表任意单个任意字符</p></blockquote><blockquote><p>[0-9]  #在文件名上，用来代表多个字符或连续范围中的一个，若无则忽略</p></blockquote><blockquote><p>{a,b,cd,abcd} #在文件名上，用来代表多组不同的字符串，全匹配</p></blockquote><ul><li>范例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找以tab结尾的文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/*tab</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/*wd</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/*.conf</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/redhat*</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/*ss*</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找以tty开头的文件，结尾以一个任意字符结尾</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty?</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/host?</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /etc/pass??</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找tty开头结尾以1-5连续字符结尾</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty[1-5]</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty[4-9]</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty[1,3,5,7,9,15,20,30]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找tty开头结尾为不连续字符结尾</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty&#123;1,3,5,7,9,15,20,30&#125;</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty&#123;1..9&#125;</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty&#123;1..10&#125;</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev/tty[1-10]</span><br></pre></td></tr></table></figure><h4 id="grep文件内容过滤"><a href="#grep文件内容过滤" class="headerlink" title="grep文件内容过滤"></a>grep文件内容过滤</h4><ul><li><p>grep用于查找文件中符合条件的字符串，它能利用正则表达式搜索文件中的字符串，并把匹配到的字符串的行打印出来</p></li><li><p>命令格式：grep [-选项] “查找条件” 目标文件</p></li><li><p>常用选项：</p><ul><li><p>-n #以行号形式输出</p></li><li><p>-i #忽略字符串大小写</p></li><li><p>-v #显示不包含匹配的行（排除）</p></li></ul></li><li><p>常用正则表达式符号</p><ul><li>^字符串      #匹配以什么什么开头的行</li><li>字符串$     #匹配以什么什么结尾的行</li><li>^$                #显示空行</li></ul></li><li><p>grep命令示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过滤包含root关键字的行</span></span><br><span class="line">[root@localhost ~]# grep root /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#以行号形式过滤包含root关键字的行</span></span><br><span class="line">[root@localhost ~]# grep -n root /etc/passwd</span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# grep -n bash /etc/passwd</span><br><span class="line">[root@localhost ~]# grep -n : /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#忽略大小写过滤</span></span><br><span class="line">[root@localhost ~]# grep -i -n ssh /etc/passwd</span><br><span class="line">38:sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#排除包含#号的行</span></span><br><span class="line">[root@localhost ~]# grep -n -v <span class="string">&#x27;^#&#x27;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤以root开头的行</span></span><br><span class="line">[root@localhost ~]# grep ^root /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤以root结尾的行</span></span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;root$&#x27;</span> /etc/passwd</span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;bash$&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法错误示范</span></span><br><span class="line">[root@localhost ~]# grep -n -v <span class="string">&#x27;^#&#x27;</span> ^$  /etc/fstab</span><br><span class="line">grep: ^$: 没有那个文件或目录</span><br><span class="line">/etc/fstab:1:</span><br><span class="line">/etc/fstab:9:/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">/etc/fstab:10:UUID=ae55ec6b-973b-498e-a366-f35e14b3d153 /boot                   xfs     defaults        0 0</span><br><span class="line">/etc/fstab:11:/dev/mapper/centos-swap swap    </span><br><span class="line"></span><br><span class="line"><span class="comment">#语法错误示范</span></span><br><span class="line">[root@localhost ~]# grep -n -v <span class="string">&#x27;^#&#x27;</span> /etc/fstab | grep -v ^$</span><br><span class="line">1:</span><br><span class="line">9:/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">10:UUID=ae55ec6b-973b-498e-a366-f35e14b3d153 /boot                   xfs     defaults        0 0</span><br><span class="line">11:/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#正确语法</span></span><br><span class="line">[root@localhost ~]# grep  -v <span class="string">&#x27;^#&#x27;</span> /etc/fstab | grep -v ^$ -n</span><br><span class="line">2:/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">3:UUID=ae55ec6b-973b-498e-a366-f35e14b3d153 /boot                   xfs     defaults        0 0</span><br><span class="line">4:/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示该文件内有效配置的行</span></span><br><span class="line">[root@localhost ~]# grep -v <span class="string">&#x27;^#&#x27;</span> /etc/login.defs | grep -v ^$ -n | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>shell四剑客：运维命令</p><ul><li><p>grep：文件内容过滤</p></li><li><p>find：文件或目录查找（查找一个文件在系统中存放路径）</p></li><li><ul><li>which命令只能用于查找程序文件，find不能查找程序文件</li></ul></li><li><p>sed：文本编辑器（跟vim类似，sed是非交互）</p></li><li><p>awk：跟grep类似，文件内容过滤（awk支持列过滤）</p></li></ul><h4 id="find文件-目录查找命令"><a href="#find文件-目录查找命令" class="headerlink" title="find文件&#x2F;目录查找命令"></a>find文件&#x2F;目录查找命令</h4><ul><li>find 命令根据预设的条件递归查找文件或目录所在位置</li><li>命令格式：find 查找路径 查找条件1  查找条件2 ..  [-exec 处理命令 {} ; ] <ul><li>–exec 可接额外的命令来处理查找到结果</li><li>{} 代表find查找到的内容被放置{}中</li><li>; 代表额外处理命令结束</li></ul></li><li>常用查找条件<ul><li>-type 类型（f文件 d目录  l链接文件）</li><li>-name “文件名” </li><li>-iname 按文件名查找忽略大小写</li><li>-size 文件大小（k、M、G  + 大于  - 小于）</li><li>-a （and并且）两个条件同时满足</li><li>-o （or或者）两个条件满足任意一个即可</li><li>-user 用户名</li><li>-mtime 按日期查找（+ 代表多少天之前  - 代表多少天之内，0代表24小时之内）</li></ul></li><li>find命令范例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /var/log</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照类型查找，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost ~]# ll boot.log-20210417</span><br><span class="line">[root@localhost ~]# ll /var/log/boot.log-20210417</span><br><span class="line">[root@localhost ~]# ll /var/log/vmware-network.2.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照类型查找，类型为目录</span></span><br><span class="line">[root@localhost ~]# find /var/log -<span class="built_in">type</span> d</span><br><span class="line">[root@localhost ~]# ll -d /var/log/tuned</span><br><span class="line">[root@localhost ~]# ll -d /var/log/qemu-ga</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照类型查找，类型为链接文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -<span class="built_in">type</span> l</span><br><span class="line">[root@localhost ~]# fin /etc/ -<span class="built_in">type</span> l</span><br><span class="line">[root@localhost ~]# find /etc/ -<span class="built_in">type</span> l</span><br><span class="line">[root@localhost ~]# ll /etc/scl/conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照名字查找</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name passwd</span><br><span class="line">/etc/passwd</span><br><span class="line">/etc/pam.d/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照名字查找，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name passwd -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照名字查找，以tab结尾，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*tab&#x27;</span> -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照名字查找，以pass开头，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;pass*&#x27;</span> -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost etc]# find . -name <span class="string">&#x27;*.conf&#x27;</span> -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*tab*&#x27;</span> -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照名字忽略大小写查找，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -iname FSTAB -<span class="built_in">type</span> f</span><br><span class="line">/etc/fstab</span><br><span class="line">[root@localhost ~]# find /etc/ -name FSTAB -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找大于10k的文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -size +10k -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost ~]# <span class="built_in">du</span> -h /var/log/boot.log-20210417</span><br><span class="line">16K/var/log/boot.log-20210417</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找大于1M的文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -size +1M -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost ~]# <span class="built_in">du</span> -h /var/log/audit/audit.log</span><br><span class="line">2.4M/var/log/audit/audit.log</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# find /home -size +1M -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找小于1M的文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -size -1M -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost ~]# <span class="built_in">du</span> -h /var/log/spooler</span><br><span class="line">0/var/log/spooler</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找大于10k并且小于20k，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -size +10k -a -size -20k -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#-o或者，当有多个条件时，满足任意其中一个即可</span></span><br><span class="line">[root@thinkmo ~]# find /var/log -name <span class="string">&quot;*.log&quot;</span> -o -size -10k -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查找属于lisi用户的文件/目录</span></span><br><span class="line">[root@localhost ~]# find /home -user lisi</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找30天之前被修改过，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -mtime +30 -<span class="built_in">type</span> f</span><br><span class="line">[root@localhost ~]# find /var/log -mtime +10 -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找10天之内被修改过，类型为文件</span></span><br><span class="line">[root@localhost ~]# find /var/log -mtime -10 -<span class="built_in">type</span> f</span><br><span class="line">root@localhost ~]# find /var/log -mtime -30 -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找30之前被修改过，类型为文件，拷贝到/opt目录下</span></span><br><span class="line">[root@localhost ~]# find /var/log -mtime -30 -<span class="built_in">type</span> f -<span class="built_in">exec</span> <span class="built_in">cp</span> &#123;&#125; /opt \;</span><br></pre></td></tr></table></figure><p>题型：</p><ul><li><p>查找&#x2F;etc&#x2F;目录下以.conf结尾的文件（只能在&#x2F;etc这一层目录去查找）</p><p>[root@localhost ~]# ls &#x2F;etc&#x2F;*.conf</p></li><li><p>查找&#x2F;etc&#x2F;目录下以.conf结尾的文件（包含所有的子目录）</p><p>[root@localhost ~]# find &#x2F;etc&#x2F; -name ‘*.conf’ -type f</p></li></ul><p>百度：多查–多查–多查</p><p>查找&#x2F;var&#x2F;log&#x2F;messages 文件，清空文件内容，使用find实现</p><blockquote><p>[root@localhost ~]# find &#x2F;var&#x2F;log&#x2F; -name messages -type f -exec cp &#x2F;dev&#x2F;null {} ;</p></blockquote><p>查找&#x2F;var&#x2F;log以.log结尾的文件，清空文件内容，使用find实现</p><blockquote><p> [root@localhost ~]# find &#x2F;var&#x2F;log -name *.log -type f -a -mtime +10 -exec cp &#x2F;dev&#x2F;null {} ;</p></blockquote><h4 id="压缩与解压缩"><a href="#压缩与解压缩" class="headerlink" title="压缩与解压缩"></a>压缩与解压缩</h4><ul><li>Linux独有压缩格式及命令工具:<ul><li>gzip—&gt; .gz </li><li>bzip2—&gt; .bz2</li><li>xz—&gt; .xz</li></ul></li><li>压缩命令格式<ul><li>gzip [选项…] 文件名<ul><li>常用选项：-d 解压缩</li></ul></li><li>bzip2 [选项…]  文件名<ul><li>常用选项：-d 解压缩</li></ul></li><li>xz [选项…] 文件名<ul><li>常用选项：-d 解压缩</li></ul></li></ul></li><li>查看压缩文件内容<ul><li>zcat   [选项…] 文件名    #查看gzip格式压缩文件</li><li>bzcat [选项…] 文件名  </li><li>xzcat [选项…] 文件名</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">cp</span> /etc/services /opt</span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> /opt</span><br><span class="line">[root@localhost opt]# ll services </span><br><span class="line">-rw-r--r--. 1 root root 670293 4月  17 17:06 services</span><br><span class="line">[root@localhost opt]# ll -h services </span><br><span class="line">-rw-r--r--. 1 root root 655K 4月  17 17:06 services</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用gzip格式对文件进行压缩</span></span><br><span class="line">[root@localhost opt]# gzip services </span><br><span class="line">[root@localhost opt]# <span class="built_in">ls</span></span><br><span class="line">services.gz</span><br><span class="line">[root@localhost opt]# ll -h services.gz </span><br><span class="line">-rw-r--r--. 1 root root 133K 4月  17 17:06 services.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#不解压查看压缩文件内容</span></span><br><span class="line">[root@localhost opt]# zcat services.gz </span><br><span class="line"></span><br><span class="line"><span class="comment">#解压文件</span></span><br><span class="line">[root@localhost opt]# gzip -d services.gz </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用bzip2格式对文件进行压缩</span></span><br><span class="line">[root@localhost opt]# bzip2 services </span><br><span class="line">[root@localhost opt]# <span class="built_in">ls</span></span><br><span class="line">services.bz2</span><br><span class="line">[root@localhost opt]# ll -h services.bz2 </span><br><span class="line">-rw-r--r--. 1 root root 122K 4月  17 17:06 services.bz2</span><br><span class="line"></span><br><span class="line"><span class="comment">#不解压查看文件内容</span></span><br><span class="line">[root@localhost opt]# bzcat services.bz2 </span><br><span class="line"></span><br><span class="line"><span class="comment">#解压文件</span></span><br><span class="line">[root@localhost opt]# bzip2 -d services.bz2 </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用xz格式对文件进行压缩</span></span><br><span class="line">[root@localhost opt]# xz services </span><br><span class="line">[root@localhost opt]# <span class="built_in">ls</span></span><br><span class="line">services.xz</span><br><span class="line">[root@localhost opt]# ll -h services.xz </span><br><span class="line">-rw-r--r--. 1 root root 98K 4月  17 17:06 services.xz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压文件</span></span><br><span class="line">[root@localhost opt]# xz -d services.xz </span><br></pre></td></tr></table></figure><h4 id="tar打包工具"><a href="#tar打包工具" class="headerlink" title="tar打包工具"></a>tar打包工具</h4><ul><li><p>tar命令用在linux下用于对文件&#x2F;目录打包，使用 tar 程序打出来的包常称为 tar 包，tar 包文件通常都是以 .tar 结尾  </p></li><li><p>tar 命令格式：tar 选项  打包后名字   被打包文件</p></li><li><p>常用选项：</p><ul><li>-c 创建打包文件</li><li>-f 指定打包后的文件名称</li><li>-z  调用gzip压缩工具   -J 调用xz压缩工具  -j 调用bzip2压缩工具</li><li>-t 列出打包文档内容</li><li>-x 解压打包文件</li><li>-C 指定解压路径</li><li>-v 显示详细信息</li></ul></li><li><p>tar命令范例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#同时打包多个文件/目录并使用gzip格式压缩</span></span><br><span class="line">[root@localhost opt]# tar -czf xxx.tar.gz /etc/passwd /etc/fstab /home</span><br><span class="line"></span><br><span class="line"><span class="comment">#将压缩包数据解压到/media目录</span></span><br><span class="line">[root@localhost opt]# tar -xf xxx.tar.gz -C /media/</span><br><span class="line">[root@localhost opt]# <span class="built_in">ls</span> /media/etc</span><br><span class="line">[root@localhost opt]# <span class="built_in">rm</span> -rf xxx.tar.gz </span><br><span class="line"></span><br><span class="line"><span class="comment">#同时打包多个文件/目录并使用xz格式压缩</span></span><br><span class="line">[root@localhost opt]# tar -cJf xx.tar.xz /etc/hostname /etc/services /home</span><br><span class="line"></span><br><span class="line"><span class="comment">#错误语法，f选项要放到所有选项右边</span></span><br><span class="line">[root@localhost opt]# tar -ft xx.tar.xz </span><br><span class="line">tar: 您必须从<span class="string">&quot;-Acdtrux&quot;</span>或是<span class="string">&quot;--test-label&quot;</span>选项中指定一个</span><br><span class="line">请用“tar --<span class="built_in">help</span>”或“tar --usage”获得更多信息。</span><br><span class="line"></span><br><span class="line"><span class="comment">#不解压查看压缩包数据</span></span><br><span class="line">[root@localhost opt]# tar -tf xx.tar.xz </span><br><span class="line">etc/hostname</span><br><span class="line"></span><br><span class="line"><span class="comment">#将压缩包数据解压到/tmp目录</span></span><br><span class="line">[root@localhost opt]# tar -vxf xx.tar.xz -C /tmp</span><br><span class="line">[root@localhost opt]# <span class="built_in">ls</span> /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#同时打包多个文件/目录并使用bzip2格式压缩</span></span><br><span class="line">[root@localhost opt]# tar -cjf abc.tar.bz2 /etc/hostname /etc/group /home</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压缩</span></span><br><span class="line">[root@localhost opt]# tar -xf abc.tar.bz2 -C /media/</span><br></pre></td></tr></table></figure><h4 id="磁盘介绍"><a href="#磁盘介绍" class="headerlink" title="磁盘介绍"></a>磁盘介绍</h4><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1619020721408.png" alt="1619020721408"></p><h4 id="分区过程"><a href="#分区过程" class="headerlink" title="分区过程"></a>分区过程</h4><p>添加新硬盘–分区–格式化文件系统–挂载使用</p><p>扇区是磁盘存储数据的最小单元，默认一个扇区可以存储512字节的数据</p><h4 id="磁盘类型介绍"><a href="#磁盘类型介绍" class="headerlink" title="磁盘类型介绍"></a>磁盘类型介绍</h4><ul><li>IDE接口类型：主要用于个人家用计算机领域，优点价格便宜，缺点数据传输速度慢</li><li>SCSI接口类型：早期主要用于服务器理领域，数据传输速度快</li><li>SAS接口类型：目前在服务器领域比较流行</li><li>SATA接口类型：串口磁盘，主要用于个人家用计算机领域，偶尔也应用在服务器领域</li><li>SSD接口类型：固态硬盘接口，价格昂贵，数据传输速度快，利用内存的机制读写数据，主要应用在个人电脑</li><li>NVMe接口类型：固态硬盘接口，价格昂贵，数据传输速度快，利用内存的机制读写数据</li></ul><h4 id="Linux常用分区格式"><a href="#Linux常用分区格式" class="headerlink" title="Linux常用分区格式"></a>Linux常用分区格式</h4><ul><li><p>MBR分区格式：比较古老的分区格式，最初只能划分4个主分区，后来新增加扩展分区（容器）功能，可在扩展分区内划分更多逻辑分区，最大支持2.2T磁盘容量</p><ul><li>IDE接口硬盘逻辑分区最多可以划分59个</li><li>SCSI接口硬盘逻辑分区最多可以划分11个</li><li>最大支持2.2T以内磁盘容量</li></ul></li><li><p>GPT分区格式：可划分128个主分区，最大支持18EB磁盘容量（1EB&#x3D;1024PB，1PB&#x3D;1024TB，1TB&#x3D;1024GB）</p></li></ul><h4 id="文件系统类型详解"><a href="#文件系统类型详解" class="headerlink" title="文件系统类型详解"></a>文件系统类型详解</h4><ul><li><p>文件管理系统，赋予分区文件系统，分区才可以正常的使用，根文件系统，多少个多少个文件系统</p></li><li><p>CentOS5：分区默认使用文件系统类型ext3</p></li><li><p>CentOS6：分区默认使用文件系统类型ext4</p><ul><li>ext4日志记录功能，意外宕机，通过日志记录把没有保存的数据，在系统再次重启时快速恢复回来</li><li>单个文件系统最大支持1EB的分区容量，单个文件最大可以存储16TB数据</li></ul></li><li><p>CentOS7：分区默认使用文件系统类型xfs</p><ul><li>xfs开启了日志记录的功能，意外宕机，通过日志记录把没有保存的数据，在系统再次重启时快速恢复回来，数据恢复的速度比ext4文件系统快</li><li>单个文件系统最大支持8EB分区容量，单个文件最大可以存储500TB的数据</li><li>单个文件每秒读写数据的速度可以达到4G</li></ul></li><li><p>swap文件系统：交换分区，硬盘空间去充当内存去使用</p></li></ul><h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><ul><li>在Linux系统中用户无法直接使用硬件设备的，硬件设备在系统中都是以只读的方式存在的，必须挂载</li><li>挂载就是给我们用户提供一个可以使用设备的一个接口</li><li>挂载注意事项：<ul><li>挂载点必须是一个目录，理论上还得是一个空目录</li><li>一个文件系统不允许重复挂载到多个目录下</li><li>一个目录不允许重复挂载多个文件系统</li></ul></li></ul><h4 id="lsblk查看系统所有磁盘信息"><a href="#lsblk查看系统所有磁盘信息" class="headerlink" title="lsblk查看系统所有磁盘信息"></a>lsblk查看系统所有磁盘信息</h4><ul><li>lsblk（英文全拼：list block）用于列出当前系统所有磁盘与磁盘内的分区信息</li><li>通常用法：查看系统中硬盘的信息（多少块硬盘以及每个硬盘的分区数量）以及分区的具体信息</li><li>命令格式：lsblk [选项…] [设备名]</li><li>常用选项：<ul><li>-d  #仅显示磁盘本身，不会列出磁盘的分区数据</li><li>-f   #列出磁盘分区使用的文件系统类型</li></ul></li><li>lsblk命令示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列出当前系统所有磁盘与磁盘内的分区信息</span></span><br><span class="line">[root@localhost ~]# lsblk </span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   20G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   19G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0              11:0    1  4.3G  0 rom  /mnt/centos</span><br><span class="line"></span><br><span class="line"><span class="comment">#sda1：sd代表SCSI磁盘，a代表第一块磁盘，1代表第一个分区</span></span><br><span class="line"><span class="comment">#sdb：sd代表SCSI磁盘，b代表第二块磁盘，1代表第一个分区</span></span><br><span class="line"><span class="comment">#解释：</span></span><br><span class="line">NAME<span class="comment">#设备名称</span></span><br><span class="line">MAJ:MIN<span class="comment">#主设备号:次设备号，内核通过主次设备号识别磁盘</span></span><br><span class="line">RM<span class="comment">#是否为可卸载设备，1可卸载，0不可卸载</span></span><br><span class="line">SIZE<span class="comment">#设备的容量大小</span></span><br><span class="line">RO<span class="comment">#表示设备是否为只读，0非只读设备，1只读设备</span></span><br><span class="line">TYPE<span class="comment">#表示设备类型（disk为磁盘，part为分区，lvm逻辑卷，rom只读）</span></span><br><span class="line">MOUNTPOINT<span class="comment">#设备挂载点（SWAP没有挂载点）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#列出指定的磁盘信息</span></span><br><span class="line">[root@localhost ~]# lsblk -d /dev/sda</span><br><span class="line">NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda    8:0    0  20G  0 disk </span><br><span class="line"></span><br><span class="line"><span class="comment">#列出所有磁盘分区内使用的文件系统类型</span></span><br><span class="line">[root@localhost ~]# lsblk -f </span><br><span class="line">NAME            FSTYPE      LABEL           UUID                                   MOUNTPOINT</span><br><span class="line">sda                                                                                </span><br><span class="line">├─sda1          xfs                         4cb9bb38-c34a-4415-9614-ba38642bb86d   /boot</span><br><span class="line">└─sda2          LVM2_member                 cKn0jP-z8Bq-SNvl-BsNa-7vTg-GBU2-OiHCro </span><br><span class="line">  ├─centos-root xfs                         55dad88d-a600-42d1-b387-236db62ce396   /</span><br><span class="line">  └─centos-swap swap                        2e91599a-6d72-483d-add8-6dfb84296170   [SWAP]</span><br><span class="line">sr0             iso9660     CentOS 7 x86_64 2018-11-25-23-54-16-00                 /mnt/centos</span><br><span class="line"></span><br><span class="line"><span class="comment">#列出指定分区的文件系统类型</span></span><br><span class="line">[root@localhost ~]# lsblk -<span class="built_in">df</span> /dev/sda1</span><br><span class="line">NAME FSTYPE LABEL UUID                                 MOUNTPOINT</span><br><span class="line">sda1 xfs          4cb9bb38-c34a-4415-9614-ba38642bb86d /boot</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="df查看分区使用情况"><a href="#df查看分区使用情况" class="headerlink" title="df查看分区使用情况"></a>df查看分区使用情况</h4><ul><li>df命令用于查看文件系统使用情况</li><li>通常用法：用于查看具体分区使用情况（空间资源使用率）</li><li>命令格式：df [选项…] [参数…]</li><li>常用选项：<ul><li>-h 以人类易读方式显示文件系统容量</li><li>T   显示文件系统类型</li></ul></li><li>df 命令示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">df</span></span><br><span class="line">Filesystem              1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root  17811456 3746320  14065136  22% /</span><br><span class="line">devtmpfs                   480884       0    480884   0% /dev</span><br><span class="line">tmpfs                      497948       0    497948   0% /dev/shm</span><br><span class="line">tmpfs                      497948    8340    489608   2% /run</span><br><span class="line">tmpfs                      497948       0    497948   0% /sys/fs/cgroup</span><br><span class="line">/dev/sr0                  4480476 4480476         0 100% /mnt</span><br><span class="line">/dev/sda1                 1038336  169448    868888  17% /boot</span><br><span class="line">tmpfs                       99592      12     99580   1% /run/user/42</span><br><span class="line">tmpfs                       99592       0     99592   0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -h /</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root   17G  3.6G   14G  22% /</span><br></pre></td></tr></table></figure><h4 id="du统计文件-目录大小"><a href="#du统计文件-目录大小" class="headerlink" title="du统计文件&#x2F;目录大小"></a>du统计文件&#x2F;目录大小</h4><ul><li><p>du命令用于统计磁盘下目录或文件大小</p></li><li><p>命令格式：du [选项…] [参数…]</p></li><li><p>常用选项：</p><ul><li>-h        #以人类易读方式（Kb，MB，GB）显示文件大小</li><li>-s         #只统计每个参数的总数</li></ul></li><li><p>du 命令示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">du</span> -h /etc/services </span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">du</span> -hs /etc</span><br><span class="line">38M/etc</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>&#x2F;dev&#x2F;目录下文件详解</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /dev</span><br><span class="line">hd[a-t]:IDE设备</span><br><span class="line">sd[a-z]:SCSI设备</span><br><span class="line">fd[0-7]：软盘驱动设备</span><br><span class="line">md[0-32]：软RAID设备</span><br><span class="line">loop[0-7]：本地回环设设备</span><br><span class="line">lp[0-3]:打印机设备</span><br><span class="line">mem：内存设备</span><br><span class="line">null：空设备，也称为黑洞，任何写入的数据都将被丢弃</span><br><span class="line">zero：零资源设备，任何写入的数据都将被丢弃</span><br><span class="line">full：满设备，任何写入的数据都将失败</span><br><span class="line"><span class="built_in">tty</span>[0-63]：虚拟终端设备</span><br><span class="line">random：随机数设备</span><br><span class="line">urandom：随机数设备</span><br><span class="line">port：存取I/O端口</span><br></pre></td></tr></table></figure><h4 id="blkid查看设备属性"><a href="#blkid查看设备属性" class="headerlink" title="blkid查看设备属性"></a>blkid查看设备属性</h4><ul><li><p>blkid命令显示块设备属性信息（设备名称，设备UUID，文件系统类型）</p></li><li><p>命令格式：blkid [选项…] [参数…]</p></li><li><p>blkid命令示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示系统所有块设备属性信息</span></span><br><span class="line">[root@localhost ~]# blkid</span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;4cb9bb38-c34a-4415-9614-ba38642bb86d&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">&quot;cKn0jP-z8Bq-SNvl-BsNa-7vTg-GBU2-OiHCro&quot;</span> TYPE=<span class="string">&quot;LVM2_member&quot;</span> </span><br><span class="line">/dev/sr0: UUID=<span class="string">&quot;2018-11-25-23-54-16-00&quot;</span> LABEL=<span class="string">&quot;CentOS 7 x86_64&quot;</span> TYPE=<span class="string">&quot;iso9660&quot;</span> PTTYPE=<span class="string">&quot;dos&quot;</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">&quot;55dad88d-a600-42d1-b387-236db62ce396&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">&quot;2e91599a-6d72-483d-add8-6dfb84296170&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看执行分区属性信息</span></span><br><span class="line">root@localhost ~]# blkid /dev/sda1</span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;4cb9bb38-c34a-4415-9614-ba38642bb86d&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br></pre></td></tr></table></figure><h4 id="MBR分区格式"><a href="#MBR分区格式" class="headerlink" title="MBR分区格式"></a>MBR分区格式</h4><ul><li><p>fdisk命令用于查看磁盘使用情况和磁盘分区（MBR分区格式）</p></li><li><p>命令格式：fdisk [选项…] [设备路径]</p></li><li><p>常用选项：-l   列出磁盘分区表类型与分区信息</p></li><li><p>分区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk /dev/sdb</span><br><span class="line">m<span class="comment">#获取命令帮助※</span></span><br><span class="line">p<span class="comment">#显示磁盘分区表   ※</span></span><br><span class="line">n<span class="comment">#新增加一个分区   ※</span></span><br><span class="line">q<span class="comment">#不保存分区退出   ※</span></span><br><span class="line">d<span class="comment">#删除一个分区     ※</span></span><br><span class="line">w<span class="comment">#保存分区退出     ※</span></span><br><span class="line">a<span class="comment">#设置可引导标记</span></span><br><span class="line">b<span class="comment">#编辑bsd磁盘标签</span></span><br><span class="line">c<span class="comment">#设置DOS操作系统兼容标记</span></span><br><span class="line">l<span class="comment">#显示已知的文件系统类型，82为swap交换分区，83为Linux分区</span></span><br><span class="line">o<span class="comment">#建立空白DOS分区表</span></span><br><span class="line">s<span class="comment">#新建空白SUN磁盘标签</span></span><br><span class="line">t<span class="comment">#改变分区的系统ID</span></span><br><span class="line">u<span class="comment">#改变显示记录单位</span></span><br><span class="line">v<span class="comment">#验证分区表</span></span><br><span class="line">x<span class="comment">#附加功能</span></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：m</span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line"><span class="comment">#划分第一个主分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default p):   回车</span><br><span class="line">分区号 (1-4，默认 1)：回车</span><br><span class="line">起始 扇区 (2048-209715199，默认为 2048)：回车</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-209715199，默认为 209715199)：+10G  <span class="comment">#指定大小（K,M,G）</span></span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 10 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xefc65503</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    20973567    10485760   83  Linux</span><br><span class="line"></span><br><span class="line"><span class="comment">#划分第二个主分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default p): </span><br><span class="line">分区号 (2-4，默认 2)：</span><br><span class="line">起始 扇区 (20973568-209715199，默认为 20973568)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (20973568-209715199，默认为 209715199)：+10G  <span class="comment">#指定分区大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#划分第三个主分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default p): </span><br><span class="line">分区号 (3,4，默认 3)：</span><br><span class="line">起始 扇区 (41945088-209715199，默认为 41945088)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (41945088-209715199，默认为 209715199)：+10G</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看分区信息</span></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xefc65503</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    20973567    10485760   83  Linux</span><br><span class="line">/dev/sdb2        20973568    41945087    10485760   83  Linux</span><br><span class="line">/dev/sdb3        41945088    62916607    10485760   83  Linux</span><br><span class="line"></span><br><span class="line"><span class="comment">#划分第四个分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default e): p</span><br><span class="line">起始 扇区 (62916608-209715199，默认为 62916608)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (62916608-209715199，默认为 209715199)：+10G</span><br><span class="line"></span><br><span class="line"><span class="comment">#继续划分分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">If you want to create more than four partitions, you must replace a</span><br><span class="line">primary partition with an extended partition first.</span><br><span class="line"><span class="comment">#提示如果想要创建更多的分区，先将一个主分区替换为扩展分区</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除分区</span></span><br><span class="line">命令(输入 m 获取帮助)：d4</span><br><span class="line">分区号 (1-4，默认 4)：</span><br><span class="line">分区 4 已删除</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：d</span><br><span class="line">分区号 (1-3，默认 3)：3</span><br><span class="line">分区 3 已删除</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xefc65503</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    20973567    10485760   83  Linux</span><br><span class="line">/dev/sdb2        20973568    41945087    10485760   83  Linux</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建主分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default p): </span><br><span class="line">分区号 (3,4，默认 3)：</span><br><span class="line">起始 扇区 (41945088-209715199，默认为 41945088)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (41945088-209715199，默认为 209715199)：+10G</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建按扩展分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Select (default e): </span><br><span class="line">Using default response e</span><br><span class="line">已选择分区 4</span><br><span class="line">起始 扇区 (62916608-209715199，默认为 62916608)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (62916608-209715199，默认为 209715199)：</span><br><span class="line">分区 4 已设置为 Extended 类型，大小设为 70 GiB</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建逻辑分区</span></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">添加逻辑分区 5</span><br><span class="line">起始 扇区 (62918656-209715199，默认为 62918656)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (62918656-209715199，默认为 209715199)：+10G</span><br><span class="line">分区 5 已设置为 Linux 类型，大小设为 10 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘 /dev/sdb：107.4 GB, 107374182400 字节，209715200 个扇区</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xefc65503</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    20973567    10485760   83  Linux</span><br><span class="line">/dev/sdb2        20973568    41945087    10485760   83  Linux</span><br><span class="line">/dev/sdb3        41945088    62916607    10485760   83  Linux</span><br><span class="line">/dev/sdb4        62916608   209715199    73399296    5  Extended</span><br><span class="line">/dev/sdb5        62918656    83890175    10485760   83  Linux</span><br><span class="line">命令(输入 m 获取帮助)：w</span><br></pre></td></tr></table></figure><h4 id="格式化文件系统"><a href="#格式化文件系统" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h4><ul><li>mkfs命令用于在分区上建立文件系统</li><li>常用文件系统类型<ul><li>ext4，xfs</li></ul></li><li>命令格式：<ul><li>mkfs.xfs 分区设备路径     #格式化为xfs类型文件系统</li><li>mkfs.ext4  分区设备路径  #格式化为ext4类型文件系统</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式化文件系统</span></span><br><span class="line">[root@localhost ~]# mkfs.xfs /dev/sdb1</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件系统类型</span></span><br><span class="line">[root@localhost ~]# blkid /dev/sdb1</span><br><span class="line">/dev/sdb1: UUID=<span class="string">&quot;3bb79b0b-3f17-4ad9-ad47-f00dcb6a5afa&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br></pre></td></tr></table></figure><h4 id="mount挂载"><a href="#mount挂载" class="headerlink" title="mount挂载"></a>mount挂载</h4><ul><li>mount文件系统挂载命令</li><li>命令格式：mount  设备路径   挂载点目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建挂载点目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /mybak</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载文件系统</span></span><br><span class="line">[root@localhost ~]# mount /dev/sdb1 /mybak</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看正在使用中的分区信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -Th </span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -Th /mybak</span><br><span class="line">文件系统       类型  容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/sdb1      xfs    10G   33M   10G    1% /mybak</span><br></pre></td></tr></table></figure><p>总结：</p><ul><li>添加硬盘—查看系统是否识别新硬盘  lsblk</li><li>划分分区—fdisk  设备路径</li><li>格式化文件系统—mkfs.xfs</li><li>挂载—创建挂载点目录–挂载  mount  设备路径  挂载点目录</li><li>查看分区使用情况   df  -hT</li></ul><h4 id="umount卸载"><a href="#umount卸载" class="headerlink" title="umount卸载"></a>umount卸载</h4><ul><li>umount命令用于卸载文件系统</li><li>命令格式：umount 挂载点目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载文件系统</span></span><br><span class="line">[root@localhost ~]# umount /mybak</span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -h </span><br></pre></td></tr></table></figure><h4 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h4><ul><li><p>&#x2F;etc&#x2F;fstab用于存放文件系统信息，当系统启动时，系统会自动读取文件内容将指定的文件系统挂载到指定的目录</p></li><li><p>文件内容详解</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/fstab</span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=5d36a8b5-5a58-450f-acf9-81fcddaa62de /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line"><span class="comment">#解释：该文件内容为6个字段，每个字段详解如下</span></span><br><span class="line">第一个字段：要挂载的设备路径</span><br><span class="line">第二个字段：挂载点目录</span><br><span class="line">第三个字段：设备文件系统类型</span><br><span class="line">第四个字段：挂载参数，参数如下↓</span><br><span class="line"><span class="built_in">sync</span>，async：  此文件系统是否使用同步写入 (<span class="built_in">sync</span>) 或异步 (async) 的内存机制，默认为异步（async） </span><br><span class="line">atime，noatime：更新访问时间/不更新访问时间，访问分区时，是否更新文件的访问时间，默认为更新</span><br><span class="line">ro，rw：挂载文件为只读（ro）或读写（rw），默认为rw</span><br><span class="line">auto，noauto：自动挂载/手动挂载，执行mount -a时，是否自动挂载/etc/fstab文件内容，默认为自动（auto）</span><br><span class="line">dev，nodev：是否允许此文件系统上，可建立装置文件，默认为允许（dev）</span><br><span class="line">suid，nosuid：是否允许文件系统上含有SUID与SGID特殊权限，默认为允许（SUID）</span><br><span class="line"><span class="built_in">exec</span>，noexec：是否允许文件系统上拥有可执行文件，默认为允许（<span class="built_in">exec</span>）</span><br><span class="line">user，nouser：是否允许普通用户执行挂载操作，默认为不允许（nouser），只有root用户可以挂载分区</span><br><span class="line">defaults默认值：代表async，rw，auto，dev，suid，<span class="built_in">exec</span>，nouser七个选项</span><br><span class="line">第五个字段：是否对文件系统进行备份，0不备份，1为备份</span><br><span class="line">第六个字段：是否检查文件系统顺序，允许的数字是0，1，2，0表示不检查，1的优先权最高</span><br><span class="line"></span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=ae55ec6b-973b-498e-a366-f35e14b3d153 /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line">/dev/sdb1 /mybak xfs defaults 0 0     <span class="comment">#手动添加                                                    </span></span><br></pre></td></tr></table></figure><ul><li><p>mount常用选项：</p><ul><li>-a：依照配置文件&#x2F;etc&#x2F;fstab的数据将所有未挂载的磁盘都挂载上来</li><li>-o：该选项后边可跟挂载时额外参数</li></ul></li><li><p>remount命令：重新挂载文件系统，在文件系统出错时或重新挂载文件系统时非常重要</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mount -a</span><br></pre></td></tr></table></figure><h4 id="GPT分区格式"><a href="#GPT分区格式" class="headerlink" title="GPT分区格式"></a>GPT分区格式</h4><ul><li><p>gdisk命令用于查看磁盘使用情况和磁盘分区（GPT分区格式）</p></li><li><p>命令格式：gdisk [选项…] [设备路径]</p></li><li><p>常用选项：-l 列出磁盘分区表类型与分区信息</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# gdisk /dev/sdc</span><br><span class="line">GPT fdisk (gdisk) version 0.8.10 <span class="comment">#GPT版本</span></span><br><span class="line"></span><br><span class="line">Partition table scan:   <span class="comment">#分区表扫描</span></span><br><span class="line">  MBR: not present<span class="comment">#MBR分区不存在</span></span><br><span class="line">  BSD: not present<span class="comment">#BSD分区不存在</span></span><br><span class="line">  APM: not present<span class="comment">#APM分区不存在</span></span><br><span class="line">  GPT: not present<span class="comment">#GPT分区不存在</span></span><br><span class="line"></span><br><span class="line">Creating new GPT entries.  <span class="comment">#创建新的GPT分区</span></span><br><span class="line"></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): ?   <span class="comment">#输入？号获取命令帮助</span></span><br><span class="line">p<span class="comment">#显示磁盘分区表   ※</span></span><br><span class="line">n<span class="comment">#新增加一个分区   ※</span></span><br><span class="line">q<span class="comment">#不保存分区退出   ※</span></span><br><span class="line">d<span class="comment">#删除一个分区     ※</span></span><br><span class="line">w<span class="comment">#保存分区退出     ※</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建新的分区</span></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition number (1-128, default 1): 回车</span><br><span class="line">First sector (34-209715166, default = 2048) or &#123;+-&#125;size&#123;KMGTP&#125;: 回车  <span class="comment">#输入起始扇区，默认2048开始</span></span><br><span class="line">Last sector (2048-209715166, default = 209715166) or &#123;+-&#125;size&#123;KMGTP&#125;: +20G <span class="comment">#输入新增分区的大小，可以通过扇区数来增加，也可以通过+size&#123;KMGTP&#125;方式来增加</span></span><br><span class="line">Hex code or GUID (L to show codes, Enter = 8300):  <span class="comment">#这里要求输入分区的类型，直接回车就行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看分区类型</span></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): p  <span class="comment">#输入p查看创建的分区</span></span><br><span class="line">Disk /dev/sdc: 209715200 sectors, 100.0 GiB  <span class="comment">#磁盘总容量</span></span><br><span class="line">...</span><br><span class="line">Total free space is 167772093 sectors (80.0 GiB)  <span class="comment">#磁盘剩余容量</span></span><br><span class="line"></span><br><span class="line">Number  Start (sector)    End (sector)  Size       Code  Name</span><br><span class="line">   1            2048        41945087   20.0 GiB    8300  Linux filesystem</span><br><span class="line"><span class="comment">#以创建的分区</span></span><br><span class="line"></span><br><span class="line">Command (? <span class="keyword">for</span> <span class="built_in">help</span>): w   <span class="comment">#输入w保存配置，如果不想保存可以输入q退出</span></span><br><span class="line">Do you want to proceed? (Y/N): y  <span class="comment">#问你是否相想继续，输入y继续 </span></span><br><span class="line">OK; writing new GUID partition table (GPT) to /dev/sdc.</span><br><span class="line">The operation has completed successfully.   <span class="comment">#写入成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#格式化文件系统</span></span><br><span class="line">[root@localhost ~]# mkfs.xfs /dev/sdc1</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件系统类型</span></span><br><span class="line">[root@localhost ~]# blkid /dev/sdc1</span><br><span class="line">/dev/sdc1: UUID=<span class="string">&quot;c57746eb-8170-4c86-82ad-6aae95de19f3&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建挂载点</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /webbak</span><br><span class="line">[root@localhost ~]# mount /dev/sdc1 /webbak</span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -hT</span><br><span class="line">/dev/sdc1               xfs        20G   33M   20G    1% /webbak</span><br><span class="line"></span><br><span class="line"><span class="comment">#开机自动挂载</span></span><br><span class="line">[root@localhost ~]# vim /etc/fstab</span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=ae55ec6b-973b-498e-a366-f35e14b3d153 /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line">/dev/sdb1              /mybak                   xfs     defaults        0 0 </span><br><span class="line">/dev/sdc1              /webbak                  xfs     defaults        0 0   <span class="comment">#手动添加</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# mount -a</span><br></pre></td></tr></table></figure><h4 id="LVM逻辑卷"><a href="#LVM逻辑卷" class="headerlink" title="LVM逻辑卷"></a>LVM逻辑卷</h4><ul><li>逻辑卷：LVM（Logical Volume Manager）逻辑卷管理系统 </li><li>逻辑卷可以实现将底层的物理分区整合成一个大的虚拟硬盘</li><li>逻辑卷技术是通过Linux系统内核dm（device mapper）设备映射模块</li></ul><h4 id="逻辑卷管理命令"><a href="#逻辑卷管理命令" class="headerlink" title="逻辑卷管理命令"></a>逻辑卷管理命令</h4><table><thead><tr><th>功能</th><th>物理卷管理</th><th>卷组管理</th><th>逻辑卷管理</th></tr></thead><tbody><tr><td>scan      扫描</td><td>pvscan</td><td>vgscan</td><td>lvscan</td></tr><tr><td>create   创建</td><td>pvcreate</td><td>vgcreate</td><td>lvcreate</td></tr><tr><td>display  显示</td><td>pvdisplay</td><td>vgdisplay</td><td>lvdisplay</td></tr><tr><td>remove 删除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>extend  扩展</td><td></td><td>vgextend</td><td>lvextend</td></tr></tbody></table><h4 id="创建卷组"><a href="#创建卷组" class="headerlink" title="创建卷组"></a>创建卷组</h4><ul><li><p>创建卷组思路：将创建好的物理卷组成卷组（或者直接创建卷组）</p></li><li><p>命令格式：vgcreate  卷组名  设备路径1 设备路径2…</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建卷组</span></span><br><span class="line">[root@localhost ~]# vgcreate systemvg  /dev/sdb2 /dev/sdb3</span><br><span class="line"></span><br><span class="line"><span class="comment">#详细显示卷组信息</span></span><br><span class="line">[root@localhost ~]# vgdisplay  systemvg</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               systemvg  <span class="comment">#卷组名字</span></span><br><span class="line">  System ID             </span><br><span class="line">  Format                lvm2      <span class="comment">#卷组格式</span></span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  1</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                0</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               19.99 GiB  <span class="comment">#卷组大小</span></span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              5118</span><br><span class="line">  Alloc PE / Size       0 / 0   </span><br><span class="line">  Free  PE / Size       5118 / 19.99 GiB</span><br><span class="line">  VG UUID               KEP7XS-wrkI-rTUY-RqBa-UJA6-YRkK-iKDabR  <span class="comment">#卷组UUID</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#简要显示卷组信息</span></span><br><span class="line">[root@localhost ~]# vgs systemvg</span><br><span class="line">  VG       <span class="comment">#PV #LV #SN Attr   VSize  VFree </span></span><br><span class="line">  systemvg   2   0   0 wz--n- 19.99g 19.99g</span><br></pre></td></tr></table></figure><h4 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h4><ul><li><p>创建逻辑卷思路：从创建好的卷组中创建逻辑卷</p></li><li><p>命令格式：lvcreate -L 大小 -n 逻辑卷名 卷组名</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建逻辑卷</span></span><br><span class="line">[root@localhost ~]# lvcreate -L 10G -n mylv systemvg</span><br><span class="line">  Logical volume <span class="string">&quot;mylv&quot;</span> created.</span><br><span class="line"></span><br><span class="line"><span class="comment">#简要查看逻辑卷信息</span></span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  LV   VG       Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos   -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos   -wi-ao----   2.00g                                                    </span><br><span class="line">  mylv systemvg -wi-a-----  10.00g     </span><br><span class="line">[root@localhost ~]# lvs /dev/systemvg/mylv </span><br><span class="line">  LV   VG       Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  mylv systemvg -wi-a----- 10.00g    </span><br><span class="line">  </span><br><span class="line"> <span class="comment">#查看卷组信息，卷组信息以变小</span></span><br><span class="line"> [root@localhost ~]# vgs</span><br><span class="line">  VG       <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos     1   2   0 wz--n- &lt;19.00g    0 </span><br><span class="line">  systemvg   2   1   0 wz--n-  19.99g 9.99g</span><br></pre></td></tr></table></figure><h4 id="格式化文件系统-1"><a href="#格式化文件系统-1" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式化文件系统</span></span><br><span class="line">[root@localhost ~]# mkfs.xfs /dev/systemvg/mylv</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件系统类型</span></span><br><span class="line">[root@localhost ~]# blkid /dev/systemvg/mylv</span><br><span class="line">/dev/systemvg/mylv: UUID=<span class="string">&quot;7f08daf8-ae3c-40b2-a282-4514a6f37111&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载使用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /dbbak</span><br><span class="line">[root@localhost ~]# mount /dev/systemvg/mylv /dbbak</span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -hT</span><br><span class="line">/dev/mapper/systemvg-mylv xfs        10G   33M   10G    1% /dbbak</span><br></pre></td></tr></table></figure><h4 id="扩展逻辑卷"><a href="#扩展逻辑卷" class="headerlink" title="扩展逻辑卷"></a>扩展逻辑卷</h4><ul><li>逻辑卷支线上扩容，逻辑卷的空间来源于卷组，当卷组有足够的空间时，才可以扩展逻辑卷</li><li>扩展命令：lvextend  -L  +{K,M,G}  逻辑卷路径</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#扩容逻辑卷</span></span><br><span class="line">[root@localhost ~]# lvextend -L +9G /dev/systemvg/mylv </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看逻辑卷信息</span></span><br><span class="line">[root@localhost ~]# lvs </span><br><span class="line">  LV   VG       Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos   -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos   -wi-ao----   2.00g                                                    </span><br><span class="line">  mylv systemvg -wi-ao----  19.00g    <span class="comment">#扩容成功</span></span><br></pre></td></tr></table></figure><h4 id="扩展文件系统"><a href="#扩展文件系统" class="headerlink" title="扩展文件系统"></a>扩展文件系统</h4><ul><li><p>当逻辑卷扩大以后，也需要对逻辑卷的文件系统进行扩展</p></li><li><p>扩展文件系统容量：</p><ul><li>xfs_growfs    #用于扩容XFS设备</li><li>resize2fs       #用于扩容EXT3&#x2F;EXT4设备（了解）resize2fs &#x2F;dev&#x2F;systemvg&#x2F;xxoo</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#扩展文件系统</span></span><br><span class="line">[root@localhost ~]# xfs_growfs /dbbak</span><br><span class="line"></span><br><span class="line"><span class="comment">#[root@localhost ~]# df -hT</span></span><br><span class="line">/dev/mapper/systemvg-mylv xfs        19G   33M   19G    1% /dbbak</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看卷组信息</span></span><br><span class="line">[root@localhost ~]# vgs</span><br><span class="line">  VG       <span class="comment">#PV #LV #SN Attr   VSize   VFree   </span></span><br><span class="line">  centos     1   2   0 wz--n- &lt;19.00g       0 </span><br><span class="line">  systemvg   2   1   0 wz--n-  19.99g 1016.00m</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="扩展卷组"><a href="#扩展卷组" class="headerlink" title="扩展卷组"></a>扩展卷组</h4><ul><li>卷组的空间来源于物理分区，当卷组没有足够空间提供给逻辑卷时，须扩容卷组</li><li>扩展卷组命令：vgextend</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vgextend systemvg /dev/sdb5 /dev/sdb6 /dev/sdb7 /dev/sdb8</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vgs</span><br><span class="line">  VG       <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  centos     1   2   0 wz--n- &lt;19.00g      0 </span><br><span class="line">  systemvg   6   1   0 wz--n- &lt;59.98g &lt;40.98g</span><br><span class="line"></span><br><span class="line"><span class="comment">#扩容逻辑卷</span></span><br><span class="line">[root@localhost ~]# lvextend -L +40G /dev/systemvg/mylv </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  LV   VG       Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos   -wi-ao---- &lt;17.00g                                                    </span><br><span class="line">  swap centos   -wi-ao----   2.00g                                                    </span><br><span class="line">  mylv systemvg -wi-ao----  59.00g   </span><br><span class="line">  </span><br><span class="line"><span class="comment">#扩展文件系统</span></span><br><span class="line">[root@localhost ~]# xfs_growfs /dbbak</span><br><span class="line">/dev/mapper/systemvg-mylv   59G   34M   59G    1% /dbbak</span><br></pre></td></tr></table></figure><h4 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h4><p>1.查看&#x2F;var&#x2F;log目录下以包含log的文件</p><p>[root@localhost ~]# ls &#x2F;var&#x2F;log&#x2F;<em>log</em></p><p>2.查看&#x2F;var&#x2F;log目录下以数字结尾的文件</p><p>[root@localhost ~]# ls &#x2F;var&#x2F;log&#x2F;*[0-9]</p><p>3.查看&#x2F;var&#x2F;log目录下以字母结尾的文件（包括大写）</p><p>[root@localhost ~]# ls &#x2F;var&#x2F;log&#x2F;*[a-Z]</p><p>4.过滤&#x2F;etc&#x2F;sudoers文件以root开头的行</p><p>root@localhost ~]# grep ^root &#x2F;etc&#x2F;sudoers<br>rootALL&#x3D;(ALL) ALL</p><p>5.看&#x2F;etc&#x2F;sudoers文件有效的配置</p><p>[root@localhost ~]# grep -v ‘^#’ &#x2F;etc&#x2F;sudoers | grep -v ‘^$’ -n</p><p>6.查找&#x2F;etc&#x2F;目录下crontab文件存放位置，并查看文件内容</p><p>[root@localhost ~]# find &#x2F;etc&#x2F; -name crontab -type f</p><p>[root@localhost ~]# cat &#x2F;etc&#x2F;crontab</p><p>[root@localhost ~]# find &#x2F;etc&#x2F; -name crontab -type f -exec cat {} ;</p><p>7.查找10分钟内被修改的文件</p><p>[root@localhost ~]# find &#x2F; -cmin -10 -type f</p><p>8.查找&#x2F;var&#x2F;log目录下30天之前被修改且大于1M的文件，清空文件内容</p><p>[root@localhost ~]# find &#x2F;var&#x2F;log -mtime +30 -type f -size +10k  -exec cp &#x2F;dev&#x2F;null {} ;</p><p>9.Linux下你常熟悉的压缩格式有哪些？</p><p>gzip  bzip2  xz</p><p>10.对&#x2F;home目录打包并压缩，打包后名为home.tar.gz</p><p>[root@localhost ~]# tar -czf home.tar.gz &#x2F;home</p><p>11.将home.tar.gz压缩包内容解压至&#x2F;homebak目录下</p><p>[root@localhost ~]# tar -xvf home.tar.gz -C &#x2F;homebak&#x2F;</p><p>12.MBR分区格式可以划分多少个主分区？支持多大容量磁盘？</p><p>4个主分区，2.2T</p><p>13.GPT分区格式可以划分多少个主分区？支持多大容量磁盘？</p><p>128主分区，18EB</p><p>14.CentOS7分区默认使用的文件系统类型是什么？</p><p>xfs</p><p>15.如何查看一块磁盘的分区格式？及扩展分区大小？</p><p>[root@localhost ~]# fdisk -l &#x2F;dev&#x2F;sdc</p><p>磁盘标签类型：gpt</p><p>16如何查看一块磁盘剩余容量？</p><p>[root@localhost ~]# lsblk &#x2F;dev&#x2F;sdc</p><p>17.linux下开机自动挂载文件是哪个？</p><p>&#x2F;etc&#x2F;fstab</p><p>18.如何查看一个分区文件系统类型？及使用情况？</p><p>[root@localhost ~]# df -hT</p><p>19.为根分区扩容40G空间（添加硬盘、分区）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看根分区卷组</span></span><br><span class="line">[root@localhost ~]# vgs</span><br><span class="line">  VG       <span class="comment">#PV #LV #SN Attr   VSize   VFree   </span></span><br><span class="line">  centos     1   2   0 wz--n- &lt;19.00g       0 </span><br><span class="line"></span><br><span class="line"><span class="comment">#扩容根分区卷组</span></span><br><span class="line">[root@localhost ~]# vgextend centos /dev/sdc2 /dev/sdc3</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看根分区逻辑卷信息</span></span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  LV   VG       Attr       LSize   </span><br><span class="line">  root centos   -wi-ao---- &lt;17.00g  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#扩容逻辑卷</span></span><br><span class="line">[root@localhost ~]# lvextend -L +39G /dev/centos/root </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看逻辑卷信息</span></span><br><span class="line">[root@localhost ~]# lvs</span><br><span class="line">  root centos   -wi-ao---- &lt;56.00g  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#查看正在使用的分区信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -hT</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        17G  4.4G   13G   26% /</span><br><span class="line"></span><br><span class="line"><span class="comment">#扩容文件系统</span></span><br><span class="line">[root@localhost ~]# xfs_growfs /</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看使用情况</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root   56G  4.4G   52G    8% /</span><br></pre></td></tr></table></figure><h4 id="删除逻辑卷"><a href="#删除逻辑卷" class="headerlink" title="删除逻辑卷"></a>删除逻辑卷</h4><ul><li>逻辑卷的删除不允许联机操作，需要先卸载，在执行删除</li><li>在执行删除操作时，首先删除LV逻辑卷，在删除VG卷组，最后删除PV物理卷</li><li>删除命令：lvremove</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除逻辑卷错误示范</span></span><br><span class="line">[root@localhost ~]# lvremove /dev/systemvg/mylv </span><br><span class="line">  Logical volume systemvg/mylv contains a filesystem <span class="keyword">in</span> use.  <span class="comment">#提示文件正在使用中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#需要先卸载</span></span><br><span class="line">[root@localhost ~]# umount /dblod/</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除逻辑卷</span></span><br><span class="line">[root@localhost ~]# lvremove /dev/systemvg/mylv </span><br><span class="line">Do you really want to remove active logical volume systemvg/mylv? [y/n]: y</span><br><span class="line">  Logical volume <span class="string">&quot;mylv&quot;</span> successfully removed</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除卷组</span></span><br><span class="line">[root@localhost ~]# vgremove systemvg</span><br><span class="line">  Volume group <span class="string">&quot;systemvg&quot;</span> successfully removed</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除物理卷后将恢复至普通分区</span></span><br><span class="line"><span class="comment">#查看物理卷</span></span><br><span class="line">[root@thinkmo ~]# pvs   </span><br><span class="line"></span><br><span class="line"><span class="comment">#删除物理卷</span></span><br><span class="line">[root@thinkmo ~]# pvremove /dev/sdb2 /dev/sdb3 /dev/sdb5 /dev/sdb6 /dev/sdb6 /dev/sdb7 /dev/sdb8</span><br></pre></td></tr></table></figure><h4 id="逻辑卷的缩减"><a href="#逻辑卷的缩减" class="headerlink" title="逻辑卷的缩减"></a>逻辑卷的缩减</h4><ul><li>命令lvreduce</li><li>不允许联机缩减</li><li>先缩减文件系统的空间，在缩减逻辑卷的空间</li></ul><h4 id="RAID磁盘阵列"><a href="#RAID磁盘阵列" class="headerlink" title="RAID磁盘阵列"></a>RAID磁盘阵列</h4><ul><li>RAID中文全称：独立磁盘冗余阵列 ，简称磁盘阵列</li><li>RAID可通过技术（软件&#x2F;硬件）将多个独立的磁盘整合成一个巨大容量大逻辑磁盘使用</li><li>RAID可以提高数据I&#x2F;O（读写）速度，和冗余数据的功能</li></ul><h4 id="RAID级别"><a href="#RAID级别" class="headerlink" title="RAID级别"></a>RAID级别</h4><p>RAID0：等量存储，至少由2块磁盘组成，同一个文档等量存放在不同的磁盘并行写入数据来提高效率，但只是单纯的提高效率，并没有冗余功能，如果其中一块盘故障，数据会丢失，不适合存放重要数据</p><p><img src="/RHCSA%E9%98%B6%E6%AE%B5%E7%AC%94%E8%AE%B0.assets/1649580123748.png" alt="1649580123748"></p><p>RAID1：完整备份，至少由两块磁组成，同一个文档复制成多份存储到不同磁盘提高可靠性，读写速度没有提升，反而下降了，适合存储重要的数据</p><p><img src="/RHCSA%E9%98%B6%E6%AE%B5%E7%AC%94%E8%AE%B0.assets/1649580147638.png" alt="1649580147638"></p><p>RAID2：至少由3块磁盘组成，数据分散存储在不同磁盘，在读写数据时需要对数据时时校验，由于采用的校验算法复杂，数据量比原有数据增大，而且导致硬件开销较大</p><p>RAID3：至少由三块磁盘组成，同一份文档分散写入不同的磁盘，校验数据单独存放在另外一块磁盘，由于每次读写操作都会访问校验盘，容易导致校验盘长时间高负荷工作而挂掉，如果校验盘损坏数据将无法恢复</p><p>RAID4：与RAID3类似，至少由3块磁盘组成，同一份文档分散存写入不同磁盘，校验数据单独存放在另外一块磁盘，由于每次读写操作都会访问校验盘，容易导致校验盘长时间高负荷工作而挂掉，如果校验盘损坏数据将无法恢复，与RAID3的区别是数据分割方式不一样</p><p><strong>RAID5</strong>：至少由3块磁盘组成，同一份文档分散写入不同磁盘，每个硬盘都有校验数据，其中校验数据会占用磁盘三分之一的空间，三分之二的空间存放原始数据，允许同时坏一块磁盘，当一块磁盘损坏，其他磁盘里的数据配合校验信息可将数据恢复回来</p><p><img src="/RHCSA%E9%98%B6%E6%AE%B5%E7%AC%94%E8%AE%B0.assets/1649580503797.png" alt="1649580503797"></p><p>RAID6：至少由4块磁盘组成，同一份文档分散写入不同磁盘，每个磁盘都有校验数据，由于采用双校验算法，所以校验数据量是RAID5的两倍，需要占用2块磁盘空间存放校验数据，两块盘存放原始数据，由于数据校验的算法计算量偏大，所以在速写速度上没有RAID5快，允许同时坏2块磁盘</p><p>RAID7：美国SCC公司专利，花钱</p><p>RAID10：RAID10&#x3D;RAID1+RAID0合二为一，最少需要4块磁盘，先将4块硬盘组成两组RAID1，在将两组RAID1组成一个RAID0，既提高数据读写速度，又能保障数据安全性，缺点是可用容量是总容量的一半</p><p><img src="/RHCSA%E9%98%B6%E6%AE%B5%E7%AC%94%E8%AE%B0.assets/1649580996055.png" alt="1649580996055"></p><h4 id="实现RAID方式"><a href="#实现RAID方式" class="headerlink" title="实现RAID方式"></a>实现RAID方式</h4><ul><li>实现RAID通常有三种方式，通过软件技术实现RAID功能（软RAID），不稳定</li><li>外接式磁盘阵列柜，被常用在大型服务器上，不过这类产品价格昂贵</li><li>RAID磁盘阵列卡，分为服务器自带和额外安装，硬RAID比软RAID更安全稳定，RAID卡带有缓存功能可实现数据自动恢复，RAID卡有电池</li></ul><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1618909597594.png" alt="1618909597594"></p><ul><li>配置硬RAID方式</li></ul><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1618988695705.png" alt="1618988695705"></p><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1618988740634.png" alt="1618988740634"></p><p><img src="C:\Users\zhiy_\AppData\Roaming\Typora\typora-user-images\1618988754045.png" alt="1618988754045"></p><h4 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h4><ul><li>什么是程序：用计算机语言编写的命令序列集合，用来实现特定的目标或解决特定的问题，程序占用磁盘空间，程序是静态并且是永久的</li><li>什么是进程：正在运行中的程序叫进程，占用内存空间，进程是动态的，进程是有生命周期的，进程有自己的独立内存空间，每启动一个进程，系统就会为它分配内存空间并分配一个PID号，每个进程都会对应一个父进程，而父进程可以复制多个子进程，每种进程都有两种方式存在，前台与后台，一般进程都是以后台方式运</li><li>什么是线程：线程也被称为轻量级进程，被包含在进程中，是进程的一个子集，是进程中的实际运作单位，一个进程中可以并发多个线程，每条线程并行执行不同的任务，每个线程都是独立的，线程之间共享进程的内存空间，在多线程的程序中，由于线程很“轻”，故线程的切换非常迅速且开销小（在同一进程中）</li></ul><h4 id="查看进程树"><a href="#查看进程树" class="headerlink" title="查看进程树"></a>查看进程树</h4><ul><li>pstree以树状结构显示进程信息，包括进程之间的关系</li><li>命令格式：pstree  [选项…] [参数…]</li><li>常用选项：<ul><li>-p     #显示进程PID</li><li>-a     #显示完整的命令行</li><li>-u     #列出每个进程所属账号名称</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看进程树</span></span><br><span class="line">[root@localhost ~]# pstree</span><br><span class="line">systemd─┬─ModemManager───2*[&#123;ModemManager&#125;]</span><br><span class="line">CentOS7版本：天父进程systemd</span><br><span class="line">CentOS6版本：天父进程init，Apstart</span><br><span class="line">CentOS5版本：天赋进程init</span><br><span class="line"></span><br><span class="line"><span class="comment">#以PID形式显示进程信息</span></span><br><span class="line">[root@localhost ~]# pstree -p</span><br><span class="line">systemd(1)─┬─ModemManager(6714)─┬─&#123;ModemManager&#125;(6739)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统用户的进程信息</span></span><br><span class="line">[root@localhost ~]# pstree -p lisi</span><br><span class="line">sshd(15086)───bash(15089)───vim(15244)</span><br><span class="line">[root@localhost ~]# pstree -pa lisi</span><br><span class="line">sshd,15086    </span><br><span class="line">  └─bash,15089</span><br><span class="line">      └─vim,15244 1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统所有用户的进程</span></span><br><span class="line">root@localhost ~]# pstree -up</span><br><span class="line">...</span><br><span class="line">           ├─smartd(6726)</span><br><span class="line">           ├─sshd(7337)─┬─sshd(8880)───bash(8887)───pstree(15395)</span><br><span class="line">           │            └─sshd(15066)───sshd(15086,lisi)───bash(15089)───vim(15244)</span><br></pre></td></tr></table></figure><ul><li>ps aux：unix格式静态查看系统进程，查看系统所有进程信息<ul><li>a   #显示当前终端所有进程</li><li>u    #以用户格式输出</li><li>x     #当前用户在所有终端下的进程</li></ul></li><li>ps -ef：Linux格式静态查看系统进程，查看系统所有进程信息<ul><li>-e    #显示系统所有进程</li><li>-l     #以长格式输出信息</li><li>-f     #显示最完整的进程信息</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看系统所有进程信息</span></span><br><span class="line">[root@localhost ~]# ps aux</span><br><span class="line">USER PID %CPU %MEM VSZ   RSS TTY STAT START TIME COMMAND</span><br><span class="line">root  1  2.2  0.3 127992 6576 ?  Ss   09:08 0:01 /usr/lib/systemd/systemd --switched-root</span><br><span class="line"><span class="comment">#个字段含义如下：</span></span><br><span class="line">user：进程属于那个用户</span><br><span class="line">PID ：进程PID号</span><br><span class="line">%CPU：进程占用CPU资源百分比</span><br><span class="line">%MEM：进程占用物理内存百分比</span><br><span class="line">VSZ ：进程使用掉的虚拟内存量（单位：Kb）</span><br><span class="line">RSS ：进程占用固定内存量（单位：Kb）</span><br><span class="line">TTY ：进程在那个终端运行，如果内核直接调用则显示“？”，tty1-tty6表示本机终端登录的用户进程，pts/0-255则表示远程终端登录用户的进程</span><br><span class="line">STAT：进程状态：R（Running）运行，S（Sleep）休眠，s包含子进程，T（stop）停止，Z（Zombie）僵尸，+后台进程</span><br><span class="line">START：进程启动时间</span><br><span class="line">TIME ：占用CPU运算时间</span><br><span class="line">COMMAND：产生进程的命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统所有进程信息</span></span><br><span class="line">[root@localhost ~]# ps -ef</span><br><span class="line">UID  PID PPID  C STIME TTY    TIME  CMD</span><br><span class="line">root 1      0  0 09:08 ?  00:00:01 /usr/lib/systemd/systemd --switched-root --system --dese</span><br><span class="line"><span class="comment">#PPID ：该进程的父进程ID号</span></span><br></pre></td></tr></table></figure><h4 id="top查看系统健康状态"><a href="#top查看系统健康状态" class="headerlink" title="top查看系统健康状态"></a>top查看系统健康状态</h4><ul><li>top命令动态来查看系统性能及运行状态信息（类似于windows资源管理器）</li><li>命令格式：top [选项…]</li><li>常用选项：-d   #指定刷新秒数，默认为3秒刷新一次</li><li>交互界面显示指令：<ul><li>键盘上下键翻行</li><li>h              #获取交互模式帮助</li><li>P(大写)    #按照CPU使用资源排序</li><li>M             #按照内存使用资源排序</li><li>q              #退出</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# top</span><br><span class="line">top - 21:22:04 up 12:13,  2 <span class="built_in">users</span>,  load average: 0.00, 0.01, 0.05</span><br><span class="line">Tasks: 115 total,   1 running, 114 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.3 us,  0.3 sy,  0.0 ni, 99.3 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  1863224 total,  1502920 free,   107872 used,   252432 buff/cache</span><br><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  1565576 avail Mem </span><br><span class="line">   </span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND   </span><br><span class="line">   8317 root      20   0  161984   2220   1568 R  0.7  0.1   0:01.62 top   </span><br><span class="line"><span class="comment">#第一行top每个字段含义如下：</span></span><br><span class="line">第二列：21:22:04：当前系统时间</span><br><span class="line">第三列：up 12:13：系统运行时间，该系统以运行12小时13分钟（up 10 day，12:13 代表运行10天12小时13分钟）</span><br><span class="line">第四列：2 <span class="built_in">users</span>：当前系统登录终端数量</span><br><span class="line">第五列：load average: 0.00, 0.01, 0.05：CPU1分钟，5分钟，15分钟之前平均负载量，根据CPU核数判断系统CPU负载量，1核CPU若高于1代表负载过高，2核CPU若高于2代表负载过高，依次类推。。。</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二行Tasks每个字段含义如下：</span></span><br><span class="line">第二列：115 total：当前系统中进程的总数量</span><br><span class="line">第三列：1 running：正在运行的进程数量</span><br><span class="line">第四列：114 sleeping：正在睡眠的进程数量</span><br><span class="line">第五列：0 stopped：正在停止的进程数量</span><br><span class="line">第六列：0 zombie：僵尸进程数量，僵尸进程是当子进程比父进程先结束，而父进程又没有回收子进程，释放子进程占用的资源，此时子进程将成为一个僵尸进程。</span><br><span class="line"><span class="comment">#查找僵尸进程与其父进程</span></span><br><span class="line">ps -e -o ppid,<span class="built_in">stat</span> | grep Z</span><br><span class="line">命令解释：</span><br><span class="line">-o 自定义输出字段，我们设定显示字段为 <span class="built_in">stat</span>（状态）, ppid（父进程<span class="built_in">id</span>）, z或者Z的进程为僵尸进程，所以我们使用grep抓取<span class="built_in">stat</span>状态为zZ进程</span><br><span class="line"><span class="comment">#杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 + 父进程号</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三行%Cpu(s)每个字段含义如下</span></span><br><span class="line">第二列：0.0 us：用户进程占用的CPU百分比</span><br><span class="line">第三列：0.0 sy：系统进程占用的CPU百分比</span><br><span class="line">第四列：0.0 ni：改变过优先级的用户进程占用的CPU百分比</span><br><span class="line">第五列：100.0 <span class="built_in">id</span>：空闲的CPU百分比（重点关注）</span><br><span class="line">第六列：0.0 wa：等待输入/输出的进程的占用CPU百分比</span><br><span class="line">第七列：0.0 hi：硬中断请求服务占用的CPU百分比</span><br><span class="line">第八列：0.0 si：软中断请求服务占用的CPU百分比</span><br><span class="line">第九列：0.0 st：虚拟时间百分比，当有虚拟机时，虚拟CPU等待实际CPU的时间百分比</span><br><span class="line"></span><br><span class="line"><span class="comment">#第四行KiB Mem每个字段含义如下：</span></span><br><span class="line">第二列：1863224 total：物理内存总量，单位KB</span><br><span class="line">第三列：1502516 free： 空闲内存总量，单位KB</span><br><span class="line">第四列：108240 used：  以使用的内存总量，单位KB</span><br><span class="line">第五列：252468 buff/cache：块设备与普通文件占用的缓存数量</span><br><span class="line"></span><br><span class="line"><span class="comment">#第五行KiB Swap每个字段含义如下：</span></span><br><span class="line">第二列：2097148 total：交换空间总量，单位KB</span><br><span class="line">第三列：2097148 free：可用空闲交换空间总量，单位KB</span><br><span class="line">第四列：0 used：：以使用的交换空间总量，单位KB</span><br><span class="line">第五列：1565180 avail Mem：可用于进程下一次分配的物理内存数量</span><br><span class="line"></span><br><span class="line"><span class="comment">#第六行每个字段含义如下：</span></span><br><span class="line">PID：进程PID号</span><br><span class="line">USER：进程所有者的用户名</span><br><span class="line">PR：进程优先级执行顺序，越小越优先被执行</span><br><span class="line">NI：负值表示高优先级，正值表示低优先级，越小越优先被执行</span><br><span class="line">VIRT：进程使用的虚拟内存总量，单位kb   </span><br><span class="line">RES：进程使用的、未被换出的物理内存大小，单位kb</span><br><span class="line">SHR：共享内存大小，单位kb</span><br><span class="line">S：进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</span><br><span class="line">%CPU：进程使用的CPU百分比（重点关注）</span><br><span class="line">%MEM：进程使用的物理内存百分比（重点关注）</span><br><span class="line">TIME+：进程使用的CPU时间总计，单位1/100秒</span><br><span class="line">COMMAND：命令名/命令行</span><br></pre></td></tr></table></figure><h4 id="检索进程"><a href="#检索进程" class="headerlink" title="检索进程"></a>检索进程</h4><ul><li>pgrep 通过匹配其程序名，找到匹配的进程 </li><li>命令格式：pgrep [选项…] [参数…]</li><li>常用选项：<ul><li>-l    #输出进程名与PID</li><li>-U   #检索指定用户进程</li><li>-t     #检索指定终端进程</li><li>-x     #精确匹配完整进程名</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过滤sshd进程</span></span><br><span class="line">[root@localhost ~]# pgrep sshd</span><br><span class="line">7337</span><br><span class="line">8880</span><br><span class="line">15066</span><br><span class="line">15086</span><br><span class="line">17027</span><br><span class="line"></span><br><span class="line">过滤sshd进程，并显示进程名称</span><br><span class="line">[root@localhost ~]# pgrep -l sshd</span><br><span class="line">7337 sshd</span><br><span class="line">8880 sshd</span><br><span class="line">15066 sshd</span><br><span class="line">15086 sshd</span><br><span class="line">17027 sshd</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤指定用户的进程</span></span><br><span class="line">[root@localhost ~]# pgrep -lU lisi</span><br><span class="line">15086 sshd</span><br><span class="line">15089 bash</span><br><span class="line">15244 vim</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照用户名过滤进程时，选项不要颠倒</span></span><br><span class="line">[root@localhost ~]# pgrep -Ul lisi</span><br><span class="line">pgrep: invalid user name: l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统所有终端用户</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">who</span></span><br><span class="line">root     pts/0        2021-04-24 14:06 (192.168.0.1)</span><br><span class="line">lisi     pts/1        2021-04-24 15:57 (192.168.0.1)</span><br><span class="line">root     pts/2        2021-04-24 16:29 (192.168.0.1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤用户在指定终端开启的进程信息</span></span><br><span class="line">[root@localhost ~]# pgrep -lU lisi -t pts/1</span><br><span class="line">15089 bash</span><br><span class="line">15244 vim</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤用户在指定终端开启的进程信息</span></span><br><span class="line">[root@localhost ~]# pgrep -lU lisi -t pts/3</span><br><span class="line">19704 bash</span><br><span class="line">19754 top</span><br><span class="line"></span><br><span class="line"><span class="comment">#精确匹配进程名（没有则不显示）</span></span><br><span class="line">[root@localhost ~]# pgrep -x ssh</span><br><span class="line"></span><br><span class="line"><span class="comment">#精确匹配进程名</span></span><br><span class="line">[root@localhost ~]# pgrep -xl crond</span><br><span class="line">7362 crond</span><br></pre></td></tr></table></figure><h4 id="进程的前后台调度"><a href="#进程的前后台调度" class="headerlink" title="进程的前后台调度"></a>进程的前后台调度</h4><ul><li>&amp;       #将进程放入后台运行</li><li>jobs -l                   #查看后台进程列表</li><li>fg 进程编号          #将后台进程恢复至前台运行</li><li>ctrl + z 组合键      #挂起当前进程并放入后台</li><li>bg 进程编号          #激活后台被挂起进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[1] 20130</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看后台进程信息</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[1]+ 20130 运行中               <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#将后台进程放入前台运行</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">fg</span> 1</span><br><span class="line"><span class="built_in">sleep</span> 5m</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂起前台进程放入后台</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span></span><br><span class="line">[1]+  已停止               <span class="built_in">sleep</span> 5m</span><br><span class="line"></span><br><span class="line"><span class="comment">#激活后台的进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">bg</span> 1</span><br><span class="line">[1]+ <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[1]+ 20130 运行中               <span class="built_in">sleep</span> 5m &amp;</span><br></pre></td></tr></table></figure><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><ul><li>杀死进程的方式</li><li>ctrl + c 组合键结束当前命令程序</li><li>kill [选项…] PID<ul><li>常用选项：-l   #列出可用进程信号</li><li>常用信号：-1重启进程，-9强制杀死进程，-15正常杀死进程（默认信号无需指定）</li></ul></li><li>killall -9 进程名                    #强制杀死进程</li><li>killall -9 -u 用户名              #强制杀死该用户所有进程</li><li>pkill  -9  进程名                   #强制杀死进程<ul><li>常用选项：-t  终端号   #提出指定终端用户</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#结束前台正在运行的进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m</span><br><span class="line">^C</span><br><span class="line"></span><br><span class="line"><span class="comment">#启用进程放入后台</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[1] 21150</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[2] 21155</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[3] 21159</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line">[4] 21162</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看后台进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[1]  21150 运行中               <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[2]  21155 运行中               <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[3]- 21159 运行中               <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[4]+ 21162 运行中               <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#杀死后台指定的进程（按照PID）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">kill</span> 21150</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看后台进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[1]  21150 已终止               <span class="built_in">sleep</span> 5m</span><br><span class="line">[2]  21155 运行中               <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[3]- 21159 运行中               <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[4]+ 21162 运行中               <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">kill</span> 21155</span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[2]  21155 已终止               <span class="built_in">sleep</span> 6m</span><br><span class="line">[3]- 21159 运行中               <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[4]+ 21162 运行中               <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#强制杀死进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">kill</span> -9 21159</span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[3]- 21159 已杀死               <span class="built_in">sleep</span> 7m</span><br><span class="line">[4]+ 21162 运行中               <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 4m &amp;</span><br><span class="line">[5] 21402</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[6] 21406</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[7] 21409</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[8] 21412</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[4]  21162 运行中               <span class="built_in">sleep</span> 8m &amp;</span><br><span class="line">[5]  21402 运行中               <span class="built_in">sleep</span> 4m &amp;</span><br><span class="line">[6]  21406 运行中               <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[7]- 21409 运行中               <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[8]+ 21412 运行中               <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照进程名去杀</span></span><br><span class="line">[root@localhost ~]# killall <span class="built_in">sleep</span></span><br><span class="line">[4]   已终止               <span class="built_in">sleep</span> 8m</span><br><span class="line">[5]   已终止               <span class="built_in">sleep</span> 4m</span><br><span class="line">[6]   已终止               <span class="built_in">sleep</span> 5m</span><br><span class="line">[7]-  已终止               <span class="built_in">sleep</span> 6m</span><br><span class="line">[8]+  已终止               <span class="built_in">sleep</span> 7m</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动进程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[1] 21491</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[2] 21495</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line">[3] 21498</span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> -l</span><br><span class="line">[1]  21491 运行中               <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[2]- 21495 运行中               <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[3]+ 21498 运行中               <span class="built_in">sleep</span> 7m &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照进程名强制杀死进程</span></span><br><span class="line">[root@localhost ~]# killall -9 <span class="built_in">sleep</span></span><br><span class="line">[1]   已杀死               <span class="built_in">sleep</span> 5m</span><br><span class="line">[2]-  已杀死               <span class="built_in">sleep</span> 6m</span><br><span class="line">[3]+  已杀死               <span class="built_in">sleep</span> 7m</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">who</span></span><br><span class="line">root     pts/0        2021-04-24 14:06 (192.168.0.1)</span><br><span class="line">lisi     pts/1        2021-04-24 15:57 (192.168.0.1)</span><br><span class="line">root     pts/2        2021-04-24 16:29 (192.168.0.1)</span><br><span class="line">lisi     pts/3        2021-04-24 17:14 (192.168.0.1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#杀死指定用户的所有进程（讲用户提出系统）</span></span><br><span class="line">[root@localhost ~]# killall -9 -u lisi</span><br><span class="line">[root@localhost ~]# <span class="built_in">who</span></span><br><span class="line">root     pts/0        2021-04-24 14:06 (192.168.0.1)</span><br><span class="line">root     pts/2        2021-04-24 16:29 (192.168.0.1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#pkill命令演示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 4m &amp;</span><br><span class="line">[1] 21870</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[2] 21873</span><br><span class="line">[root@localhost ~]# <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line">[3] 21876</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">jobs</span> </span><br><span class="line">[1]   运行中               <span class="built_in">sleep</span> 4m &amp;</span><br><span class="line">[2]-  运行中               <span class="built_in">sleep</span> 5m &amp;</span><br><span class="line">[3]+  运行中               <span class="built_in">sleep</span> 6m &amp;</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# pkill <span class="built_in">sleep</span></span><br><span class="line">[1]   已终止               <span class="built_in">sleep</span> 4m</span><br><span class="line">[2]-  已终止               <span class="built_in">sleep</span> 5m</span><br><span class="line">[3]+  已终止               <span class="built_in">sleep</span> 6m</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">who</span></span><br><span class="line">root     pts/0        2021-04-24 14:06 (192.168.0.1)</span><br><span class="line">lisi     pts/1        2021-04-24 17:47 (192.168.0.1)</span><br><span class="line">root     pts/2        2021-04-24 16:29 (192.168.0.1)</span><br><span class="line">lisi     pts/3        2021-04-24 17:48 (192.168.0.1)</span><br><span class="line">[root@localhost ~]# pkill -9 -t pts/3</span><br></pre></td></tr></table></figure><h4 id="用户登录分析"><a href="#用户登录分析" class="headerlink" title="用户登录分析"></a>用户登录分析</h4><ul><li><p>users  who  w   #查看以登录的用户信息（详细度不同）</p></li><li><p>last   #显示登录成功的用户信息</p></li><li><p>lastb #显示登录失败的用户信息</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">users</span></span><br><span class="line">lisi root root</span><br><span class="line"><span class="comment">#root：以登录系统的用户名</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">who</span></span><br><span class="line">root     pts/0        2021-04-24 14:06 (192.168.0.1)</span><br><span class="line">lisi     pts/1        2021-04-24 17:47 (192.168.0.1)</span><br><span class="line">root     pts/2        2021-04-24 16:29 (192.168.0.1)</span><br><span class="line"><span class="comment">#第一列：以登录系统的用户名</span></span><br><span class="line"><span class="comment">#第二列：用户登录的终端编号</span></span><br><span class="line"><span class="comment">#第三列：登陆时间</span></span><br><span class="line"><span class="comment">#第四列：远程登录地址</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# w</span><br><span class="line"> 08:16:10 up 55 min,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    192.168.0.1      07:21    2.00s  0.10s  0.00s w</span><br><span class="line"><span class="comment">#第一行为top命令显示的第一行数据</span></span><br><span class="line"><span class="comment">#第二行每列含义如下：</span></span><br><span class="line">USER：以登录的用户名</span><br><span class="line">TTY：用户登录终端编号</span><br><span class="line">FROM：登录地址</span><br><span class="line">LOGIN@：登录时间</span><br><span class="line">IDLE：用户空闲时间，这是个计时器，一旦用户执行任何操作，该计时器便会被重置</span><br><span class="line">JCPU：该终端所有进程占用CPU处理时间，包括正在运行和后台作业占用时间。</span><br><span class="line">PCPU：进程执行以后消耗的CPU时间</span><br><span class="line">WHAT：当前正在执行的任务</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示登录成功用户</span></span><br><span class="line">[root@localhost ~]# last</span><br><span class="line">lisi     pts/1        192.168.0.1      Sat Apr 24 07:56 - 08:03  (00:07) </span><br><span class="line"><span class="comment">#第一列：用户名</span></span><br><span class="line"><span class="comment">#第二列：用户登录终端编号</span></span><br><span class="line"><span class="comment">#第三列：登录地址</span></span><br><span class="line"><span class="comment">#第四列：登录起使时间</span></span><br><span class="line"><span class="comment">#第五列：登录结束时间</span></span><br><span class="line"><span class="comment">#第六列：登录持续时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看最近2次登录系统成功的用户</span></span><br><span class="line">[root@localhost ~]# last -2</span><br><span class="line">lisi     pts/3        192.168.0.1      Sat Apr 24 17:48 - 17:50  (00:01)    </span><br><span class="line">lisi     pts/3        192.168.0.1      Sat Apr 24 17:47 - 17:48  (00:00)  </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看登录失败用户</span></span><br><span class="line">[root@localhost ~]# lastb</span><br><span class="line">lisi     ssh:notty    192.168.0.1      Sat Apr 24 08:52 - 08:52  (00:00) </span><br></pre></td></tr></table></figure><h4 id="Linux软件类型"><a href="#Linux软件类型" class="headerlink" title="Linux软件类型"></a>Linux软件类型</h4><ul><li>开源软件：软件源代码开放，供用户免费学习，允许用户二次开发，用户使用放心，后期开发者不维护，有人提我们维护！</li><li>闭源软件：软件源代码不公开发布，无法二次开发，后期开发者不维护对公司损失很大！</li></ul><h4 id="开源软件包类型"><a href="#开源软件包类型" class="headerlink" title="开源软件包类型"></a><strong>开源软件包类型</strong></h4><ul><li>源码包</li><li>二进制包（RPM包）</li></ul><h4 id="源码包特点"><a href="#源码包特点" class="headerlink" title="源码包特点"></a>源码包特点</h4><ul><li><p>源码包优点：可以看到软件源代码，安装灵活，可以自定义安装路径与安装功能，卸载方便</p></li><li><p>源码包缺点：安装过程麻烦，需要用户手动编译，需要手动解决软件包的依赖关系</p></li></ul><h4 id="RPM包特点"><a href="#RPM包特点" class="headerlink" title="RPM包特点"></a>RPM包特点</h4><ul><li><p>RPM包优点：由于已经提前被编译过，所以安装简单，安装速度快</p></li><li><p>RPM包缺点：所有功能用户无法自定义，安装没有源码包灵活，不可以看到软件源代码</p></li><li><p>RPM包命名规则，如：vsftpd-3.0.2-25.el7.x86_64.rpm</p><ul><li>vsftpd      #软件包名称</li><li>3.0.2        #软件包版本，主版本.次版本.修改版本</li><li>25            #补丁次数</li><li>el7           #适合的系统（el7表示RHEL7）</li><li>x86_64    #适合的CPU架构</li><li>rpm         #rpm包扩展名</li></ul></li></ul><h4 id="RPM管理软件包"><a href="#RPM管理软件包" class="headerlink" title="RPM管理软件包"></a>RPM管理软件包</h4><ul><li><p>RPM命令管理rpm软件包，需要手动解决软件包之间依赖关系</p><ul><li>树形依赖：a–&gt;b–&gt;c–d</li><li>环形依赖：a–&gt;b–&gt;c–a</li><li>模块依赖：需要模块文件支持，模块查询地址：<a href="http://www.rpmfind.net/">www.rpmfind.net</a></li></ul></li><li><p>命令格式：rpm  选项…  程序名&#x2F;软件包全名</p></li><li><p>常用选项：</p><ul><li>-q         #仅查询软件是否安装</li><li>-qa       #列出所有已经安装在系统中的所有软件，可配合grep过滤指定的软件包</li><li>-qi        #列出软件包详细信息，包含版本与官网地址</li><li>-qf       #后边接文件名，查询配置文件由哪个软件包产生</li><li>-ql        #后边接包名，列出与该软件包相关所有文件与目录的存放位置</li><li>-ivh      #i安装，v显示详细信息，h显示软件安装进度</li><li>-Uvh    #升级安装软件包（升级时要做好相关配置文件的备份）</li><li>-e          #卸载软件包</li><li>–nodesps #卸载软件包时忽略依赖关系</li><li>–import   #导入红帽签名文件</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#挂载iso镜像文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /mnt/centos</span><br><span class="line">[root@localhost ~]# mount /dev/cdrom  /mnt/centos/</span><br><span class="line"></span><br><span class="line"><span class="comment">#实现永久挂载，查看iso镜像文件系统类型</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -hT</span><br><span class="line">[root@localhost ~]# vim /etc/fstab</span><br><span class="line">...</span><br><span class="line">/dev/cdrom /mnt/centos iso9660 defaults 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载</span></span><br><span class="line">[root@localhost ~]# mount -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询软件包是否安装</span></span><br><span class="line">[root@localhost centos]# rpm -q vsftpd</span><br><span class="line">未安装软件包 vsftpd </span><br><span class="line"></span><br><span class="line"><span class="comment">#安装vsftpd软件包</span></span><br><span class="line">[root@localhost centos]# rpm -i Packages/vsftpd-3.0.2-25.el7.x86_64.rpm </span><br><span class="line"></span><br><span class="line"><span class="comment">#查询系统中以安装的所有软件</span></span><br><span class="line">[root@localhost centos]# rpm -qa</span><br><span class="line">[root@localhost centos]# rpm -qa | grep vsftpd</span><br><span class="line">vsftpd-3.0.2-25.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询软件包详细的信息</span></span><br><span class="line">[root@localhost centos]# rpm -qi vsftpd</span><br><span class="line">Name        : vsftpd    <span class="comment">#软件包名</span></span><br><span class="line">Version     : 3.0.2     <span class="comment">#版本</span></span><br><span class="line">Release     : 25.el7    <span class="comment">#适合安装的系统版本</span></span><br><span class="line">Architecture: x86_64    <span class="comment">#适合安装的CPU架构</span></span><br><span class="line">Install Date: 2021年05月04日 星期二 14时47分06秒   <span class="comment">#安装时间</span></span><br><span class="line">Group       : System Environment/Daemons        <span class="comment">#软件包属于哪个群组</span></span><br><span class="line">Size        : 361335      <span class="comment">#软件包大小</span></span><br><span class="line">License     : GPLv2 with exceptions</span><br><span class="line">Signature   : RSA/SHA256, 2018年11月12日 星期一 22时48分54秒, Key ID 24c6a8a7f4a80eb5</span><br><span class="line">Source RPM  : vsftpd-3.0.2-25.el7.src.rpm</span><br><span class="line">Build Date  : 2018年10月31日 星期三 03时45分10秒</span><br><span class="line">Build Host  : x86-01.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor      : CentOS</span><br><span class="line">URL         : https://security.appspot.com/vsftpd.html   <span class="comment">#软件包官网地址</span></span><br><span class="line">Summary     : Very Secure Ftp Daemon</span><br><span class="line">Description :      <span class="comment">#描述信息</span></span><br><span class="line">vsftpd is a Very Secure FTP daemon. It was written completely from</span><br><span class="line">scratch.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost centos]# <span class="built_in">which</span> <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line">/usr/sbin/ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询文件由哪个软件包产生</span></span><br><span class="line">[root@localhost centos]# rpm -qf /usr/bin/ls</span><br><span class="line">coreutils-8.22-23.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# <span class="built_in">which</span> vim</span><br><span class="line">/usr/bin/vim</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qf /usr/bin/vim</span><br><span class="line">vim-enhanced-7.4.160-5.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qi vim-enhanced</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询软件包自带的文件与目录安装路径</span></span><br><span class="line">[root@localhost centos]# rpm -ql vsftpd</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qf /usr/bin/vim</span><br><span class="line">vim-enhanced-7.4.160-5.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -ql vim-enhanced</span><br><span class="line">/etc/profile.d/vim.csh</span><br><span class="line">/etc/profile.d/vim.sh</span><br><span class="line">/usr/bin/rvim</span><br><span class="line">/usr/bin/vim</span><br><span class="line">/usr/bin/vimdiff</span><br><span class="line">/usr/bin/vimtutor</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -q vsftpd</span><br><span class="line">vsftpd-3.0.2-25.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载软件包</span></span><br><span class="line">[root@localhost centos]# rpm -e vsftpd</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -q vsftpd</span><br><span class="line">未安装软件包 vsftpd </span><br><span class="line"></span><br><span class="line"><span class="comment">#安装vsftpd软件包</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/vsftpd-3.0.2-25.el7.x86_64.rpm </span><br><span class="line">警告：Packages/vsftpd-3.0.2-25.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID f4a80eb5: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:vsftpd-3.0.2-25.el7              <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -q vsftpd</span><br><span class="line">vsftpd-3.0.2-25.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#升级安装软件包</span></span><br><span class="line">[root@localhost centos]# rpm -Uvh Packages/vsftpd-3.0.2-25.el7.x86_64.rpm </span><br><span class="line">警告：Packages/vsftpd-3.0.2-25.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID f4a80eb5: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">软件包 vsftpd-3.0.2-25.el7.x86_64 已经安装</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入红帽签名文件</span></span><br><span class="line">[root@localhost centos]# rpm --import RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装软件包，查看是否还有警告信息</span></span><br><span class="line">[root@localhost centos]# rpm -q vsftpd</span><br><span class="line">vsftpd-3.0.2-25.el7.x86_64</span><br><span class="line">[root@localhost centos]# rpm -e vsftpd</span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/vsftpd-3.0.2-25.el7.x86_64.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:vsftpd-3.0.2-25.el7              <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装httpd软件包</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-(tab键)</span><br><span class="line">httpd-2.4.6-88.el7.centos.x86_64.rpm         httpd-manual-2.4.6-88.el7.centos.noarch.rpm</span><br><span class="line">httpd-devel-2.4.6-88.el7.centos.x86_64.rpm   httpd-tools-2.4.6-88.el7.centos.x86_64.rpm</span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-2.4.6-88.el7.centos.x86_64.rpm </span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">/etc/mime.types 被 httpd-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line">httpd-tools = 2.4.6-88.el7.centos 被 httpd-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line">libapr-1.so.0()(64bit) 被 httpd-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line">libaprutil-1.so.0()(64bit) 被 httpd-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line">[root@localhost centos]# <span class="built_in">ls</span> /etc/mime.types</span><br><span class="line"><span class="built_in">ls</span>: 无法访问/etc/mime.types: 没有那个文件或目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决依赖关系</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/mailcap-2.1.41-2.el7.noarch.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:mailcap-2.1.41-2.el7             <span class="comment">################################# [100%]</span></span><br><span class="line">[root@localhost centos]# <span class="built_in">ls</span> /etc/mime.types</span><br><span class="line">/etc/mime.types</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决依赖关系</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-tools-2.4.6-88.el7.centos.x86_64.rpm </span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">libapr-1.so.0()(64bit) 被 httpd-tools-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line">libaprutil-1.so.0()(64bit) 被 httpd-tools-2.4.6-88.el7.centos.x86_64 需要</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决依赖关系（www.rpmfind.net官网查询提供libapr-1.so.0模块文件的软件包）</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/apr-(tab键)</span><br><span class="line">apr-1.4.8-3.el7_4.1.x86_64.rpm         apr-util-1.5.2-6.el7.x86_64.rpm        </span><br><span class="line">apr-devel-1.4.8-3.el7_4.1.x86_64.rpm   apr-util-devel-1.5.2-6.el7.x86_64.rpm  </span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/apr-1.4.8-3.el7_4.1.x86_64.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:apr-1.4.8-3.el7_4.1              <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解决依赖关系（www.rpmfind.net官网查询提供libaprutil-1.so.0模块文件的软件包）</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/apr-util-(tab键)</span><br><span class="line">apr-util-1.5.2-6.el7.x86_64.rpm        apr-util-devel-1.5.2-6.el7.x86_64.rpm  </span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/apr-util-</span><br><span class="line">apr-util-1.5.2-6.el7.x86_64.rpm        apr-util-devel-1.5.2-6.el7.x86_64.rpm  </span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/apr-util-1.5.2-6.el7.x86_64.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:apr-util-1.5.2-6.el7             <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖关系</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-tools-2.4.6-88.el7.centos.x86_64.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:httpd-tools-2.4.6-88.el7.centos  <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装httpd主包</span></span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-(tab键)</span><br><span class="line">httpd-2.4.6-88.el7.centos.x86_64.rpm         httpd-manual-2.4.6-88.el7.centos.noarch.rpm</span><br><span class="line">httpd-devel-2.4.6-88.el7.centos.x86_64.rpm   httpd-tools-2.4.6-88.el7.centos.x86_64.rpm</span><br><span class="line">[root@localhost centos]# rpm -ivh Packages/httpd-2.4.6-88.el7.centos.x86_64.rpm </span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:httpd-2.4.6-88.el7.centos        <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="yum软件包管理"><a href="#yum软件包管理" class="headerlink" title="yum软件包管理"></a>yum软件包管理</h4><ul><li><p>yum（软件仓库）：提供众多软件包的仓库，并自动解决软件包之间复杂依赖关系</p></li><li><p>yum常用命令：</p><ul><li>yum  repolist                        #列出仓库可用软件包</li><li>yum  list  软件包名               #查看系统中提供的软件包（包含未安装的软件包）</li><li>yum  install  软件包名          #安装软件包，-y自动回答yes</li><li>yum  update  软件包名       #升级软件包版本</li><li>yum  remove  软件包名      #卸载软件包</li><li>yum clean all                       #清除仓库缓存</li><li>yum  search  命令               #搜索该命令由哪个软件包产生（主要用于系统未安装的命令）</li><li>yum makecache                 #生成缓存</li></ul></li><li><p>本地yum源配置（本地软件仓库）</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/yum.repos.d/local.repo </span><br><span class="line">[<span class="built_in">local</span>]               <span class="comment">#仓库名称，名称自定义，但具有唯一性</span></span><br><span class="line">name=local_centos     <span class="comment">#仓库描述，（类似于仓库解释），描述信息自定义，不具备唯一性</span></span><br><span class="line">baseurl=file:///mnt/centos   <span class="comment">#指定软件仓库地址，file://用于指定本地软件包存放位置</span></span><br><span class="line">enabled=1    <span class="comment">#软件仓库是否启动，1启动，0不启动</span></span><br><span class="line">gpgcheck=0   <span class="comment">#是否检测软件包签名，0不检测，1检测</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检测仓库可用性</span></span><br><span class="line">[root@localhost centos]# yum repolist</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">    </span><br><span class="line">源标识        源名称            状态</span><br><span class="line"><span class="built_in">local</span>       local_centos      4,021</span><br><span class="line">repolist: 4,021</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找指定的软件包</span></span><br><span class="line">[root@localhost centos]# yum list gcc</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装软件包</span></span><br><span class="line">[root@localhost centos]# yum install gcc</span><br><span class="line">...</span><br><span class="line">Is this ok [y/d/N]: y (y安装/d下载到本地不安装/N不安装)</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -q gcc</span><br><span class="line">gcc-4.8.5-36.el7.x86_64</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qi gcc</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -ql gcc</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装软件包并自动回答yes</span></span><br><span class="line">[root@localhost centos]# yum -y install  gcc-c++ </span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -q gcc</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qi gcc</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -ql gcc</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# rpm -qf /usr/bin/ls</span><br><span class="line"></span><br><span class="line">[root@localhost centos]# yum provides /usr/bin/ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载挂载点</span></span><br><span class="line">[root@localhost ~]# umount /mnt/centos/</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> /mnt/centos/</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看仓库可用性</span></span><br><span class="line">[root@localhost ~]# yum repolist</span><br><span class="line">源标识          源名称                             状态</span><br><span class="line"><span class="built_in">local</span>          local_centos                     4,021</span><br><span class="line">repolist: 4,021</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# rpm -e vsftpd</span><br><span class="line">root@localhost ~]# yum -y install vsftpd</span><br><span class="line">Error downloading packages:</span><br><span class="line">  vsftpd-3.0.2-25.el7.x86_64: [Errno 256] No more mirrors to try.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# yum clean all</span><br><span class="line">[root@localhost ~]# yum repolist</span><br><span class="line">源标识      源名称                                  状态</span><br><span class="line"><span class="built_in">local</span>      local_centos                            0</span><br><span class="line">repolist: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">[root@localhost ~]# mount -a</span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br></pre></td></tr></table></figure><ul><li>网络yum源配置（网络软件仓库，配置阿里开源软件仓库）</li><li><a href="https://developer.aliyun.com/special/mirrors/notice">https://developer.aliyun.com/special/mirrors/notice</a>  阿里软件仓库</li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/centos/7/os/x86_64/">https://mirrors.tuna.tsinghua.edu.cn/centos/7/os/x86_64/</a>  清华大学软件仓库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载wget工具</span></span><br><span class="line">[root@localhost ~]# yum -y install wget</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载阿里Base源（基本软件仓库，解决rpm软件的依赖关系）</span></span><br><span class="line">[root@localhost ~]#  wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载阿里epel源（额外软件仓库，包含许多基本软件仓库没有的软件包）</span></span><br><span class="line">[root@localhost ~]#  wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# vim /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority   <span class="comment">#故障转移方法，默认优先</span></span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置清华大学开源镜象站</span></span><br><span class="line">[root@localhost ~]# vim /etc/yum.repos.d/local.repo </span><br><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=local_centos</span><br><span class="line">baseurl=file:///mnt/centos/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[tuna.tsinghua.edu.cn]</span><br><span class="line">name=tuna.tsinghua.edu.cn</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/7/os/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成yum仓库缓存提高软件包下载速度</span></span><br><span class="line">[root@localhost ~]# yum makecache</span><br><span class="line">...</span><br><span class="line">元数据缓存已建立</span><br></pre></td></tr></table></figure><h4 id="设置yum源优先级"><a href="#设置yum源优先级" class="headerlink" title="设置yum源优先级"></a>设置yum源优先级</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装yum-priorities插件</span></span><br><span class="line">[root@localhost ~]# yum -y install yum-priorities</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置本地yum为最高优先级</span></span><br><span class="line">[root@localhost ~]# vim /etc/yum.repos.d/local.repo</span><br><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=local_centos</span><br><span class="line">baseurl=file:///mnt/centos</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">priority=1  <span class="comment">#优先级为1-99之间，数字越小越优先</span></span><br></pre></td></tr></table></figure><h4 id="源码包安装方式"><a href="#源码包安装方式" class="headerlink" title="源码包安装方式"></a>源码包安装方式</h4><p>源码包安装步骤：</p><ul><li>官网下载源码包</li><li>系统安装源码包依赖</li><li>解压源码包&amp;&amp;进入源码包路径</li><li>configure检测系统环境&amp;&amp;指定安装路径与功能</li><li>make编译，将源代码转换成二进制</li><li>make     install 安装软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#从官网下载源码包</span></span><br><span class="line">http://nginx.org/</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装源码包依赖包</span></span><br><span class="line">[root@localhost ~]# yum -y install gcc pcre-devel openssl-devel zlib-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压源码包并进入源码包路径</span></span><br><span class="line">[root@localhost ~]# tar -xf nginx-1.20.0.tar.gz </span><br><span class="line">[root@localhost ~]# <span class="built_in">cd</span> nginx-1.20.0/</span><br><span class="line">[root@localhost nginx-1.20.0]# <span class="built_in">ls</span></span><br><span class="line">auto  CHANGES  CHANGES.ru  conf  configure  contrib  html  LICENSE  man  README  src</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用configure程序检查系统环境并指定安装参数</span></span><br><span class="line">[root@localhost nginx-1.20.0]# ./configure --with-http_ssl_module  --with-file-aio  --with-http_realip_module</span><br><span class="line">  </span><br><span class="line">  nginx path prefix: <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line">  nginx binary file: <span class="string">&quot;/usr/local/nginx/sbin/nginx&quot;</span></span><br><span class="line">  nginx modules path: <span class="string">&quot;/usr/local/nginx/modules&quot;</span></span><br><span class="line">  nginx configuration prefix: <span class="string">&quot;/usr/local/nginx/conf&quot;</span></span><br><span class="line">  nginx configuration file: <span class="string">&quot;/usr/local/nginx/conf/nginx.conf&quot;</span></span><br><span class="line">  nginx pid file: <span class="string">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">&quot;/usr/local/nginx/logs/error.log&quot;</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">&quot;/usr/local/nginx/logs/access.log&quot;</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">&quot;client_body_temp&quot;</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">&quot;proxy_temp&quot;</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">&quot;fastcgi_temp&quot;</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">&quot;uwsgi_temp&quot;</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">&quot;scgi_temp&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#make将源码包转换成二进制</span></span><br><span class="line">[root@localhost nginx-1.20.0]# make</span><br><span class="line"></span><br><span class="line"><span class="comment">#make install安装源码包</span></span><br><span class="line">[root@localhost nginx-1.20.0]# make install</span><br><span class="line"></span><br><span class="line">[root@localhost nginx-1.20.0]# <span class="built_in">cd</span> /usr/local/nginx/</span><br><span class="line">[root@localhost nginx]# <span class="built_in">ls</span></span><br><span class="line">conf  html  logs  sbin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="源码包管理方式"><a href="#源码包管理方式" class="headerlink" title="源码包管理方式"></a>源码包管理方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动nginx服务</span></span><br><span class="line">[root@localhost nginx]# sbin/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#netstat|ss命令用于查看系统中启动的端口信息</span></span><br><span class="line">-a显示所有端口信息</span><br><span class="line">-n以数字格式显示端口号</span><br><span class="line">-t显示TCP连接的端口</span><br><span class="line">-u显示UDP连接的端口</span><br><span class="line">-l显示服务正在监听的端口信息</span><br><span class="line">-p显示监听端口的服务名称是什么（也就是程序名）</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看nginx服务端口信息</span></span><br><span class="line">[root@localhost ~]# ss -anptul | grep nginx</span><br><span class="line">tcp    LISTEN     0      128       *:80  <span class="comment">#Nginx服务默认通过TCP 80 端口监听客户端请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统所有服务占用的端口信息</span></span><br><span class="line">[root@localhost nginx]# ss -ntlp </span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# ss -anptul | grep sshd</span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# ss -anptul | grep vsftpd</span><br></pre></td></tr></table></figure><h4 id="systemd管理服务"><a href="#systemd管理服务" class="headerlink" title="systemd管理服务"></a>systemd管理服务</h4><ul><li><p>systemd是内核加载的第一个进程（PID&#x3D;1），systemd负责整个Linux系统的运行与服务控制，systemd为用户提供systemctl命令来管理RPM包的服务，如：启动服务、重启服务、关闭服务、查看服务状态，服务随机自启</p></li><li><p>服务的启动有两个阶段，一是系统开机时随着系统的启动而启动（随机自启），二是系统启动以后用户手动将服务启动</p></li><li><p>常用命令：</p><ul><li>systemctl start      程序名        #启动服务</li><li>systemctl restart  程序名         #重启服务</li><li>systemctl stop      程序名         #停止服务</li><li>systemctl enable  程序名         #设置服务随机自启</li><li>systemctl disable 程序名         #设置服务不随机自启</li><li>systemctl status   程序名         #查看服务状态</li><li>systemctl is-enabled  程序名  #查看服务是否被设置随机自启</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]# yum -y install vsftpd</span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# rpm -ql vsftpd</span><br><span class="line">...</span><br><span class="line">/usr/sbin/vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动vsftpd服务</span></span><br><span class="line">[root@localhost nginx]# systemctl start vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看服务运行状态</span></span><br><span class="line">[root@localhost nginx]# systemctl status vsftpd</span><br><span class="line">● vsftpd.service - Vsftpd ftp daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 二 2021-05-04 17:58:38 CST; 1min 7s ago</span><br><span class="line">  Process: 14028 ExecStart=/usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 14030 (vsftpd)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看端口信息</span></span><br><span class="line">[root@localhost nginx]# ss -anptul | grep vsftpd</span><br><span class="line">tcp  LISTEN  0  32  :::21    :::*     <span class="built_in">users</span>:((&quot;vsftpd&quot;,pid=<span class="number">14030</span>,fd=<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务（用于对配置发生修改且立即生效时使用）</span></span><br><span class="line">[root@localhost nginx]# systemctl restart vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止服务</span></span><br><span class="line">[root@localhost nginx]# systemctl stop vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务并设置服务随机自启</span></span><br><span class="line">[root@localhost nginx]# systemctl start vsftpd</span><br><span class="line">[root@localhost nginx]# systemctl <span class="built_in">enable</span> vsftpd</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/vsftpd.service to /usr/lib/systemd/system/vsftpd.service.</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看服务是否被设置随机自启</span></span><br><span class="line">[root@localhost nginx]# systemctl is-enabled vsftpd</span><br><span class="line">enabled  <span class="comment">#随机自启</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置服务不随机自启</span></span><br><span class="line">[root@localhost nginx]# systemctl <span class="built_in">disable</span> vsftpd</span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/vsftpd.service.</span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# systemctl is-enabled vsftpd</span><br><span class="line">disabled  <span class="comment">#不随机自启</span></span><br><span class="line"></span><br><span class="line">[root@localhost nginx]# systemctl is-enabled sshd</span><br><span class="line">enabled</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 编程从入门到实践</title>
      <link href="/2024/10/18/Python%20%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/"/>
      <url>/2024/10/18/Python%20%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Jetbrains系列软件常用快捷键"><a href="#一、Jetbrains系列软件常用快捷键" class="headerlink" title="一、Jetbrains系列软件常用快捷键"></a>一、Jetbrains系列软件常用快捷键</h2><p>代码的格式化：<code>Ctrl+Alt+L</code><br>调出快速搜索框：<code>两次Shift</code><br>打开的文件中查找：<code>Ctrl+F</code><br>全局查找快捷键默认：<code>Ctrl+Shift+F</code> （如果不可以就是与搜狗输入法的冲突了）<br>Getter和Setter封装：<code>Alt+Insert</code><br>自动补全代码：<code>Alt+/</code><br>注释代码：<code>Ctrl+/</code><br>撤销：<code>Ctrl+Z</code><br>撤销返回：<code>Ctrl+Shift+Z</code><br>复制本行代码到下一行：<code>Ctrl+D</code><br>删除光标所在行的代码：<code>Ctrl+Y</code><br>自动注释代码：<code>Ctrl+Shift+/</code><br>万能的快捷键：<code>Alt+Enter</code><br>测试接口的类：在要测试的上<code>Ctrl + shift + t</code><br>快速展开&#x2F;折叠全部方法：<code>Ctrl + Shift + &quot; +/- &quot;</code><br>向上插入一行空格：<code>CTRL+Enter</code><br>向下插入一行空格：<code>Shift+Enter</code><br>上端或下端插入一空行：<code>shift+Alt+方向键</code><br>快速给代码加上组合语句try&#x2F;catch等：<code>CTRL+ALT+T</code><br>多行相同的代码一起修改或者删除：<code>Ctrl+Shift+Alt 或者 按住鼠标的滚轮向下拉 也可！</code><br>运行编写的py文件：<code>Ctrl+Shift+F10</code></p><h2 id="二、《Python-编程从入门到实践》P1-P200-学习总结"><a href="#二、《Python-编程从入门到实践》P1-P200-学习总结" class="headerlink" title="二、《Python 编程从入门到实践》P1~P200 学习总结"></a>二、《Python 编程从入门到实践》P1~P200 学习总结</h2><h3 id="1-基本数据类型的运算"><a href="#1-基本数据类型的运算" class="headerlink" title="1.基本数据类型的运算"></a>1.基本数据类型的运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="built_in">print</span>(<span class="string">&quot;Python针对于字符串的大小写和去除空白&quot;</span>)</span><br><span class="line">message = <span class="string">&quot;\tpython xue xi\t&quot;</span></span><br><span class="line"><span class="comment"># 每个单词的首字母大写的写法</span></span><br><span class="line"><span class="built_in">print</span>(message.title())</span><br><span class="line"><span class="comment"># 单词全部大写的写法</span></span><br><span class="line"><span class="built_in">print</span>(message.upper())  </span><br><span class="line"><span class="comment">#  单词全部小写的写法</span></span><br><span class="line"><span class="built_in">print</span>(message.lower())  </span><br><span class="line"><span class="comment"># 去除字符串前面的空白</span></span><br><span class="line"><span class="built_in">print</span>(message.lstrip())</span><br><span class="line"><span class="comment"># 去除字符串后面的空白</span></span><br><span class="line"><span class="built_in">print</span>(message.rstrip())</span><br><span class="line"><span class="comment"># 去除字符串两边的空白</span></span><br><span class="line"><span class="built_in">print</span>(message.strip())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nPython的加减乘除混合运算和幂运算&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> + <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> - <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> / <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> ** <span class="number">2</span> + <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0.1</span> + <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0.1</span> + <span class="number">0.2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0.1</span> * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>((<span class="number">1</span> + <span class="number">2</span> - <span class="number">1</span>) * <span class="number">4</span> / <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n使用函数str()避免类型的错误&quot;</span>)</span><br><span class="line">age = <span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我今年的年龄是&quot;</span> + <span class="built_in">str</span>(age) + <span class="string">&quot;岁\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Python的列表和访问元素和元素的大小写以及去除空格&quot;</span>)</span><br><span class="line">shenghuo = [<span class="string">&quot;chifan&quot;</span>, <span class="string">&quot;xuexi&quot;</span>, <span class="string">&quot;shuijiao&quot;</span>, <span class="string">&quot; shangban&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(shenghuo)</span><br><span class="line"><span class="built_in">print</span>(shenghuo[<span class="number">0</span>].title())  <span class="comment">#首字母大写</span></span><br><span class="line"><span class="built_in">print</span>(shenghuo[<span class="number">1</span>].upper())        <span class="comment">#全部字母大写</span></span><br><span class="line"><span class="built_in">print</span>(shenghuo[<span class="number">2</span>].lower())        <span class="comment">#全部字母小写</span></span><br><span class="line"><span class="built_in">print</span>(shenghuo[<span class="number">3</span>].lstrip())        <span class="comment">#去除字符串前面的空白</span></span><br><span class="line"><span class="comment"># 访问列表的元素于去除空格和拼接字符的混合使用</span></span><br><span class="line"><span class="built_in">print</span>(shenghuo[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(shenghuo[-<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;一天中要先&quot;</span> + shenghuo[<span class="number">0</span>] + <span class="string">&quot;然后再&quot;</span> + shenghuo[-<span class="number">1</span>].lstrip() + <span class="string">&quot;继续再&quot;</span> + shenghuo[<span class="number">1</span>] + <span class="string">&quot;最后再&quot;</span> + shenghuo[-<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 添加 删除 元素</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">che[<span class="number">0</span>] = <span class="string">&quot;kache&quot;</span></span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">che.append(<span class="string">&quot;danche&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义一个空列表</span></span><br><span class="line">aihao = []</span><br><span class="line">aihao.append(<span class="string">&quot;chifan&quot;</span>)</span><br><span class="line">aihao.append(<span class="string">&quot;shuijiao&quot;</span>)</span><br><span class="line">aihao.append(<span class="string">&quot;dadoudou&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(aihao)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在列表中插入元素</span></span><br><span class="line">aihao.insert(<span class="number">1</span>, <span class="string">&quot;xuexi&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(aihao)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line"><span class="keyword">del</span> aihao[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(aihao)</span><br><span class="line"><span class="keyword">del</span> aihao[-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(aihao)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pop删除列表中最后元素并使用删除的最后元素</span></span><br><span class="line">shanzuihou = aihao.pop()</span><br><span class="line"><span class="built_in">print</span>(shanzuihou)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;现在我唯一的爱好是&quot;</span> + shanzuihou.title())</span><br><span class="line">shanchu = aihao.pop(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(shanchu)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我每天都要&quot;</span> + shanchu.title())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据值移除元素</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line">che.remove(<span class="string">&quot;huoche&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line">che.remove(<span class="string">&quot;motuo&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组织列表 sort() 永久性排序 abcde正向或逆向顺序排序</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="comment"># 正向的排序</span></span><br><span class="line">che.sort()</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 反向的排序</span></span><br><span class="line">che.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组织列表 sorted() 临时性排序  abcde正向或逆向顺序排序</span></span><br><span class="line"><span class="comment"># 临时正向排序</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(che))</span><br><span class="line"><span class="comment"># 临时反向排序</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(che, reverse=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 倒着打印列表  永久性的修改顺序 也可以随时改回来</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="comment"># 倒着打印</span></span><br><span class="line">che.reverse()</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 再次倒着改回</span></span><br><span class="line">che.reverse()</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认列表的长度 结果为4</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(che))</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环遍历整个列表   for 变量名 in 遍历的列表变量名:</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> che1 <span class="keyword">in</span> che:</span><br><span class="line">    <span class="built_in">print</span>(che1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在for循环中执行更多的操作 Python 对于缩进是极为的严格</span></span><br><span class="line"><span class="keyword">for</span> che2 <span class="keyword">in</span> che:</span><br><span class="line">    <span class="built_in">print</span>(che2.title() + <span class="string">&#x27;都是交通工具！&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;出门的时候都可以使用！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接的在for循环中创建打印列表</span></span><br><span class="line"><span class="keyword">for</span> wenzi <span class="keyword">in</span> [<span class="string">&quot;你好&quot;</span>, <span class="string">&quot;我也好&quot;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(wenzi)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数字列表</span></span><br><span class="line"><span class="keyword">for</span> shuzi <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(shuzi)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将1-4 输出为一个数列表</span></span><br><span class="line">number = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(number)</span><br><span class="line"><span class="comment"># 将numer中的列表通过for循环遍历出来</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> number:</span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印10以内的偶数 从第一个数 2开始不断的加2</span></span><br><span class="line">oushu = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(oushu)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-10每个整数的平方组成一个列表</span></span><br><span class="line">liebiaos = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    liebiaos.append(value ** <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(liebiaos)</span><br><span class="line"><span class="built_in">print</span>(liebiaos[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对数字列表进行简单的统计 最大值，最小值，求和</span></span><br><span class="line">number = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(number))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(number))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>(number))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对数字列表解析 列表中每个数的平方赋值给message</span></span><br><span class="line">message = [value ** <span class="number">3</span> <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表的一部分 切片</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(che[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(che[<span class="number">1</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(che[:<span class="number">4</span>])  <span class="comment"># 没有指定一个开头的索引，默认从0开始</span></span><br><span class="line"><span class="built_in">print</span>(che[<span class="number">0</span>:])  <span class="comment"># 没有指定一个结尾的索引，默认到最后结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环遍历切片 并让单词的首字母大写</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> che3 <span class="keyword">in</span> che[:<span class="number">2</span>]:</span><br><span class="line">    <span class="built_in">print</span>(che3.title())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制列表  以及验证列表是两个列表</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line">gongju = che[:]</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="built_in">print</span>(gongju)</span><br><span class="line"><span class="comment"># 验证复制的列表是两个列表</span></span><br><span class="line">che.append(<span class="string">&quot;kache&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line">gongju.append(<span class="string">&quot;daba&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongju)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 元组：Python将不能修改的值称为不可变的，而不可变的列表被称为元组！ 不能修改的是元素，而变量是可以修改的</span></span><br><span class="line"><span class="comment"># 定义元组  遍历元组中的所有的值</span></span><br><span class="line">yuanzu = (<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(yuanzu[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(yuanzu[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># for遍历元组的所有值</span></span><br><span class="line">yuanzu = (<span class="number">100</span>, <span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for修改元组变量</span></span><br><span class="line">yuanzu = (<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br><span class="line">yuanzu = (<span class="number">200</span>, <span class="number">300</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br><span class="line"></span><br><span class="line"><span class="comment"># if语句的使用 不是根据条件顺序输出，而是根据列表的排列顺序和条件输出</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> che1 <span class="keyword">in</span> che:</span><br><span class="line">    <span class="keyword">if</span> che1 == <span class="string">&#x27;qiche&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(che1.upper())  <span class="comment"># 全部大写  QICHE</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(che1.title())  <span class="comment"># 首字母大写   Motuo Zixingche Huoche</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查特定值是否包含在列表中 或者 是否不包含在列表中</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line">baohan = <span class="string">&#x27;huoche1&#x27;</span></span><br><span class="line"><span class="keyword">if</span> baohan <span class="keyword">in</span> che:</span><br><span class="line">    <span class="built_in">print</span>(baohan + <span class="string">&#x27;包含在列表中&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>((baohan + <span class="string">&quot;不包含在列表中&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> baohan <span class="keyword">not</span> <span class="keyword">in</span> che:</span><br><span class="line">    <span class="built_in">print</span>(baohan.title() + <span class="string">&#x27;不包含在列表中&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单的条件判断语句的使用 if if-else if_elif-else</span></span><br><span class="line">a = <span class="number">18</span></span><br><span class="line"><span class="keyword">if</span> a &gt; <span class="number">17</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值大于17&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> a &gt; <span class="number">19</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值大于19&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值小于19&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> a &gt; <span class="number">19</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值大于19&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> a == <span class="number">18</span>:  <span class="comment"># Java中的 else if 在Python 中就是elif</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值是18&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a的值小于19&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-Python之禅"><a href="#2-Python之禅" class="headerlink" title="2.Python之禅"></a>2.Python之禅</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码</span><br><span class="line"><span class="keyword">import</span> this</span><br></pre></td></tr></table></figure><p><img src="https://attach.52pojie.cn/forum/202012/26/131052z1jrwujaou7fjzw7.png" alt="img"></p><h3 id="3-Python关键字"><a href="#3-Python关键字" class="headerlink" title="3.Python关键字"></a>3.Python关键字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 输出Python 中的关键字</span></span><br><span class="line"><span class="comment"># [&#x27;False&#x27;, &#x27;None&#x27;, &#x27;True&#x27;, &#x27;and&#x27;, &#x27;as&#x27;, &#x27;assert&#x27;, &#x27;break&#x27;, &#x27;class&#x27;, &#x27;continue&#x27;, &#x27;def&#x27;, &#x27;del&#x27;,</span></span><br><span class="line"><span class="comment"># &#x27;elif&#x27;, &#x27;else&#x27;, &#x27;except&#x27;, &#x27;finally&#x27;, &#x27;for&#x27;, &#x27;from&#x27;, &#x27;global&#x27;, &#x27;if&#x27;, &#x27;import&#x27;, &#x27;in&#x27;, &#x27;is&#x27;, &#x27;lambda&#x27;,</span></span><br><span class="line"><span class="comment"># &#x27;nonlocal&#x27;, &#x27;not&#x27;, &#x27;or&#x27;, &#x27;pass&#x27;, &#x27;raise&#x27;, &#x27;return&#x27;, &#x27;try&#x27;, &#x27;while&#x27;, &#x27;with&#x27;, &#x27;yield&#x27;]</span></span><br><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="built_in">print</span>(keyword.kwlist)</span><br></pre></td></tr></table></figure><h3 id="4-Python-区别"><a href="#4-Python-区别" class="headerlink" title="4.Python ()[]{}区别"></a>4.Python ()[]{}区别</h3><p><strong>() 表示元组</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 元组：Python将不能修改的值称为不可变的，而不可变的列表被称为元组！ 不能修改的是元素，而变量是可以修改的</span></span><br><span class="line"><span class="comment"># 定义元组  遍历元组中的所有的值</span></span><br><span class="line">yuanzu = (<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(yuanzu[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(yuanzu[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># for遍历元组的所有值</span></span><br><span class="line">yuanzu=(<span class="number">100</span>,<span class="number">20</span>,<span class="number">30</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br><span class="line"><span class="comment"># for修改元组变量</span></span><br><span class="line">yuanzu = (<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br><span class="line">yuanzu=(<span class="number">200</span>,<span class="number">300</span>)</span><br><span class="line"><span class="keyword">for</span> bianli <span class="keyword">in</span> yuanzu:</span><br><span class="line">    <span class="built_in">print</span>(bianli)</span><br></pre></td></tr></table></figure><p><strong>[]表示列表</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 组织列表 sort() 永久性abcde正向或逆向排序</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="comment"># 正向的排序</span></span><br><span class="line">che.sort()</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 反向的排序</span></span><br><span class="line">che.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 组织列表 sorted() 临时性abcde 正向或逆向排序</span></span><br><span class="line"><span class="comment"># 临时正向排序</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(che))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(che, reverse=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure><p><strong>{}大括号表示字典</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># Python字典&#123;&#125; 相当于Java中的键值对</span></span><br><span class="line">che = &#123;<span class="string">&quot;motuo&quot;</span>:<span class="string">&#x27;motuoche&#x27;</span>, <span class="string">&#x27;huoche&#x27;</span>:<span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(che[<span class="string">&#x27;motuo&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(che[<span class="string">&#x27;huoche&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="5-字典和列表-嵌套-使用"><a href="#5-字典和列表-嵌套-使用" class="headerlink" title="5.字典和列表(嵌套)使用"></a>5.字典和列表(嵌套)使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># Python字典&#123;&#125; 键-值对</span></span><br><span class="line">che = &#123;<span class="string">&quot;motuo&quot;</span>: <span class="string">&#x27;motuoche&#x27;</span>, <span class="string">&#x27;huoche&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(che[<span class="string">&#x27;motuo&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(che[<span class="string">&#x27;huoche&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典添加键-值对</span></span><br><span class="line">che = &#123;<span class="string">&quot;motuo&quot;</span>: <span class="string">&#x27;motuoche&#x27;</span>, <span class="string">&#x27;huoche&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">che[<span class="string">&#x27;kache&#x27;</span>] = <span class="number">1</span></span><br><span class="line">che[<span class="string">&#x27;qiche&#x27;</span>] = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空字典 添加、修改、删除键-值对</span></span><br><span class="line">che1 = &#123;&#125;</span><br><span class="line">che1[<span class="string">&#x27;kache&#x27;</span>] = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">che1[<span class="string">&#x27;motuo&#x27;</span>] = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">che1[<span class="string">&#x27;huoche&#x27;</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line">che1[<span class="string">&#x27;qiche&#x27;</span>] = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">che1[<span class="string">&#x27;daba&#x27;</span>] = <span class="string">&#x27;red&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(che1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改字典中的值</span></span><br><span class="line">che2 = &#123;<span class="string">&#x27;kache&#x27;</span>: <span class="string">&#x27;green&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(che2)</span><br><span class="line">che2[<span class="string">&#x27;kache&#x27;</span>] = <span class="string">&#x27;yellow&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(che2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除键-值对</span></span><br><span class="line">che1 = &#123;<span class="string">&#x27;kache&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;motuo&#x27;</span>: <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;huoche&#x27;</span>: <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;qiche&#x27;</span>: <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;daba&#x27;</span>: <span class="string">&#x27;red&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(che1)</span><br><span class="line"><span class="keyword">del</span> che1[<span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(che1)</span><br><span class="line">che1[<span class="string">&#x27;huoche&#x27;</span>] = <span class="string">&#x27;4&#x27;</span>  <span class="comment"># 重新添加回删除的键-值对</span></span><br><span class="line"><span class="built_in">print</span>(che1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;kache交通工具的颜色：&#x27;</span> + che1[<span class="string">&#x27;kache&#x27;</span>].title() + <span class="string">&#x27;\t&#x27;</span> + <span class="string">&#x27;daba交通工具的颜色是&#x27;</span> + che1[<span class="string">&#x27;daba&#x27;</span>].upper())</span><br><span class="line"><span class="comment"># for 循环遍历 打印出键值对中所有的键</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> che1.keys():</span><br><span class="line">    <span class="built_in">print</span>(key.title())</span><br><span class="line"><span class="comment"># for 循环遍历 打印出键值对中的所有的值</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> che1.values():</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"><span class="comment"># for 循环遍历打印出 键值对中所有的键 并 按照顺序排序</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">sorted</span>(che1.keys()):</span><br><span class="line">    <span class="built_in">print</span>(key.upper().lower().title())  <span class="comment"># 将 打印出来的键的值先全部大写 之后小写 然后在把首字母大写输出</span></span><br><span class="line"><span class="comment"># for 循环遍历出键值对中所有的值 并 按照顺序排列</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">sorted</span>(che1.values()):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(value.upper().lower().title()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在列表中存储字典 组合 打印出每一个键值对的字典 或者 列表中所有的字典</span></span><br><span class="line">che1 = &#123;<span class="string">&#x27;kache&#x27;</span>: <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;motuo&#x27;</span>: <span class="string">&#x27;10&#x27;</span>&#125;</span><br><span class="line">che2 = &#123;<span class="string">&#x27;huoche&#x27;</span>: <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;qiche&#x27;</span>: <span class="string">&#x27;15&#x27;</span>, &#125;</span><br><span class="line">che3 = &#123;<span class="string">&#x27;gongjiao&#x27;</span>: <span class="string">&#x27;30&#x27;</span>, <span class="string">&#x27;daba&#x27;</span>: <span class="string">&#x27;25&#x27;</span>&#125;</span><br><span class="line">che = [che1, che2, che3]</span><br><span class="line"><span class="keyword">for</span> gongju <span class="keyword">in</span> che:</span><br><span class="line">    <span class="built_in">print</span>(gongju)</span><br><span class="line"><span class="comment"># 打印显示列表中的 前两个 字典键值对</span></span><br><span class="line"><span class="keyword">for</span> gongju2 <span class="keyword">in</span> che[:<span class="number">2</span>]:</span><br><span class="line">    <span class="built_in">print</span>(gongju2)</span><br><span class="line"><span class="comment"># 复制前两个键值对的列表 并在里面添加新的键值对 并查看原来的和复制之后的字典组成的列表 / 在列表中存储字典</span></span><br><span class="line">che4 = che[:]</span><br><span class="line">a = &#123;<span class="string">&#x27;mache&#x27;</span>: <span class="string">&#x27;35&#x27;</span>, <span class="string">&#x27;luche&#x27;</span>: <span class="string">&#x27;40&#x27;</span>&#125;</span><br><span class="line">che4.append(a)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="built_in">print</span>(che4)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(<span class="built_in">len</span>(che4)))  <span class="comment"># 显示列表中总共有多少个字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在字典中存储列表 通过遍历打印出来所有列表中的值</span></span><br><span class="line">che1 = &#123;<span class="string">&#x27;kache&#x27;</span>: <span class="string">&#x27;dakache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;motuo&#x27;</span>: [<span class="string">&#x27;xiaomotuo&#x27;</span>, <span class="string">&#x27;damotuo&#x27;</span>],</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">for</span> motuo1 <span class="keyword">in</span> che1[<span class="string">&#x27;motuo&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(motuo1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;拉货用&quot;</span> + che1[<span class="string">&#x27;kache&#x27;</span>] + <span class="string">&#x27;\t&#x27;</span> + <span class="string">&quot;摩托车是&quot;</span> + motuo1)</span><br><span class="line"><span class="comment"># 在字典中存储字典 并且访问每一级字典中的键 和 值的数据</span></span><br><span class="line">che5 = &#123;<span class="string">&#x27;che6&#x27;</span>: &#123;<span class="string">&#x27;kache&#x27;</span>: <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;huoche&#x27;</span>: <span class="string">&#x27;6&#x27;</span>&#125;&#125;</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> che5.items():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line">    b=value</span><br><span class="line">    <span class="built_in">print</span>(b.keys())</span><br><span class="line">    <span class="built_in">print</span>(b.values())</span><br></pre></td></tr></table></figure><h3 id="6-用户输入和while循环"><a href="#6-用户输入和while循环" class="headerlink" title="6.用户输入和while循环"></a>6.用户输入和while循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 用户输入和while循环 函数input()</span></span><br><span class="line">message = <span class="built_in">input</span>(<span class="string">&#x27;用户请输入：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输出了用户输入的：\t&quot;</span> + message)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Input输出一句名言 并拼接输出一句完整的话</span></span><br><span class="line">qian = <span class="string">&quot;说做过的，&quot;</span></span><br><span class="line">hou = <span class="string">&#x27;做说过的！&#x27;</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;请输入这是谁说的话：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(qian + hou + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;\t\t\t&#x27;</span> + <span class="string">&#x27;————&#x27;</span> + name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求模运算 根据用户输入的数字 判断用户输入的是奇数还是偶数！</span></span><br><span class="line">number = <span class="built_in">input</span>(<span class="string">&quot;请任意输入一个不为0的整数：&quot;</span>)</span><br><span class="line">number = <span class="built_in">int</span>(number)</span><br><span class="line"><span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;用户输入的这个数为&#x27;</span> + <span class="built_in">str</span>(number) + <span class="string">&#x27;是一个偶数！&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;用户输入的这个数为&#x27;</span> + <span class="built_in">str</span>(number) + <span class="string">&#x27;是一个是奇数！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让用户自己选择何时退出 只要用户输入的数据不等于jieshu 就会一直让用户输入数据 当用户输入jieshu直接退出循环</span></span><br><span class="line">message=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> message!=<span class="string">&#x27;jieshu&#x27;</span>:</span><br><span class="line">    message=<span class="built_in">input</span>(<span class="string">&#x27;请输入：&#x27;</span>) <span class="comment">#输入jieshu 直接终止程序</span></span><br><span class="line">    <span class="keyword">if</span> message!=<span class="string">&#x27;jieshu&#x27;</span>:  <span class="comment">#使用if语句可以减少最后的jieshu的打印 message不等于jieshu的时候才打印 否则反之！</span></span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># while 让用户选择何时推出循环 while 循环默认的是True 默认执行的是循环并输出信息 只有当用户输入的是tuichu的时候Active 才是False 就会结束！</span></span><br><span class="line">xinxi=<span class="string">&#x27;请输入信息:&#x27;</span></span><br><span class="line">active=<span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> active:</span><br><span class="line">    message=<span class="built_in">input</span>(xinxi)</span><br><span class="line">    <span class="keyword">if</span> message==<span class="string">&#x27;tuichu&#x27;</span>:</span><br><span class="line">        active=<span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果用户输入的是 tuichu则使用break跳出循环</span></span><br><span class="line">xinxi=<span class="string">&#x27;请输入信息:&#x27;</span></span><br><span class="line">active=<span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> active:</span><br><span class="line">    message=<span class="built_in">input</span>(xinxi)</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line">    <span class="keyword">if</span> message==<span class="string">&#x27;退出&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I love You&quot;</span>+message)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在循环中使用 continue 输出1~10数字的奇数</span></span><br><span class="line">shuzi = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> shuzi &lt; <span class="number">10</span>:</span><br><span class="line">    shuzi += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> shuzi % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(shuzi)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用while 循环来处理 列表 字典</span></span><br><span class="line">unconfirmed_users=[<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;brian&#x27;</span>,<span class="string">&#x27;candace&#x27;</span>]</span><br><span class="line">confirmed_users=[]</span><br><span class="line"><span class="keyword">while</span> unconfirmed_users:</span><br><span class="line">    current_user=unconfirmed_users.pop()</span><br><span class="line">    <span class="built_in">print</span>(current_user.title())</span><br><span class="line">    confirmed_users.append(current_user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包含特定值的列表元素</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>];</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"><span class="comment"># 移除qiche</span></span><br><span class="line"><span class="keyword">while</span> <span class="string">&#x27;qiche&#x27;</span> <span class="keyword">in</span> che:</span><br><span class="line">    che.remove(<span class="string">&#x27;qiche&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(che)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用用户输入来填充字典 让用户自己决定是否继续调查 默认为True</span></span><br><span class="line">responses=&#123;&#125;</span><br><span class="line">active=<span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> active:</span><br><span class="line">    name=<span class="built_in">input</span>(<span class="string">&#x27;\n你叫什么名字？请输入：&#x27;</span>)</span><br><span class="line">    respons=<span class="built_in">input</span>(<span class="string">&#x27;从哪里来？请输入：&#x27;</span>)</span><br><span class="line">    responses[name]=respons</span><br><span class="line">    repeat=<span class="built_in">input</span>(<span class="string">&#x27;还有人要参与调查吗？(yes/no)&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> repeat==<span class="string">&#x27;no&#x27;</span>:</span><br><span class="line">        active=<span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> name,response <span class="keyword">in</span> responses.items():</span><br><span class="line">    <span class="built_in">print</span>(name+<span class="string">&#x27;\t&#x27;</span>+response)</span><br></pre></td></tr></table></figure><h3 id="7-函数"><a href="#7-函数" class="headerlink" title="7.函数"></a>7.函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># Python 的函数 相当于是java中的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_user</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;输出一句话&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输出一句话&quot;</span>)</span><br><span class="line">greet_user()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向函数传递信息 实参：rj  形参：username</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_user</span>(<span class="params">username</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这个人叫&#x27;</span>+username)</span><br><span class="line">greet_user(<span class="string">&#x27;rj&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#实参和形参 传递实参 位置实参 多次调用函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">describe_pet</span>(<span class="params">animal_type,pet_name</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;显示宠物的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的类型是：&#x27;</span>+animal_type+<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的名字是:&#x27;</span>+pet_name.title()+<span class="string">&#x27;.\n&#x27;</span>)</span><br><span class="line">describe_pet(<span class="string">&#x27;小型&#x27;</span>,<span class="string">&#x27;h士奇&#x27;</span>)</span><br><span class="line">describe_pet(<span class="string">&#x27;大型&#x27;</span>,<span class="string">&#x27;z獒&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关键字实参 可以无视顺序：在写实参的时候，不用遵循形参的顺序  多次调用函数验证</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">describe_pet</span>(<span class="params">animal_type,pet_name</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;显示宠物的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的类型是：&#x27;</span>+animal_type+<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的名字是:&#x27;</span>+pet_name.title()+<span class="string">&#x27;.\n&#x27;</span>)</span><br><span class="line">describe_pet(animal_type=<span class="string">&#x27;中型&#x27;</span>,pet_name=<span class="string">&#x27;m羊犬&#x27;</span>)</span><br><span class="line">describe_pet(pet_name=<span class="string">&#x27;m羊犬&#x27;</span>,animal_type=<span class="string">&#x27;中型&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数 可以设置形参的默认值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">describe_pet</span>(<span class="params">animal_type,pet_name=<span class="string">&#x27;s魔灰&#x27;</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;显示宠物的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的类型是：&#x27;</span>+animal_type+<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;宠物的名字是:&#x27;</span>+pet_name.title()+<span class="string">&#x27;.\n&#x27;</span>)</span><br><span class="line">describe_pet(animal_type=<span class="string">&#x27;中型&#x27;</span>)</span><br><span class="line">describe_pet(<span class="string">&#x27;小型&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数的实参和形参，简单的返回值， 多次调用函数复赋值 组成一个列表 for循环遍历列表输出值！</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name,age</span>):</span><br><span class="line">    xinxi=<span class="string">&#x27;这个人叫&#x27;</span>+name+<span class="string">&#x27;,&#x27;</span>+<span class="string">&quot;年龄是：&quot;</span>+age</span><br><span class="line">    <span class="keyword">return</span> xinxi</span><br><span class="line">person_xinxi=person(<span class="string">&#x27;aaa&#x27;</span>,<span class="string">&#x27;20岁&#x27;</span>)</span><br><span class="line">person_xinxi1=person(<span class="string">&#x27;bbb&#x27;</span>,<span class="string">&#x27;21岁&#x27;</span>)</span><br><span class="line">per_xinxi=[person_xinxi,person_xinxi1]</span><br><span class="line"><span class="keyword">for</span> pers_xinxi <span class="keyword">in</span> per_xinxi[:]:</span><br><span class="line">    <span class="built_in">print</span>(pers_xinxi)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># 函数 往字典中添加一个信息组成一个新字典 for 循环遍历所有的字典的键-值最后输出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person1</span>(<span class="params">name,sex,age=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    person1=&#123;<span class="string">&#x27;n&#x27;</span>:name,<span class="string">&#x27;s&#x27;</span>:sex&#125;</span><br><span class="line">    <span class="keyword">if</span> age:</span><br><span class="line">        person1[<span class="string">&#x27;a&#x27;</span>]=age <span class="comment">#在上面的person1字典中添加一个 &#x27;a&#x27;:age 的字典</span></span><br><span class="line">        <span class="keyword">return</span> person1</span><br><span class="line">xinxi=person1(<span class="string">&#x27;rj&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,age=<span class="string">&#x27;20&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;打印字典的所有信息&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(xinxi)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;打印全部的键-值&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> xinxi.items():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;只打印字典中的键&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> xinxi.keys():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;只打印字典中的值&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> xinxi.values():</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合使用函数和while循环</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mingzi</span>(<span class="params">first_name,last_name</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;返回一个全部的名字&#x27;&#x27;&#x27;</span></span><br><span class="line">    full_name=first_name+<span class="string">&#x27; &#x27;</span>+last_name</span><br><span class="line">    <span class="keyword">return</span> full_name.title()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;这是有一个无限循环&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请输入您的名字&#x27;</span>)</span><br><span class="line">    f_name=<span class="built_in">input</span>(<span class="string">&quot;请输入您的First_name:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> f_name==<span class="string">&#x27;tuichu&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    l_name=<span class="built_in">input</span>(<span class="string">&quot;请输入您的Last_name:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> l_name==<span class="string">&#x27;quxiao&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;调用前面定义的函数&#x27;&#x27;&#x27;</span></span><br><span class="line">    suoyou_name=mingzi(f_name,l_name)</span><br><span class="line">    <span class="built_in">print</span>(suoyou_name)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># 传递列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_users</span>(<span class="params">names</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;向列表中的每一位用户都发出一条简单的问候&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Hi&#x27;</span>,name.title()+<span class="string">&#x27;!&#x27;</span>)</span><br><span class="line">names=[<span class="string">&#x27;rj&#x27;</span>,<span class="string">&#x27;cj&#x27;</span>,<span class="string">&#x27;ft&#x27;</span>]</span><br><span class="line">greet_users(names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在函数中修改列表 while循环移除数据，可用数据，添加到工具，for循环遍历 移除的可用的数据 并 输出修改后的列表数据</span></span><br><span class="line">che = [<span class="string">&quot;motuo&quot;</span>, <span class="string">&quot;qiche&quot;</span>, <span class="string">&quot;zixingche&quot;</span>, <span class="string">&#x27;huoche&#x27;</span>]</span><br><span class="line">gongju=[]</span><br><span class="line"><span class="keyword">while</span> che:</span><br><span class="line">    che3=che.pop()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;gongu:&#x27;</span>+che3)</span><br><span class="line">    gongju.append(che3)</span><br><span class="line"><span class="keyword">for</span> che4 <span class="keyword">in</span> <span class="built_in">sorted</span>(gongju): <span class="comment">#sorted() 临时性abcde 正向或逆向排序</span></span><br><span class="line">    <span class="built_in">print</span>(che4)</span><br><span class="line"></span><br><span class="line"><span class="comment">#传递任意数量的实参 多次调用函数赋值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pizza</span>(<span class="params">*toppings</span>):</span><br><span class="line">    <span class="built_in">print</span>(toppings)</span><br><span class="line">make_pizza(<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">make_pizza(<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>,<span class="string">&#x27;wuaipo&#x27;</span>,<span class="string">&#x27;pojie&#x27;</span>,<span class="string">&#x27;wuaipojie&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#传递任意数量的实参 多次调用函数赋值 并且循环遍历实参并输出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pizza</span>(<span class="params">*toppings</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这里要输出循环遍历的名字结果：&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> topping <span class="keyword">in</span> toppings:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>+topping)</span><br><span class="line">make_pizza(<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">make_pizza(<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>,<span class="string">&#x27;wuaipo&#x27;</span>,<span class="string">&#x27;pojie&#x27;</span>,<span class="string">&#x27;wuaipojie&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合使用位置实参和任意数量的实参 还嫌匹配位置实参和关键字实参</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pizza</span>(<span class="params">size,*toppings</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共需要&#x27;</span>+<span class="built_in">str</span>(size)+<span class="string">&#x27;这里要输出循环遍历的名字结果：&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> topping <span class="keyword">in</span> toppings:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>+topping)</span><br><span class="line">make_pizza(<span class="number">16</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">make_pizza(<span class="number">12</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>,<span class="string">&#x27;wuaipo&#x27;</span>,<span class="string">&#x27;pojie&#x27;</span>,<span class="string">&#x27;wuaipojie&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="1-导入模块"><a href="#1-导入模块" class="headerlink" title="1.导入模块"></a>1.导入模块</h4><blockquote><p>pizza.py     模块</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">def</span> <span class="title function_">make_pizza</span>(<span class="params">size, *toppings</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;总共需要&#x27;</span> + <span class="built_in">str</span>(size) + <span class="string">&#x27;这里要输出循环遍历的名字结果：&#x27;</span>)</span><br><span class="line">   <span class="keyword">for</span> topping <span class="keyword">in</span> toppings:</span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> + topping)</span><br></pre></td></tr></table></figure><blockquote><p>making_pizzas.py        import 模块名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> pizza   <span class="comment">#导入的模块的名字 pizza</span></span><br><span class="line">pizza.make_pizza(<span class="number">15</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">pizza.make_pizza(<span class="number">18</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-导入特定的函数"><a href="#2-导入特定的函数" class="headerlink" title="2.导入特定的函数"></a>2.导入特定的函数</h4><blockquote><p>making_pizzas.py          from 模块名 import 函数名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> pizza <span class="keyword">import</span> make_pizza   <span class="comment">#导入特定的函数 make_pizza</span></span><br><span class="line">make_pizza(<span class="number">15</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">make_pizza(<span class="number">18</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="3-使用as-给函数指定别名"><a href="#3-使用as-给函数指定别名" class="headerlink" title="3.使用as 给函数指定别名"></a>3.使用as 给函数指定别名</h4><blockquote><p>making_pizzas.py          from 模块名 import 函数名 as 别名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> pizza <span class="keyword">import</span> make_pizza <span class="keyword">as</span> mp   <span class="comment">#导入特定的函数 make_pizza 并且指定别名</span></span><br><span class="line">mp(<span class="number">15</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">mp(<span class="number">18</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="4-使用as-给模块指定别名"><a href="#4-使用as-给模块指定别名" class="headerlink" title="4.使用as 给模块指定别名"></a>4.使用as 给模块指定别名</h4><blockquote><p>making_pizzas.py           import 模块名 as 别名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> pizza <span class="keyword">as</span> pi   <span class="comment">#导入的模块的名字pizza 并且指定别名pi</span></span><br><span class="line">pi.make_pizza(<span class="number">15</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">pi.make_pizza(<span class="number">18</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="5-导入模块中所有的函数"><a href="#5-导入模块中所有的函数" class="headerlink" title="5.导入模块中所有的函数"></a>5.导入模块中所有的函数</h4><blockquote><p>making_pizzas.py           from 模块名 import *</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> pizza <span class="keyword">import</span> *   <span class="comment">#导入模块中所有的函数</span></span><br><span class="line">make_pizza(<span class="number">15</span>,<span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">make_pizza(<span class="number">18</span>,<span class="string">&#x27;wuai&#x27;</span>,<span class="string">&#x27;po&#x27;</span>,<span class="string">&#x27;jie&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="8-类"><a href="#8-类" class="headerlink" title="8.类"></a>8.类</h3><h4 id="1-创建类和使用类"><a href="#1-创建类和使用类" class="headerlink" title="1.创建类和使用类"></a>1.创建类和使用类</h4><blockquote><p>dog.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">class</span> <span class="title class_">Dog</span>():</span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;一次模拟小狗的简单测试&#x27;&#x27;&#x27;</span></span><br><span class="line">   <span class="comment">#init 是一个特殊的方法，开头和结尾都有两个下划线 三个参数 形参self必不可少</span></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;初始化属性name 和 age&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="variable language_">self</span>.name = name</span><br><span class="line">       <span class="variable language_">self</span>.age = age</span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">sit</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;模拟小狗被命令时蹲下&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="variable language_">self</span>.name.title() + <span class="string">&#x27;is now sitting.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">roll_over</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;模拟小狗被命令时打滚&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="variable language_">self</span>.name.title() + <span class="string">&#x27;rolled over&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-根据类来创建实例-多个"><a href="#2-根据类来创建实例-多个" class="headerlink" title="2.根据类来创建实例&#x2F;多个"></a>2.根据类来创建实例&#x2F;多个</h4><blockquote><p>dog.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码my_dog = Dog(<span class="string">&#x27;gougou&#x27;</span>, <span class="number">6</span>)</span><br><span class="line">you_dog = Dog(<span class="string">&#x27;xiaogou&#x27;</span>, <span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的狗的名字叫：&#x27;</span> + my_dog.name.title() + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;它今年已经：&#x27;</span> + <span class="built_in">str</span>(my_dog.age) + <span class="string">&#x27;岁了！&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>dog.py  #调用方法</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码my_dog = Dog(<span class="string">&#x27;gougou&#x27;</span>, <span class="number">6</span>)</span><br><span class="line">my_dog.sit() <span class="comment">#调用sit蹲下方法</span></span><br><span class="line">my_dog.roll_over() <span class="comment">#调用roll_over打滚方法</span></span><br></pre></td></tr></table></figure><h4 id="3-使用类和实例"><a href="#3-使用类和实例" class="headerlink" title="3.使用类和实例"></a>3.使用类和实例</h4><blockquote><p>che.py  属性指定默认的值 和 修改属性的值(直接和自定义函数) 不允许年份比之前要小</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 在方法中通过自定义修改函数 修改属性的值</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Che</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gongjiao = gongjiao</span><br><span class="line">        <span class="variable language_">self</span>.daba = daba</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dache</span>(<span class="params">self</span>):</span><br><span class="line">        dache1 = <span class="variable language_">self</span>.gongjiao + <span class="variable language_">self</span>.daba</span><br><span class="line">        <span class="keyword">return</span> dache1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这两个大车的年限是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用修改方法 为年限设置 值&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.year = nianfen</span><br><span class="line">        <span class="keyword">if</span> nianfen &gt;= <span class="variable language_">self</span>.year:</span><br><span class="line">            <span class="variable language_">self</span>.year = nianfen</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;不允许年份比现在设置的值要小！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">gongju1 = Che(<span class="string">&#x27;公交&#x27;</span>, <span class="string">&#x27;大巴&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongju1.dache())</span><br><span class="line">gongju1.update(<span class="number">8</span>)</span><br><span class="line">gongju1.nian()</span><br></pre></td></tr></table></figure><h3 id="9-继承"><a href="#9-继承" class="headerlink" title="9. 继承"></a>9. 继承</h3><blockquote><p>che.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 在方法中通过自定义修改函数 修改属性的值</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Che</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gongjiao = gongjiao</span><br><span class="line">        <span class="variable language_">self</span>.daba = daba</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dache</span>(<span class="params">self</span>):</span><br><span class="line">        dache1 = <span class="variable language_">self</span>.gongjiao + <span class="string">&#x27;\t&#x27;</span> + <span class="variable language_">self</span>.daba</span><br><span class="line">        <span class="keyword">return</span> dache1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这两个大车的年限是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;修改属性的值 或 增加属性的值&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用修改方法 为年限设置 值&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.year += nianfen</span><br><span class="line">        <span class="keyword">if</span> nianfen &gt;= <span class="variable language_">self</span>.year:</span><br><span class="line">            <span class="variable language_">self</span>.year = nianfen</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;不允许年份比现在设置的值要小！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">gongju1 = Che(<span class="string">&#x27;公交&#x27;</span>, <span class="string">&#x27;大巴&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongju1.dache())</span><br><span class="line">gongju1.update(<span class="number">10</span>)</span><br><span class="line">gongju1.nian()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承   子类 继承 父类  使用super初始化父类的属性 输出时子类调用父类的函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElectricCar</span>(<span class="title class_ inherited__">Che</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;还有哪几种车&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用super初始化父类的属性&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">super</span>(ElectricCar, <span class="variable language_">self</span>).__init__(gongjiao, daba)</span><br><span class="line"></span><br><span class="line">gongjuzilei = ElectricCar(<span class="string">&#x27;公交子类&#x27;</span>, <span class="string">&#x27;大巴子类&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongjuzilei.dache()) <span class="comment">#子类调用父类的函数 输出</span></span><br></pre></td></tr></table></figure><h4 id="1-给子类定义属性和方法"><a href="#1-给子类定义属性和方法" class="headerlink" title="1.给子类定义属性和方法"></a>1.给子类定义属性和方法</h4><blockquote><p>che.py         che为父类      ElectricCar为子类  子类继承父类 即：子类(父类)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 在方法中通过自定义修改函数 修改属性的值</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Che</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gongjiao = gongjiao</span><br><span class="line">        <span class="variable language_">self</span>.daba = daba</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dache</span>(<span class="params">self</span>):</span><br><span class="line">        dache1 = <span class="variable language_">self</span>.gongjiao + <span class="string">&#x27;\t&#x27;</span> + <span class="variable language_">self</span>.daba</span><br><span class="line">        <span class="keyword">return</span> dache1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这两个大车的年限是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;修改属性的值 或 增加属性的值&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用修改方法 为年限设置 值&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.year += nianfen</span><br><span class="line">        <span class="keyword">if</span> nianfen &gt;= <span class="variable language_">self</span>.year:</span><br><span class="line">            <span class="variable language_">self</span>.year = nianfen</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;不允许年份比现在设置的值要小！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">gongju1 = Che(<span class="string">&#x27;公交&#x27;</span>, <span class="string">&#x27;大巴&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongju1.dache())</span><br><span class="line">gongju1.update(<span class="number">10</span>)</span><br><span class="line">gongju1.nian()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承   子类继承父类 使用super初始化父类的属性 输出时子类调用父类的函数 给子类定义属性和方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElectricCar</span>(<span class="title class_ inherited__">Che</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;还有哪几种车&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用super初始化父类的属性&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">super</span>(ElectricCar, <span class="variable language_">self</span>).__init__(gongjiao, daba)</span><br><span class="line">        <span class="variable language_">self</span>.daxiao=<span class="number">70</span>   <span class="comment">#定义一个子类特有的属性</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chedaxiao</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;打印一条关于车的大小的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;车的大小是：&#x27;</span>+<span class="built_in">str</span>(<span class="variable language_">self</span>.daxiao)+<span class="string">&#x27;米&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#给子类的属性进行赋值 </span></span><br><span class="line">gongjuzilei = ElectricCar(<span class="string">&#x27;公交子类&#x27;</span>, <span class="string">&#x27;大巴子类&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongjuzilei.dache()) <span class="comment">#子类调用父类的函数 输出</span></span><br><span class="line">gongjuzilei.chedaxiao()   <span class="comment">#在子类中给输出这个子类特有的属性值</span></span><br></pre></td></tr></table></figure><h4 id="2-子类重写父类的方法"><a href="#2-子类重写父类的方法" class="headerlink" title="2.子类重写父类的方法"></a>2.子类重写父类的方法</h4><blockquote><p>che.py         che为父类      ElectricCar为子类  子类继承父类 即：子类(父类)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 在方法中通过自定义修改函数 修改属性的值</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Che</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="variable language_">self</span>.gongjiao = gongjiao</span><br><span class="line">        <span class="variable language_">self</span>.daba = daba</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dache</span>(<span class="params">self</span>):</span><br><span class="line">        dache1 = <span class="variable language_">self</span>.gongjiao + <span class="string">&#x27;\t&#x27;</span> + <span class="variable language_">self</span>.daba</span><br><span class="line">        <span class="keyword">return</span> dache1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这两个大车的年限是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;修改属性的值 或 增加属性的值&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用修改方法 为年限设置 值&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.year += nianfen</span><br><span class="line">        <span class="keyword">if</span> nianfen &gt;= <span class="variable language_">self</span>.year:</span><br><span class="line">            <span class="variable language_">self</span>.year = nianfen</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;不允许年份比现在设置的值要小！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">gongju1 = Che(<span class="string">&#x27;公交&#x27;</span>, <span class="string">&#x27;大巴&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongju1.dache())</span><br><span class="line">gongju1.update(<span class="number">10</span>)</span><br><span class="line">gongju1.nian()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承   子类继承父类 使用super初始化父类的属性 输出时子类调用父类的函数 给子类定义属性和方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElectricCar</span>(<span class="title class_ inherited__">Che</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;还有哪几种车&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用super初始化父类的属性&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">super</span>(ElectricCar, <span class="variable language_">self</span>).__init__(gongjiao, daba)</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;新增两条大小和年份的属性&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.daxiao = <span class="number">70</span></span><br><span class="line">        <span class="variable language_">self</span>.nianfen=<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chedaxiao</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;打印一条关于车的大小的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;车的大小是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.daxiao) + <span class="string">&#x27;米&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这个大车的使用年份是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.nianfen) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;修改车子的使用年限&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.nianfen = nianfen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过子类来给 属性传递参数</span></span><br><span class="line">gongjuzilei = ElectricCar(<span class="string">&#x27;公交子类&#x27;</span>, <span class="string">&#x27;大巴子类&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(gongjuzilei.dache())  <span class="comment"># 子类调用父类的函数 输出</span></span><br><span class="line">gongjuzilei.chedaxiao()</span><br><span class="line">gongjuzilei.update(<span class="number">12</span>) <span class="comment">#给形参传递年份的信息</span></span><br><span class="line">gongjuzilei.nian() <span class="comment">#子类调用年份的函数 传递相关的年份信息</span></span><br></pre></td></tr></table></figure><h4 id="3-导入类-单个类"><a href="#3-导入类-单个类" class="headerlink" title="3.导入类&#x2F;单个类"></a>3.导入类&#x2F;单个类</h4><blockquote><p>car.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 给属性指定默认的值  定义一个类 在类中定义 几个函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, qiche, huoche</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;初始化描述车的类型&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.qiche = qiche</span><br><span class="line">        <span class="variable language_">self</span>.huoche = huoche</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chexing</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;定一个车型的函数&#x27;&#x27;&#x27;</span></span><br><span class="line">        message = (<span class="variable language_">self</span>.qiche + <span class="string">&#x27;\t&#x27;</span> + <span class="variable language_">self</span>.huoche)</span><br><span class="line">        <span class="keyword">return</span> message.title()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;定义一个输出车的年份的函数&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;车的年份都是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>mycar.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> car <span class="keyword">import</span> Car <span class="comment"># from 文件名 import 类名</span></span><br><span class="line"><span class="comment"># 为类的形参赋值</span></span><br><span class="line">my_car = Car(<span class="string">&#x27;汽车&#x27;</span>, <span class="string">&#x27;火车&#x27;</span>)</span><br><span class="line"><span class="comment"># 调用chexing的函数输出</span></span><br><span class="line"><span class="built_in">print</span>(my_car.chexing())</span><br><span class="line"><span class="comment"># 修改属性的值 并 调用相关的函数输出</span></span><br><span class="line">my_car.year = <span class="number">12</span></span><br><span class="line">my_car.nian()</span><br></pre></td></tr></table></figure><h4 id="4-模块中存储多个类-类继承-导入"><a href="#4-模块中存储多个类-类继承-导入" class="headerlink" title="4.模块中存储多个类&#x2F;类继承 导入"></a>4.模块中存储多个类&#x2F;类继承 导入</h4><blockquote><p>car.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 给属性指定默认的值  定义一个类 在类中定义 几个函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, qiche, huoche</span>):digits</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;初始化描述车的类型&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.qiche = qiche</span><br><span class="line">        <span class="variable language_">self</span>.huoche = huoche</span><br><span class="line">        <span class="variable language_">self</span>.year = <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chexing</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;定一个车型的函数&#x27;&#x27;&#x27;</span></span><br><span class="line">        message = (<span class="variable language_">self</span>.qiche + <span class="string">&#x27;\t&#x27;</span> + <span class="variable language_">self</span>.huoche)</span><br><span class="line">        <span class="keyword">return</span> message.title()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;定义一个输出车的年份的函数&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;车的年份都是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.year) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承   子类继承父类 使用super初始化父类的属性 输出时子类调用父类的函数 给子类定义属性和方法</span></span><br><span class="line"><span class="comment"># 重写父类的方法 在子类中定义个和父类中同名的方法 Python不会考虑在父类中的方法，只关注在子类中定义的相应方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElectricCar</span>(<span class="title class_ inherited__">Car</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;还有哪几种车&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, gongjiao, daba</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;使用super初始化父类的属性&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">super</span>(ElectricCar, <span class="variable language_">self</span>).__init__(gongjiao, daba)</span><br><span class="line">        <span class="variable language_">self</span>.daxiao = <span class="number">70</span></span><br><span class="line">        <span class="variable language_">self</span>.nianfen = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chedaxiao</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;打印一条关于车的大小的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;车的大小是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.daxiao) + <span class="string">&#x27;米&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子类重写父类函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nian</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这个大车的使用年份是：&#x27;</span> + <span class="built_in">str</span>(<span class="variable language_">self</span>.nianfen) + <span class="string">&#x27;年！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子类重写父类的函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, nianfen</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;修改车子的使用年限&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.nianfen = nianfen</span><br></pre></td></tr></table></figure><blockquote><p>my_electric_car.py 从一个模块中导入多个类 格式：from 模块名 import 类名,类名 或者 *</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> car <span class="keyword">import</span> Car,ElectricCar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传递实参的参数给形参 并输出传递的参数</span></span><br><span class="line">my_tesla = ElectricCar(<span class="string">&#x27;公交&#x27;</span>, <span class="string">&#x27;大巴&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(my_tesla.chexing())</span><br><span class="line"><span class="comment"># 修改属性的值 并调用函数输出相关的信息</span></span><br><span class="line">my_tesla.daxiao = <span class="number">80</span></span><br><span class="line"><span class="built_in">print</span>(my_tesla.chedaxiao())</span><br><span class="line"><span class="comment"># 修改属性的值，并调用函数输出相关的信息</span></span><br><span class="line">my_tesla.nianfen = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(my_tesla.nian())</span><br></pre></td></tr></table></figure><h4 id="5-导入整个模块-模块中所有的类"><a href="#5-导入整个模块-模块中所有的类" class="headerlink" title="5.导入整个模块&#x2F;模块中所有的类"></a>5.导入整个模块&#x2F;模块中所有的类</h4><blockquote><p>my_cars.py       import 模块名                 from 模块名 import 所有的类</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> car</span><br><span class="line"><span class="keyword">from</span> car <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h4 id="6-Python-标准库"><a href="#6-Python-标准库" class="headerlink" title="6.Python 标准库"></a>6.Python 标准库</h4><blockquote><p>字典让你能够和信息关联起来，但是不记录添加键值对的顺序。创建字典并记录键值对中的数据可以使用模块 collections 中的 OrderedDict类。OrderedDict实例几乎与字典相同，区别只是在于记录键-值对的顺序！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict  <span class="comment"># 导入一个模块中的函数</span></span><br><span class="line"></span><br><span class="line">favorivte_languages = OrderedDict()  <span class="comment"># 将类赋值给favorivte_languages</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;往favorivte_languages中添加字典信息&#x27;&#x27;&#x27;</span></span><br><span class="line">favorivte_languages[<span class="string">&#x27;che&#x27;</span>] = <span class="string">&#x27;qiche&#x27;</span></span><br><span class="line">favorivte_languages[<span class="string">&#x27;che1&#x27;</span>] = <span class="string">&#x27;mache&#x27;</span></span><br><span class="line">favorivte_languages[<span class="string">&#x27;che2&#x27;</span>] = <span class="string">&#x27;huoche&#x27;</span></span><br><span class="line">favorivte_languages[<span class="string">&#x27;che3&#x27;</span>] = <span class="string">&#x27;kache&#x27;</span></span><br><span class="line"><span class="comment"># for循环遍历输出类的字典信息</span></span><br><span class="line"><span class="keyword">for</span> che, mingzi <span class="keyword">in</span> favorivte_languages.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这些&#x27;</span> + che.title() + <span class="string">&#x27;\t&#x27;</span> + <span class="string">&#x27;叫：&#x27;</span> + mingzi.title() + <span class="string">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="10-文件和异常"><a href="#10-文件和异常" class="headerlink" title="10.文件和异常"></a>10.文件和异常</h3><h4 id="1-读取整个文件-read"><a href="#1-读取整个文件-read" class="headerlink" title="1.读取整个文件 read()"></a>1.读取整个文件 read()</h4><blockquote><p>pi_digits.txt</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码3.1415926535</span><br><span class="line"> 8979323846</span><br><span class="line"> 2643383279</span><br></pre></td></tr></table></figure><blockquote><p>file_reader.py    读取整个文件的格式是： with open(‘文件的名字’) as file_object:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 相对文件路径 （优先使用）</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;pi_digits.txt&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">    contents = file_object.read()</span><br><span class="line">    <span class="built_in">print</span>(contents.rstrip())  <span class="comment"># 多出一个空行的情况下可以使用 rstrip() 来去除字符串后面的空白</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文件放在项目文件夹中 相对文件路径  （优先使用）</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;text_files\pi_digits.txt&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">    shuchu = file_object.read()</span><br><span class="line">    <span class="built_in">print</span>(shuchu)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文件放在电脑桌面上  绝对文件路径</span></span><br><span class="line">file_path = <span class="string">&#x27;C:\\Users\lenovo\Desktop\pi_digits.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path) <span class="keyword">as</span> file_object:</span><br><span class="line">    <span class="built_in">print</span>(file_object.read())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逐行 读取文件的信息</span></span><br><span class="line">file_path = <span class="string">&#x27;pi_digits.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path) <span class="keyword">as</span> file_object:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file_object:</span><br><span class="line">        <span class="built_in">print</span>(line.rstrip())  <span class="comment"># 多出一个空行的情况下可以使用 rstrip() 来去除字符串后面的空白</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逐行 读取文件的信息 使用readlines()</span></span><br><span class="line">file_path = <span class="string">&#x27;pi_digits.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path) <span class="keyword">as</span> file_object:</span><br><span class="line">    lines = file_object.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="built_in">print</span>(line.rstrip())  <span class="comment"># 多出一个空行的情况下可以使用 rstrip() 来去除字符串后面的空白</span></span><br></pre></td></tr></table></figure><h4 id="2-使用文件的内容-读取-拼接-长度"><a href="#2-使用文件的内容-读取-拼接-长度" class="headerlink" title="2.使用文件的内容 读取&#x2F;拼接&#x2F;长度"></a>2.使用文件的内容 读取&#x2F;拼接&#x2F;长度</h4><blockquote><p>pi_string.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 逐行 读取文件的信息 使用readlines()</span></span><br><span class="line">file_path = <span class="string">&#x27;pi_digits.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path) <span class="keyword">as</span> file_object:</span><br><span class="line">    lines = file_object.readlines()  <span class="comment"># 读取文件中每行的信息</span></span><br><span class="line">pi_string = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 创建一个字符串</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:  <span class="comment"># 遍历读取到的文件的每行信息 存储到line中</span></span><br><span class="line">    pi_string += line.strip()  <span class="comment"># 读取到的每行信息+创建的字符串  并用strip()去除两端的空格</span></span><br><span class="line"><span class="built_in">print</span>(pi_string)  <span class="comment"># 输出拼接之后的信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(pi_string))  <span class="comment"># 输出拼接之后的信息的字符串长度</span></span><br></pre></td></tr></table></figure><h4 id="3-读取一个百万位的大型文件"><a href="#3-读取一个百万位的大型文件" class="headerlink" title="3.读取一个百万位的大型文件"></a>3.读取一个百万位的大型文件</h4><blockquote><p>pi_string.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 逐行 读取文件的信息 使用readlines()</span></span><br><span class="line">file_path = <span class="string">&#x27;pi_digits.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path) <span class="keyword">as</span> file_object:</span><br><span class="line">    lines = file_object.readlines()  <span class="comment"># 读取文件中每行的信息</span></span><br><span class="line">pi_string = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 创建一个字符串</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:  <span class="comment"># 遍历读取到的文件的每行信息 存储到line中</span></span><br><span class="line">    pi_string += line.strip()  <span class="comment"># 读取到的每行信息+创建的字符串  并用strip()去除两端的空格</span></span><br><span class="line"><span class="built_in">print</span>(pi_string[:<span class="number">9</span>]+<span class="string">&#x27;...&#x27;</span>)  <span class="comment"># 输出拼接之后的信息 只输出列表中的前9位 如果输出百万位 把9改为1000000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(pi_string))  <span class="comment"># 输出拼接之后的信息的字符串长度</span></span><br></pre></td></tr></table></figure><h4 id="4-写入到空文件-多行-附加-读取"><a href="#4-写入到空文件-多行-附加-读取" class="headerlink" title="4.写入到空文件(多行)&#x2F;附加&#x2F;读取"></a>4.写入到空文件(多行)&#x2F;附加&#x2F;读取</h4><blockquote><p>pi_string.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 写入文件 执行完之后 文件目录中 会生成一个xieru.txt的文件 内容就是‘易瑞杰正在学习Python’</span></span><br><span class="line">file_path=<span class="string">&#x27;xieru.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">    file_object.write(<span class="string">&#x27;rj正在学习Python&#x27;</span>) </span><br></pre></td></tr></table></figure><blockquote><p>pi_string.py  </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 写入文件 在读取写入的文件内容和文件长度</span></span><br><span class="line">file_path = <span class="string">&#x27;wenjian.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file_object:  <span class="comment"># w:表示写入(Write)到这个文件中</span></span><br><span class="line">    file_object.write(<span class="string">&#x27;rj正在学习Python&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    file_object.write(<span class="string">&#x27;rj正在学习Python1&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> file_object:  <span class="comment"># a:表示附加(Attach)到这个文件中</span></span><br><span class="line">    file_object.write(<span class="string">&#x27;rj正在学习Python&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file_object:  <span class="comment"># r:表示读取(read)这个文件的内容</span></span><br><span class="line">    lines = file_object.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="built_in">print</span>(line.strip())</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(line))</span><br></pre></td></tr></table></figure><blockquote><p>pi_string.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 提示用户输入自己的姓名 再将用户输入的姓名写入到文件中输出</span></span><br><span class="line">file_path = <span class="string">&#x27;tishishuru.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file_object:  <span class="comment"># w:表示写入(Write)到这个文件中</span></span><br><span class="line">    message = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的名字：&#x27;</span>)</span><br><span class="line">    file_object.write(message)</span><br></pre></td></tr></table></figure><blockquote><p>division.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 异常 division by zero</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">5</span>/<span class="number">0</span>)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># 异常 division by zero（ZeroDivisionError）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;try-except 的代码块包裹快捷键是 Ctrl+Alt+T&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">5</span>/<span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你的被除数不能为零！&#x27;</span>)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># 分析文本 拆分字符串 for循环遍历输出</span></span><br><span class="line">title = <span class="string">&quot;r j study Python&quot;</span></span><br><span class="line"><span class="built_in">print</span>(title.split())  <span class="comment">#遍历根据空格拆分 输出的是一个列表</span></span><br><span class="line">fenxi = title.split()  <span class="comment"># 以空格为分隔符拆分文本</span></span><br><span class="line"><span class="keyword">for</span> wenben <span class="keyword">in</span> fenxi:  <span class="comment"># 遍历根据空格拆分之后的文本 并输出</span></span><br><span class="line">    <span class="built_in">print</span>(wenben)</span><br></pre></td></tr></table></figure><blockquote><p>division.py            使用多个文件</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="comment"># 定义函数 排除异常 读取文件 拆分文件内容 计算内容长度 写入到新的文件中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_words</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">            contents = file_object.read()</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;文件&#x27;</span> + filename + <span class="string">&#x27;是不存在的！&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        words = contents.split()</span><br><span class="line">        <span class="keyword">for</span> wenben <span class="keyword">in</span> words:</span><br><span class="line">            <span class="built_in">print</span>(wenben)        <span class="comment">#遍历输出拆分之后的每条信息</span></span><br><span class="line">        num_words=(<span class="built_in">len</span>(words))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这个文件是真是存在的&#x27;</span>+filename+<span class="string">&#x27;文件中的内容的长度是：&#x27;</span>+<span class="built_in">str</span>(num_words))</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;alice.txt&#x27;</span></span><br><span class="line">count_words(filename)</span><br><span class="line"> 复制代码 隐藏代码<span class="comment"># 定义函数 排除异常 读取文件(多个文件) 拆分文件内容 计算内容长度 写入到新的文件中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_words</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">            contents = file_object.read()</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;文件&#x27;</span> + filename + <span class="string">&#x27;是不存在的！&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        words = contents.split()</span><br><span class="line">        <span class="keyword">for</span> wenben <span class="keyword">in</span> words:</span><br><span class="line">            <span class="built_in">print</span>(wenben)</span><br><span class="line">        num_words=(<span class="built_in">len</span>(words))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这个文件是真是存在的&#x27;</span>+filename+<span class="string">&#x27;文件中的内容的长度是：&#x27;</span>+<span class="built_in">str</span>(num_words))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;当其中的某一文件不存在时丝毫不影响，其他的文件&#x27;&#x27;&#x27;</span></span><br><span class="line">filenames = [<span class="string">&#x27;alice1.txt&#x27;</span>,<span class="string">&#x27;alice2.txt&#x27;</span>,<span class="string">&#x27;alice3.txt&#x27;</span>,<span class="string">&#x27;alice4.txt&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    count_words(filename)</span><br></pre></td></tr></table></figure><h4 id="5-存储数据"><a href="#5-存储数据" class="headerlink" title="5.存储数据"></a>5.存储数据</h4><blockquote><p>number_reader.py          json.dump()和json.load()</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将列表数据存储在number.json 文件中</span></span><br><span class="line">number = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>]</span><br><span class="line">filename = <span class="string">&#x27;number.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">    json.dump(number, f_obj)  <span class="comment"># json.dump用来存储。    number：要存入json文本的数据源.   f_obj:存入到的文件的位置</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数据存储到&#x27;</span> + filename + <span class="string">&#x27;完成！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取前面写入到number.json文件的数据内容</span></span><br><span class="line">filename = <span class="string">&#x27;number.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">    numbers = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">    <span class="built_in">print</span>(numbers)</span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:  <span class="comment"># for循环遍历输出读取到的文件中的每条列表中的数据 并 打印输出</span></span><br><span class="line">    <span class="built_in">print</span>(number)</span><br></pre></td></tr></table></figure><blockquote><p>remember_me.py                保存和读取用户输入的数据</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存用户输入时生成的数据到json文件中</span></span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;请输入您的名字：&quot;</span>)</span><br><span class="line">filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">    json.dump(username, f_obj)  <span class="comment"># json.dump用来存储。   username：要存入json文本的数据源.   f_obj:存入到的文件的位置 username.json</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这个人的名字叫：&#x27;</span> + username)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取用户输入存储到json中的数据</span></span><br><span class="line">filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">    username = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;在文件中读取到的信息是：&#x27;</span> + username)</span><br><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># json.dump()  json.load() try-except-else 的组合使用</span></span><br><span class="line"><span class="comment"># 如果以前存储了用户名就加载它，否则就提示用户输入用户名并存储它</span></span><br><span class="line">filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">        username = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在文件中读取到的信息是：&#x27;</span> + username)</span><br><span class="line"><span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">    <span class="comment"># 保存用户输入时生成的数据到json文件中</span></span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&quot;请输入您的名字：&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">        json.dump(username, f_obj)  <span class="comment"># json.dump用来存储。   username：要存入json文本的数据源.   f_obj:存入到的文件的位置 username.json</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这个人的名字叫：&#x27;</span> + username)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎你：&#x27;</span> + username + <span class="string">&#x27;!&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="6-重构"><a href="#6-重构" class="headerlink" title="6.重构"></a>6.重构</h4><blockquote><p>remember.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># json.dump()  json.load() try-except-else 的组合使用</span></span><br><span class="line"><span class="comment"># 如果以前存储了用户名就加载它，否则就提示用户输入用户名并存储它</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_user</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;问候用户，并指出其名字&#x27;&#x27;&#x27;</span></span><br><span class="line">    filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">            username = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;在文件中读取到的信息是：&#x27;</span> + username)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="comment"># 保存用户输入时生成的数据到json文件中</span></span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&quot;请输入您的名字：&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">            json.dump(username, f_obj)  <span class="comment"># json.dump用来存储。   username：要存入json文本的数据源.   f_obj:存入到的文件的位置 username.json</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;这个人的名字叫：&#x27;</span> + username)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;欢迎你：&#x27;</span> + username + <span class="string">&#x27;!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">greet_user()</span><br></pre></td></tr></table></figure><blockquote><p>remember.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># json.dump()  json.load() try-except-else 的组合使用</span></span><br><span class="line"><span class="comment"># 如果以前存储了用户名就加载它，否则就提示用户输入用户名并存储它</span></span><br><span class="line"><span class="comment"># 定义函数 get_stored_username 读取已经存在的用户信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stored_username</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;问候用户，并指出其名字&#x27;&#x27;&#x27;</span></span><br><span class="line">    filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">            username = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;在文件中读取到的信息是：&#x27;</span> + username)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取不到已经存在的信息 使用greet_user函数 提示用户输入信息 并写入到json文件中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_user</span>():</span><br><span class="line">    username = get_stored_username()</span><br><span class="line">    <span class="keyword">if</span> username:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;这个人的名字叫：&quot;</span> + username)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        username = <span class="built_in">input</span>(<span class="string">&#x27;请输出您的名字：&#x27;</span>)</span><br><span class="line">        filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">            json.dump(username, f_obj)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;用户输入的数据是：&#x27;</span> + username)</span><br><span class="line"></span><br><span class="line">greet_user()</span><br><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># json.dump()  json.load() try-except-else 的组合使用</span></span><br><span class="line"><span class="comment"># 如果以前存储了用户名就加载它，否则就提示用户输入用户名并存储它</span></span><br><span class="line"><span class="comment"># 定义函数 get_stored_username 读取已经存在的用户信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stored_username</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;问候用户，并指出其名字&#x27;&#x27;&#x27;</span></span><br><span class="line">    filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">            username = json.load(f_obj)  <span class="comment"># json.load用来读取。  f_obj:读取的数据源的位置</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;在文件中读取到的信息是：&#x27;</span> + username)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> username</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_new_username</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;提示用户输入姓名&#x27;&#x27;&#x27;</span></span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&#x27;请输出您的名字：&#x27;</span>)</span><br><span class="line">    filename = <span class="string">&#x27;username.json&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f_obj:</span><br><span class="line">        json.dump(username, f_obj)</span><br><span class="line">    <span class="keyword">return</span> username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取到已经存在的信息就调用get_stored_username函数并输出</span></span><br><span class="line"><span class="comment"># 读取不到已经存在的信息 调用get_new_username函数 提示用户输入信息 并写入到username.json文件中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet_user</span>():</span><br><span class="line">    username = get_stored_username()</span><br><span class="line">    <span class="keyword">if</span> username:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;这个人的名字叫：&quot;</span> + username)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        username = get_new_username()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;用户输入的数据是：&#x27;</span> + username)</span><br><span class="line"></span><br><span class="line">greet_user()</span><br></pre></td></tr></table></figure><h3 id="11-测试代码"><a href="#11-测试代码" class="headerlink" title="11.测试代码"></a>11.测试代码</h3><h4 id="1-测试函数"><a href="#1-测试函数" class="headerlink" title="1.测试函数"></a>1.测试函数</h4><blockquote><p>name_function.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">def</span> <span class="title function_">get_formatted_name</span>(<span class="params">first, last</span>):</span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;生成整洁的名字&#x27;&#x27;&#x27;</span></span><br><span class="line">   full_name = first + <span class="string">&#x27; &#x27;</span> + last</span><br><span class="line">   <span class="keyword">return</span> full_name.title()</span><br></pre></td></tr></table></figure><blockquote><p>name.py           from      模块名     import     函数名</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> name_function <span class="keyword">import</span> get_formatted_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># from name_function import *</span></span><br><span class="line"><span class="comment"># from name_function import get_formatted_name as gfn</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;输入‘q’就是退出程序！&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    first = <span class="built_in">input</span>(<span class="string">&#x27;请输入你的第一个名字：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> first == <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    last = <span class="built_in">input</span>(<span class="string">&#x27;请输入你的最后一个名字：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> last == <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    formatted_name = get_formatted_name(first, last)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t用户输入的两个名字结果是：&#x27;</span> + formatted_name)</span><br></pre></td></tr></table></figure><h4 id="2-单元测试和测试用例-可通过测试-添加新测试"><a href="#2-单元测试和测试用例-可通过测试-添加新测试" class="headerlink" title="2.单元测试和测试用例 &#x2F; 可通过测试 &#x2F; 添加新测试"></a>2.单元测试和测试用例 &#x2F; 可通过测试 &#x2F; 添加新测试</h4><blockquote><p>name_function.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">def</span> <span class="title function_">get_formatted_name</span>(<span class="params">first, last</span>):</span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;生成整洁的名字&#x27;&#x27;&#x27;</span></span><br><span class="line">   full_name = first + <span class="string">&#x27; &#x27;</span> + last</span><br><span class="line">   <span class="keyword">return</span> full_name.title()</span><br></pre></td></tr></table></figure><blockquote><p>test_name_function.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> name_function <span class="keyword">import</span> get_formatted_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NamesTestCase</span>(unittest.TestCase):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;测试 name_function.py&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_first_last_name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;看处理的信息 是否断言等于(assertEqual) 预期的输出信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        formatted_name = get_formatted_name(<span class="string">&#x27;wuai&#x27;</span>, <span class="string">&#x27;rj&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(formatted_name, <span class="string">&#x27;Wuai Rj&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><p><strong>添加新测试</strong></p><blockquote><p>name_funciton.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">def</span> <span class="title function_">get_formatted_name</span>(<span class="params">first, last</span>):</span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;生成整洁的名字&#x27;&#x27;&#x27;</span></span><br><span class="line">   full_name = first + <span class="string">&#x27; &#x27;</span> + last</span><br><span class="line">   <span class="keyword">return</span> full_name.title()</span><br></pre></td></tr></table></figure><blockquote><p>test_name_function.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> name_function <span class="keyword">import</span> get_formatted_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NamesTestCase</span>(unittest.TestCase):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;测试 name_function.py&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_first_last_name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;看处理的信息 是否断言等于(assertEqual) 预期的输出信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        formatted_name = get_formatted_name(<span class="string">&#x27;wuai&#x27;</span>, <span class="string">&#x27;rj&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(formatted_name, <span class="string">&#x27;Wuai Rj&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">xin_test_first_last_name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;看处理的信息 是否断言等于(assertEqual) 预期的输出信息&#x27;&#x27;&#x27;</span></span><br><span class="line">        formatted_name = get_formatted_name(<span class="string">&#x27;rj&#x27;</span>, <span class="string">&#x27;wuai&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(formatted_name, <span class="string">&#x27;Rj Wuai&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><h4 id="3-测试类"><a href="#3-测试类" class="headerlink" title="3.测试类"></a>3.测试类</h4><blockquote><p>测试中常用的6种的断言方法</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码        <span class="variable language_">self</span>.assertEqual(a,b)                    <span class="comment">#核实a==b</span></span><br><span class="line">       <span class="variable language_">self</span>.assertNotEqual(a,b)                 <span class="comment">#核实a!=b</span></span><br><span class="line">       <span class="variable language_">self</span>.assertTrue(x)                       <span class="comment">#核实x为True</span></span><br><span class="line">       <span class="variable language_">self</span>.assertFalse(x)                      <span class="comment">#核实x为false</span></span><br><span class="line">       <span class="variable language_">self</span>.assertIn(item,<span class="built_in">list</span>)                 <span class="comment">#核实item在list中</span></span><br><span class="line">       <span class="variable language_">self</span>.assertNotIn(item,<span class="built_in">list</span>)              <span class="comment">#核实item不在list中</span></span><br></pre></td></tr></table></figure><blockquote><p>survey.py                          #一个要测试的类</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">复制代码 隐藏代码<span class="keyword">class</span> <span class="title class_">AnonymousSurvey</span>():</span><br><span class="line">   <span class="string">&#x27;&#x27;&#x27;收集匿名调查问卷的答案&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, question</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;存储一个问题，并未存储答案做准备&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="variable language_">self</span>.question = question</span><br><span class="line">       <span class="variable language_">self</span>.responses = []</span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">show_question</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;显示调查问卷&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="variable language_">self</span>.question)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">store_response</span>(<span class="params">self, new_response</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;存储单份调查问卷&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="variable language_">self</span>.responses.append(new_response)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">show_results</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="string">&#x27;&#x27;&#x27;显示收集到的所有答卷&#x27;&#x27;&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&#x27;调查的结果是:&#x27;</span>)</span><br><span class="line">       <span class="keyword">for</span> response <span class="keyword">in</span> <span class="variable language_">self</span>.responses:</span><br><span class="line">           <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> + response)</span><br></pre></td></tr></table></figure><blockquote><p>language_survey.py        #一个要使用测试的类的类</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">from</span> survey <span class="keyword">import</span> AnonymousSurvey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个问题并创建一个表示调查的AnonymousSurvey对象</span></span><br><span class="line">question = <span class="string">&#x27;what language did you first learn to speak?&#x27;</span></span><br><span class="line">my_survey = AnonymousSurvey(question)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示问题并存储答案</span></span><br><span class="line">my_survey.show_question()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;用户输入&#x27;q&#x27;就可以退出&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    response = <span class="built_in">input</span>(<span class="string">&#x27;Language:&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> response == <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    my_survey.store_response(response)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示要调查的结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;很感谢你参与这个调查！&#x27;</span>)</span><br><span class="line">my_survey.show_results()</span><br></pre></td></tr></table></figure><p><strong>测试AnonymousSurvey类</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> survey <span class="keyword">import</span> AnonymousSurvey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子类继承父类 父类是测试类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAnonymousSurvey</span>(unittest.TestCase):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;针对AnonymousSurvey类的测试&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_store_single_response</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;测试单个答案会被妥善的存储&#x27;&#x27;&#x27;</span></span><br><span class="line">        question = <span class="string">&#x27;what language did you first learn to speak?&#x27;</span></span><br><span class="line">        my_survey = AnonymousSurvey(question)</span><br><span class="line">        my_survey.store_response(<span class="string">&#x27;English&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertIn(<span class="string">&#x27;English&#x27;</span>, my_survey.responses)  <span class="comment"># 核实Englishm是否在my_survey.responses中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><blockquote><p>test_survey.py          for遍历测试类中的答案列表                     方法 setUp()</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> survey <span class="keyword">import</span> AnonymousSurvey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子类继承父类 父类是测试类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAnonymousSurvey</span>(unittest.TestCase):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;针对AnonymousSurvey类的测试&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUp</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;创建一个调差对象和一组答案，供使用的测试方法使用&#x27;&#x27;&#x27;</span></span><br><span class="line">        question = <span class="string">&#x27;what language did you first learn to speak?&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.my_survey = AnonymousSurvey(question)</span><br><span class="line">        <span class="variable language_">self</span>.response = [<span class="string">&#x27;English&#x27;</span>, <span class="string">&#x27;Spanish&#x27;</span>, <span class="string">&#x27;Mandarin&#x27;</span>, <span class="string">&#x27;Chinese&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_store_single_response</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;测试单个答案会被妥善的存储&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.my_survey.store_response(<span class="variable language_">self</span>.response[<span class="number">0</span>])</span><br><span class="line">        <span class="variable language_">self</span>.assertIn(<span class="variable language_">self</span>.response[<span class="number">0</span>], <span class="variable language_">self</span>.my_survey.responses)  <span class="comment"># 核实Englishm是否在my_survey.responses中</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_store_three_responses</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;测试三个答案会被妥善的存储&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> response <span class="keyword">in</span> <span class="variable language_">self</span>.response:</span><br><span class="line">            <span class="variable language_">self</span>.my_survey.store_response(response)</span><br><span class="line">        <span class="keyword">for</span> response <span class="keyword">in</span> <span class="variable language_">self</span>.response:</span><br><span class="line">            <span class="variable language_">self</span>.assertIn(response, <span class="variable language_">self</span>.my_survey.responses)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><h3 id="12-写一个简单的程序-打包为exe并运行"><a href="#12-写一个简单的程序-打包为exe并运行" class="headerlink" title="12.写一个简单的程序&#x2F;打包为exe并运行"></a>12.写一个简单的程序&#x2F;打包为exe并运行</h3><blockquote><p>shuzi.py          创建1~100的一个数字列表，存储在文件shuzi.txt中，并读取显示在控制台！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> 复制代码 隐藏代码<span class="built_in">print</span>(<span class="string">&#x27;创建1~100的一个数字列表，存储在文件shuzi.txt中，并读取显示在控制台！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">kaishi</span>():</span><br><span class="line">    message = <span class="built_in">input</span>(<span class="string">&#x27;请用户输入开始或者结束(Y/N):&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> message == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        <span class="comment"># 创建一个1~100的数字列表 并输出到文件</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你！文件内容输出已成功！&#x27;</span>)</span><br><span class="line">        number = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>))</span><br><span class="line">        <span class="built_in">print</span>(number)</span><br><span class="line">        file_name = <span class="string">&#x27;1~100.txt&#x27;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">            <span class="keyword">for</span> shuzi <span class="keyword">in</span> number:</span><br><span class="line">                file_object.write(<span class="built_in">str</span>(shuzi) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file_object:</span><br><span class="line">            line = file_object.readlines()</span><br><span class="line">            <span class="keyword">for</span> shuzi <span class="keyword">in</span> line:</span><br><span class="line">                <span class="built_in">print</span>(shuzi.strip())</span><br><span class="line">    <span class="keyword">elif</span> message == <span class="string">&#x27;N&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;很抱歉，您选择了退出！拜拜!&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;注意！！！ 请按照指令输入哦！Y或者N &#x27;</span>)</span><br><span class="line">        kaishi()</span><br><span class="line"></span><br><span class="line">kaishi()</span><br></pre></td></tr></table></figure><h4 id="1-打包教程"><a href="#1-打包教程" class="headerlink" title="1.打包教程"></a>1.打包教程</h4><p><a href="https://www.cnblogs.com/lyy135146/p/11867754.html">打包生成参考链接1</a>  <a href="https://www.cnblogs.com/ZFJ1094038955/p/13375740.html">打包生成参考链接2</a></p><p>win+R 输入cmd 进入命令行窗口     执行 <code>pip install Pyinstaller</code> 安装打包的插件</p><p>之后cd 到要打包的文件项目的路径下：<code>D:\SoftwareProject\PyCharmProject\peoject1</code></p><p>也可以在文件项目的窗口路径前直接 添加 <code>cmd D:\SoftwareProject\PyCharmProject\peoject1</code> <code>敲回车进入</code></p><p>在cmd 窗口中执行命令 <code>Pyinstaller -F test(要打包的文件名).py</code></p><blockquote><p>Pyinstaller -F 文件名.py  &#x2F;&#x2F;打包exe</p><p>Pyinstaller -F -w 文件名.py  &#x2F;&#x2F;不带控制台的打包</p><p>Pyinstaller -F -i xx.ico 文件名.py   &#x2F;&#x2F;打包指定exe图标打包</p></blockquote><p>出现completed successfully就成功了。</p><p>生成的exe文件在dist里，这个exe文件单独拿出来放在任何的位置都可以运行。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2024/10/12/Java%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/10/12/Java%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Java的基础知识"><a href="#Java的基础知识" class="headerlink" title="Java的基础知识"></a>Java的基础知识</h1><blockquote><p>前置准备工作，Windows，能访问外网以及内网服务器的电脑。（好用的脑子一个）</p></blockquote><h4 id="JDK的组成"><a href="#JDK的组成" class="headerlink" title="JDK的组成"></a>JDK的组成</h4><p>JVM—————– JVM（Java Virtual Machine）：java虚拟机，真正运行Java的地方</p><p>核心类库———-核心类库：Java写好主机的程序，给程序员自己的程序调用的</p><p>开发工具:———-JRE（JAVA Runtime Environment）：Java的运行环境</p><p>Java | Javac        JDK（JAVA Development Kit）：Java开发工具包（包括JVM，核心类库，JRE）</p><ul><li><p>Java程序是先用javac进行编译，后用java进行输出。</p></li><li><p>在计算机中，任意数据都是以二进制的形式来存储的</p></li></ul><hr><h4 id="Java的跨平台，工作原理"><a href="#Java的跨平台，工作原理" class="headerlink" title="Java的跨平台，工作原理"></a>Java的跨平台，工作原理</h4><ul><li>一次编译，处处可用。</li></ul><blockquote><p> Java程序—–&gt;(javac编译)—–&gt;Class文件</p><p> Java为我们写好了JVM虚拟机运行环境，这使得我们可以在Windows，Linux，MacOS都可以无缝衔接的运行javac编译好的Java文件。</p></blockquote><hr><h4 id="Java-Path配置"><a href="#Java-Path配置" class="headerlink" title="Java Path配置"></a>Java Path配置</h4><p>1.什么是Path环境变量？</p><ul><li>Path环境变量用于配置程序的路径</li><li>方便我们在命令行窗口的任意目录启动程序</li></ul><p>2.JDK安装时，环境变量需要注意什么？</p><ul><li>较新的JDK会自动配置PATH环境变量，较老的JDK版本则不会</li><li>建议还是主机配置一下“path”，“JAVA_HOME”</li></ul><hr><h4 id="IDEA开发工具的使用"><a href="#IDEA开发工具的使用" class="headerlink" title="IDEA开发工具的使用"></a>IDEA开发工具的使用</h4><blockquote><p>在Java中常见的开发工具有：Eclipse, MyEclipse, <strong>Intellij IDEA</strong>, Jbuilder, NetBeans等</p></blockquote><p><strong>IDEA管理Java程序结构</strong></p><blockquote><ul><li>Project(项目，工程)</li><li>Module(模块)</li><li>Package(包)</li><li>Class(类)</li></ul></blockquote><h4 id="IDEA开发第一个Java程序："><a href="#IDEA开发第一个Java程序：" class="headerlink" title="IDEA开发第一个Java程序："></a>IDEA开发第一个Java程序：</h4><ol><li>创建工程（Project）</li><li>创建模块（Module）</li><li>创建包（Package）</li><li>创建类（Class）</li></ol><p><strong>使用IDEA开发一个输出HelloWorld</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> fun.yexiaonan.one;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="IDEA应用设置"><a href="#IDEA应用设置" class="headerlink" title="IDEA应用设置"></a>IDEA应用设置</h4><ul><li><p>设置主题</p></li><li><p>File &gt; Settings &gt; Appearance &gt; Theme</p></li><li><p>设置字体大小</p></li><li><p>File &gt; Settings &gt; Editor &gt; Font</p></li></ul><hr><h4 id="IDEA快捷键"><a href="#IDEA快捷键" class="headerlink" title="IDEA快捷键"></a>IDEA快捷键</h4><table><thead><tr><th>快捷键</th><th>功能效果</th></tr></thead><tbody><tr><td>main&#x2F;psvm,sout</td><td>快速插入相关代码</td></tr><tr><td>Ctrl + D</td><td>复制当前选中代码到下一行</td></tr><tr><td>Ctrl + Y</td><td>删除所在行，建议用 Ctrl + X（剪切）</td></tr><tr><td>Ctrl + ALT + L</td><td>格式化代码</td></tr><tr><td>ALT + SHIFT + ↑ ，ALT + SHIFT + ↓</td><td>上下移动当前代码</td></tr><tr><td>Ctrl + &#x2F; , Ctrl + SHIFT + &#x2F;</td><td>对代码进行注释</td></tr></tbody></table><h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h4 id="Java单行注释"><a href="#Java单行注释" class="headerlink" title="Java单行注释"></a>Java单行注释</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java单行注释</span></span><br><span class="line"><span class="keyword">package</span> speedkay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpeedKey</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 以下是一个打印语句。程序在运行时不会输出这个注释里面的内容</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="Java多行注释"><a href="#Java多行注释" class="headerlink" title="Java多行注释"></a>Java多行注释</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Java多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> speedkay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpeedKey</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        以下是一个打印语句。程序在运行时不会输出这个注释里面的内容</span></span><br><span class="line"><span class="comment">        嘻嘻</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="Java文档注释"><a href="#Java文档注释" class="headerlink" title="Java文档注释"></a>Java文档注释</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">文档注释的写法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> speedkay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpeedKey</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        以下是一个打印语句。程序在运行时不会输出这个注释里面的内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="Java字面量"><a href="#Java字面量" class="headerlink" title="Java字面量"></a>Java字面量</h4><blockquote><p>在Java中，他的输出字符串与数字的方式与我们正常书写一样</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> fun.yexiaonan.day02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.整数打印</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.小数打印</span></span><br><span class="line">        System.out.println(<span class="number">8.8</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.字符写法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;中&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.空字符</span></span><br><span class="line">        System.out.println(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.特殊字符(换行)</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.特殊字符(Tab缩进)</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 7.字符串必须用双引号括起来，里面内容可以随意</span></span><br><span class="line">        System.out.println(<span class="string">&quot;I Love China!&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;我爱你中国&quot;</span>);</span><br><span class="line">        <span class="comment">// 双引号里面不加字符也能进行输出不会报错，但是单引号就不行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 8.布尔值 只有两个值 False True</span></span><br><span class="line">        System.out.println(<span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="Java字面量总结"><a href="#Java字面量总结" class="headerlink" title="Java字面量总结"></a>Java字面量总结</h4><ol><li><strong>字符</strong>必须用单引号围起来，而且仅能有一个字符</li><li><strong>字符串</strong>必须用双引号围起来</li><li>几个常见的特殊值的书写格式：<ul><li>true</li><li>false</li><li>null</li><li>\n</li><li>\t</li></ul></li></ol><hr><h4 id="Java变量"><a href="#Java变量" class="headerlink" title="Java变量"></a>Java变量</h4><blockquote><p>变量是用来记住程序要处理的数据的</p><p>使用变量便于扩展和维护</p></blockquote><p>变量的定义格式：</p><p><img src="https://pxy.shenyi.cyou/2024/10/18/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241018092529.png" alt="微信图片_20241018092529.png"></p><p>变量中的数值是可以被替换的</p><p>例如:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age2</span> <span class="operator">=</span> <span class="number">18</span>;</span><br><span class="line">    age2 = <span class="number">19</span>;</span><br><span class="line">    System.out.println(age2);</span><br><span class="line"></span><br><span class="line">    age2 = age2 + <span class="number">1</span>;</span><br><span class="line">    System.out.println(age2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>①注意：</p><p>如果需要重复赋值，那么需要重复赋值的步骤</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;--------------------&quot;</span>);</span><br><span class="line">    <span class="comment">// 钱包里面有9.5元，收到了10元红包，又发出去了5月，输出钱包各阶段的余额</span></span><br><span class="line">    <span class="type">double</span> <span class="variable">mymoney</span> <span class="operator">=</span> <span class="number">9.5</span>;<span class="comment">// 给变量第一次赋值，带上变量类型</span></span><br><span class="line">    System.out.println(mymoney);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;收到了10元红包&quot;</span>);</span><br><span class="line">    mymoney = mymoney + <span class="number">10</span>;<span class="comment">// 给变量重复赋值，从右往左重新赋值</span></span><br><span class="line">    System.out.println(mymoney);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②注意：</p><ul><li>变量需要先声明才能使用</li><li>变量是什么类型，就应该用来<strong>赋值什么类型的数据</strong>，否则无法运行</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> <span class="string">&quot;有钱&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>变量从定义开始到 “}” 截至的范围内有效；而且同一个范围内，<strong>多个变量的名称不能重复</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>;</span><br><span class="line">System.out.println(age);</span><br><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">21</span>;</span><br></pre></td></tr></table></figure><ul><li>变量定义的时候可以不赋初始值；但是在使用时，<strong>变量里面必须有值</strong>，否则无法运行</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> age;</span><br><span class="line">System.out.println(age);</span><br></pre></td></tr></table></figure><hr><h4 id="Java变量总结"><a href="#Java变量总结" class="headerlink" title="Java变量总结"></a>Java变量总结</h4><ol><li>变量是用来存储数据的，本质是内存中的一块区域</li><li>变量的完整定义：<ul><li>数据类型  变量名称  &#x3D;  数据</li><li>int age &#x3D; 18；</li></ul></li><li>使用变量存储需要的数据，在书写代码时更加的灵活，管理代码更加方便</li><li>变量中的数据可以被替换</li></ol><hr><h4 id="Java关键字，标志符"><a href="#Java关键字，标志符" class="headerlink" title="Java关键字，标志符"></a>Java关键字，标志符</h4><ul><li>关键字</li></ul><p><img src="https://pxy.shenyi.cyou/2024/10/21/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241021082941.png" alt="微信图片_20241021082941.png"></p><blockquote><p>在Java中，关键字相当于Java自带的一些句子，在后续的变量中，变量名不能与Java的关键字相同</p></blockquote><h1 id="Java语法"><a href="#Java语法" class="headerlink" title="Java语法"></a>Java语法</h1><h4 id="Java的标识符"><a href="#Java的标识符" class="headerlink" title="Java的标识符"></a>Java的标识符</h4><p>》标识符：就是给<strong>类</strong>，<strong>方法</strong>，<strong>变量</strong>等起的名字</p><ol><li><p>标识符由数字，字母，下划线（ _ ）和美元符号（$）组成</p></li><li><p>不能以数字开头</p></li><li><p>不能是关键字</p></li><li><p>区分大小写</p></li></ol><ul><li><p>小驼峰命名法：方法，变量</p><ul><li><p>规范1：标识符是一个单词的时候，全部小写</p></li><li><p>规范1：<strong>name</strong></p></li><li><p>规范2：标识符由多个单词组成的时候，第一个字母小写，其他单词首字母大写</p></li><li><p>规范2：<strong>fristName</strong></p></li></ul></li><li><p>大驼峰命名法：类名</p><ul><li>规范1：标识符是一个单词的时候，首字母大写</li><li>规范1：Student</li><li>规范2：标识符由多个单词组成的时候，每个单词的首字母大写</li><li>规范2：GoodStudent</li></ul></li></ul><blockquote><p>给每一个标识符起名字的时候，都应该做到<strong>见名知意</strong></p></blockquote><h4 id="Java变量详解"><a href="#Java变量详解" class="headerlink" title="Java变量详解"></a>Java变量详解</h4><ul><li><p>变量里的数据在计算机中的存储原理</p><ul><li>二进制<ul><li>在Java中只有0，1，按照逢2进1的方式表示数据：</li><li><img src="https://pxy.shenyi.cyou/2024/10/21/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241021093350.png" alt="微信图片_20241021093350.png"></li></ul></li><li>计算机中表示数据的最小单元<ul><li>计算机中表示数据的最小单元：一个字节（Byte，简称B，是使用8个二进制位组成的）</li><li>字节中的每个二进制位就称为位（bit，简称B），1B&#x3D;8b</li></ul></li></ul></li><li><p>数据类型</p><ul><li><p>Text 文本</p><p>​ASCII 字符代码表 一</p></li></ul><p><img src="https://pxy.shenyi.cyou/2024/10/21/ASCII.png" alt="ASCII.png"></p><ul><li><p>Image 图片</p></li><li><p>Sound 声音</p></li></ul></li></ul><h4 id="Java类型转换"><a href="#Java类型转换" class="headerlink" title="Java类型转换"></a>Java类型转换</h4><ul><li>基本数据类型：4大类8大种</li></ul><table><thead><tr><th>数据类型</th><th>数据类型</th><th>内存占用（字节数）</th><th>数据范围</th></tr></thead><tbody><tr><td>整型</td><td>byte</td><td>1</td><td>-128~127</td></tr><tr><td>整型</td><td>short</td><td>2</td><td>-32768~32767</td></tr><tr><td>整型</td><td>int(默认)</td><td>4</td><td>-2147483648~2147483647(10位数，大概21亿多)</td></tr><tr><td>整型</td><td>long</td><td>8</td><td>-9223372036854775808~9223372036854775807（19位数）</td></tr><tr><td>浮点型（小数）</td><td>float</td><td>4</td><td>1.401298E -24 到3.4028235E+38</td></tr><tr><td>浮点型（小数）</td><td>double(默认)</td><td>8</td><td>4.90000000 E-324 到1.797693 E+308</td></tr><tr><td>字符型</td><td>char</td><td>2</td><td>0-65535</td></tr><tr><td>布尔型</td><td>boolean</td><td>1</td><td>true,false</td></tr></tbody></table><ul><li><p>在Java中由于整数的类型默认是<strong>int类型</strong>导致在写入长数据想要使用long类型时，需要在数据后面加上 <code>L 或者 l</code></p></li><li><p>在Java中由于浮点数的类型默认是<strong>double类型</strong>导致在写入某些数据想要使用float类型时，需要在数据后面加上 <code>F 或者 f</code></p><ul><li><p>例如：</p></li><li><pre><code class="java">public class Main &#123;    public static void main(String[] args) &#123;        long lg = 114514L; // 长数据类型        System.out.println(lg);    &#125;&#125;public static void main(String[] args) &#123;    // float double类型    // 随便写的小数字面量默认是double类型,如果希望是float类型，需要在后面加上F 或者 f    float f = 3.14F;    System.out.println(f);    double d = 3.1415926;    System.out.println(d);&#125;&#125;public static void main(String[] args) &#123;    // char 字符型    char ch = &#39;a&#39;;    char ch2 = &#39;中&#39;;    System.out.println(ch);    System.out.println(ch2);    // boolean 布尔型    boolean flag = true;    boolean flag1 = false;    System.out.println(flag);    System.out.println(flag1);&#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 引用数据类型:String</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    public class Main &#123;</span><br><span class="line">        public static void main(String[] args) &#123;</span><br><span class="line">            // String 字符串类型,定义的变量可以用于记住一个字符串类型</span><br><span class="line">            String name = &quot;叶小楠&quot;;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>自动类型转换，为什么要进行自动类型转换</p><ul><li><p>类型范围小的变量，可以直接赋值给类型范围大的变量。</p></li><li><pre><code class="java">public class Main &#123;    public static void main(String[] args) &#123;        // 目标；理解自动类型转换机制。        byte a = 12;        int b = a;        // 类型自动转换        System.out.println(a);        System.out.println(b);    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 小范围类型变量可以直接赋值给大范围类型变量</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    public class Main &#123;</span><br><span class="line">        public static void main(String[] args) &#123;</span><br><span class="line">            // 目标；理解自动类型转换机制。</span><br><span class="line">            byte a = 12;</span><br><span class="line">            int b = a;</span><br><span class="line">            // 类型自动转换</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            System.out.println(b);</span><br><span class="line">    </span><br><span class="line">            char name = &#x27;a&#x27;;</span><br><span class="line">            int i = name;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><hr><h4 id="Java组成"><a href="#Java组成" class="headerlink" title="Java组成"></a>Java组成</h4><ul><li>类</li><li>声明</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  public：访问修饰符</span></span><br><span class="line"><span class="comment"> *  class，static，void：声明类的关键字，声明一个类</span></span><br><span class="line"><span class="comment"> *  Java编程语言里，main 里面运行</span></span><br><span class="line"><span class="comment"> *  main代表的是方法名字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>类型参数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在Java的Class类中只能写两样参数。</span></span><br><span class="line"><span class="comment">1.属性：变量</span></span><br><span class="line"><span class="comment">【数据类型】 【变量名称】 = 【初始值】</span></span><br><span class="line"><span class="comment">int age = 18 ;</span></span><br><span class="line"><span class="comment">Java的类型有三种：</span></span><br><span class="line"><span class="comment">    整数型:</span></span><br><span class="line"><span class="comment">    byte</span></span><br><span class="line"><span class="comment">    short</span></span><br><span class="line"><span class="comment">    int[1]</span></span><br><span class="line"><span class="comment">    long[1]</span></span><br><span class="line"><span class="comment">    浮点型：</span></span><br><span class="line"><span class="comment">    float</span></span><br><span class="line"><span class="comment">    double[1]</span></span><br><span class="line"><span class="comment">    布尔类型：</span></span><br><span class="line"><span class="comment">    boolean[1]</span></span><br><span class="line"><span class="comment">    字符类型：</span></span><br><span class="line"><span class="comment">    char</span></span><br><span class="line"><span class="comment">2.行为，方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMain</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">TestMain</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestMain</span>();</span><br><span class="line">        <span class="comment">//调用方法：无参数，无返回值</span></span><br><span class="line">        test.printInfo();</span><br><span class="line">        <span class="comment">//调用方法：无参数，有返回值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> test.getNumber();</span><br><span class="line">        System.out.println(number);</span><br><span class="line">        <span class="comment">//调用方法：有参数，无返回值</span></span><br><span class="line">        test.setNumber(<span class="number">10</span>,<span class="string">&quot;叶&quot;</span>);</span><br><span class="line">        <span class="comment">//调用方法：有参数，有返回值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> test.sum(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">number1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    在Java中声明类的方法有四种</span></span><br><span class="line"><span class="comment">    1，方法是否有返回值</span></span><br><span class="line"><span class="comment">    2，方法是否有参数</span></span><br><span class="line"><span class="comment">        --1.无参数，无返回值</span></span><br><span class="line"><span class="comment">        --2.无参数，有返回值 </span></span><br><span class="line"><span class="comment">        --3.有参数，无返回值</span></span><br><span class="line"><span class="comment">        --4.有参数，有返回值</span></span><br><span class="line"><span class="comment">     声明一个方法</span></span><br><span class="line"><span class="comment">     【方法的返回值类型】 【方法名】(参数列表)&#123;</span></span><br><span class="line"><span class="comment">        代码</span></span><br><span class="line"><span class="comment">     &#125;</span></span><br><span class="line"><span class="comment">    3，</span></span><br><span class="line"><span class="comment">    4，</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">        <span class="comment">// 方法一:无参数，无返回值的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法二:无参数，有返回值的方法</span></span><br><span class="line">    <span class="comment">// return 是Java内置的关键字</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getNumber</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法三:有参数，无返回值的方法（可以接受多个参数）</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setNumber</span><span class="params">(<span class="type">int</span> number1 , String str01)</span>&#123;</span><br><span class="line">        System.out.println(number1);</span><br><span class="line">        System.out.println(str01);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法四:有参数，有返回值的方法</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java运算符"><a href="#Java运算符" class="headerlink" title="Java运算符"></a>Java运算符</h4><ul><li>在Java中有许多的运算，例如while，for，do…while。while语法结构</li><li>while语法结构</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>( 布尔表达式 ) &#123;</span><br><span class="line"><span class="comment">// 循环内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>while语法案例</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> day;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 在控制台打印出1~10个数字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>do…while语法结构</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">&#125;<span class="keyword">while</span>(布尔表达式);</span><br></pre></td></tr></table></figure><ul><li><strong>do…while语法案例</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> day;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// 在控制台打印出1~10个数字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>for语法结构</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化；布尔表达式；更新) &#123;</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>for语法案例</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 在控制台打印出1~10个数字</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i&lt;=<span class="number">10</span> ; i++) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>增强for循环语法结构</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句 ：表达式)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 代码句子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>增强for循环语法案例</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 在控制台打印出1~10个数字</span></span><br><span class="line">        <span class="type">int</span>[] a =<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : a)&#123;</span><br><span class="line">            System.out.println(num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java中的计算符"><a href="#Java中的计算符" class="headerlink" title="Java中的计算符"></a>Java中的计算符</h4><ul><li><p>在Java中如果需要用到数字进行运算，那么也跟我们现实中的运算一样</p></li><li><p>例子</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 加法</span></span><br><span class="line">        System.out.println(<span class="number">3</span>+<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 减法</span></span><br><span class="line">        System.out.println(<span class="number">5</span>-<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 除法</span></span><br><span class="line">        System.out.println(<span class="number">3</span>/<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 乘法</span></span><br><span class="line">        System.out.println(<span class="number">3</span>*<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 取模</span></span><br><span class="line">        System.out.println(<span class="number">3</span>%<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>取模的用法</li><li>在Java中，取模操作是指求两个数相除后的余数。它使用 <code>%</code> 运算符来实现。例如，如果你有两个整数 <code>a</code> 和 <code>b</code>（其中 <code>b</code> 不为0），<code>a % b</code> 的结果将是 <code>a</code> 除以 <code>b</code> 后的余数。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NumTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 需求：</span></span><br><span class="line">        <span class="comment">// 键盘录入三位数，将其拆分为个位，十位，百位，打印在控制台</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个三位数：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">NumA</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">one</span> <span class="operator">=</span> NumA % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">two</span> <span class="operator">=</span> NumA / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">three</span> <span class="operator">=</span> NumA / <span class="number">10</span> / <span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">        System.out.println(one);</span><br><span class="line">        System.out.println(two);</span><br><span class="line">        System.out.println(three);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java-IF判断语句"><a href="#Java-IF判断语句" class="headerlink" title="Java IF判断语句"></a>Java IF判断语句</h4><ul><li>在Java中IF可以用来判断数据是否相同</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编写一个简单的Java判断语句</span></span><br><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTestFor1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// if</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;yexiaonan1&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="string">&quot;yexiaonan&quot;</span>)&#123;</span><br><span class="line">            <span class="comment">// 代码体1 （当名字等于yexiaonan执行代码体1）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;你好世界&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 代码体2 （当名字不等于yexiaonan执行代码体2并且退出IF）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;他不是yexiaonan&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IF中还可以循环嵌套一个if</span></span><br><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTestFor1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// if</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;叶小楠1&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="string">&quot;叶小楠&quot;</span>)&#123;</span><br><span class="line">            <span class="comment">// 代码体1 （当名字等于yexiaonan执行代码体1）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;你好世界&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(name == <span class="string">&quot;叶小楠1&quot;</span>)&#123;</span><br><span class="line">            <span class="comment">// 代码体2 （当名字不等于yexiaonan执行代码体2并且退出IF）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;他不是yexiaonan&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象"></a>Java面向对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.属性（变量）</span></span><br><span class="line"><span class="comment"> * 2.行为（方法）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFristClass</span> &#123;</span><br><span class="line">    <span class="comment">// 名字</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;木棍&quot;</span>;</span><br><span class="line">    <span class="comment">// 年龄</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 颜色</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">color</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 行为</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String food)</span>&#123;</span><br><span class="line">        <span class="comment">// 如果小木棍吃到肉肉了</span></span><br><span class="line">        <span class="keyword">if</span>(food == <span class="string">&quot;肉&quot;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;今天吃了肉肉感觉自己萌萌哒&quot;</span>);</span><br><span class="line">            <span class="comment">// 如果吃到其他东西</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (food == <span class="string">&quot;其他&quot;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;今天吃到屎了&quot;</span>);</span><br><span class="line">            <span class="comment">// 如果吃到没有分类的</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;人机&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">(<span class="type">int</span> time)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(time &gt; <span class="number">8</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;今天睡了八个小时，感觉自己神经&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;今天没睡够八个小时，人机吧你&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// name = 小小木棍1号</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// &quot;name: &quot; [打印字符串]</span></span><br><span class="line">        <span class="comment">// name     [name相当于变量]</span></span><br><span class="line">        <span class="comment">// 相当于字符串与变量的拼接</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name: &quot;</span> + name + <span class="string">&quot;age: &quot;</span> + age +<span class="string">&quot;color: &quot;</span> + color);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Api</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建第一个木棍实例</span></span><br><span class="line">        <span class="type">MyFristClass</span> <span class="variable">MyFristClass1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFristClass</span>();</span><br><span class="line"></span><br><span class="line">        MyFristClass1.name = <span class="string">&quot;小木木1号&quot;</span>;</span><br><span class="line">        MyFristClass1.age = <span class="number">18</span>;</span><br><span class="line">        MyFristClass1.color = <span class="string">&quot;黑人&quot;</span>;</span><br><span class="line">        <span class="comment">// 将木棍打印到控制台</span></span><br><span class="line">        MyFristClass1.printInfo();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 创建第二个木棍实例</span></span><br><span class="line">        <span class="type">MyFristClass</span> <span class="variable">MyFristClass2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFristClass</span>();</span><br><span class="line"></span><br><span class="line">        MyFristClass2.name = <span class="string">&quot;小木木2号&quot;</span>;</span><br><span class="line">        MyFristClass2.age = <span class="number">19</span>;</span><br><span class="line">        MyFristClass2.color = <span class="string">&quot;白人&quot;</span>;</span><br><span class="line">        <span class="comment">// 将木棍打印到控制台</span></span><br><span class="line">        MyFristClass2.printInfo();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Java的New使用<ul><li>在Java中可以使用New来创建一个类的实例，例如我有一个<code>Task1</code>的类，那么可以永以下方法来创建它的一个新实例</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> fun.test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Task2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建第一个木棍实例</span></span><br><span class="line">        <span class="type">Task1</span> <span class="variable">Frist1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Task1</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>调用构造函数<ul><li>New关键字会调用类的构造函数来初始化对象。如果类中定义了构造函数，new会条用匹配的构造函数。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Car</span> <span class="variable">myCar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Car</span>(<span class="string">&quot;Toyota&quot;</span>, <span class="number">2020</span>); <span class="comment">// 假设Car类有一个接受两个参数的构造函数</span></span><br></pre></td></tr></table></figure><h4 id="Java构造方法"><a href="#Java构造方法" class="headerlink" title="Java构造方法"></a>Java构造方法</h4><ul><li>在Java中，如果没有特意声明构造方法那么默认会构造一个没有返回值的方法，如果有需要，可以使用 <code>public 构造方法名字(传参)</code>来构造一个新的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> color</span></span><br><span class="line"><span class="comment"> * 声明一个构造方法，当前的一个构造方法接受三个参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Task1</span><span class="params">(String name,<span class="type">int</span> age,String color)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这是一个三个参数的构造方法&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.color = color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>小测试<ul><li>创建一个<code>类</code><ul><li>存在三种不同的构造方法</li><li>无参数的构造方法</li><li>1个参数的构造方法</li><li>多个参数的构造方法</li></ul></li><li>创建三个不同的对象，要求每个实例必须调用的是不同的构造方法。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Task</span> &#123;</span><br><span class="line">    <span class="comment">// 创建三个全局变量</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">UserName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">UserAge</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">PeopleSinks</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个无参数的返回值类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Task</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.UserName = <span class="string">&quot;PanNiXiaLangZai&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.UserAge = <span class="number">19</span>;</span><br><span class="line">        <span class="built_in">this</span>.PeopleSinks = <span class="string">&quot;黑皮&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建一个无参数的返回值类: &quot;</span> + <span class="built_in">this</span>.UserName + <span class="string">&quot; 年龄 &quot;</span> + <span class="built_in">this</span>.UserAge + <span class="string">&quot; 皮肤颜色 &quot;</span> + <span class="built_in">this</span>.PeopleSinks);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个只接受一个参数的返回值类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Task</span><span class="params">(String UserName)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.UserName = UserName;</span><br><span class="line">        <span class="built_in">this</span>.UserAge = <span class="number">17</span>;</span><br><span class="line">        <span class="built_in">this</span>.PeopleSinks = <span class="string">&quot;白皮&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建一个只接受一个参数的返回值类: &quot;</span> + <span class="built_in">this</span>.UserName + <span class="string">&quot; 年龄 &quot;</span> + <span class="built_in">this</span>.UserAge + <span class="string">&quot; 皮肤颜色 &quot;</span> + <span class="built_in">this</span>.PeopleSinks);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个接受多个参数的返回值类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Task</span><span class="params">(String UserName,<span class="type">int</span> UserAge,String PeopleSinks)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.UserName = UserName;</span><br><span class="line">        <span class="built_in">this</span>.UserAge = UserAge;</span><br><span class="line">        <span class="built_in">this</span>.PeopleSinks = PeopleSinks;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建一个接受多个参数的返回值类: &quot;</span> + <span class="built_in">this</span>.UserName + <span class="string">&quot; 年龄 &quot;</span> + <span class="built_in">this</span>.UserAge + <span class="string">&quot; 皮肤颜色 &quot;</span> + <span class="built_in">this</span>.PeopleSinks);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个输出语句，用于测试</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建第一个无参数返回值的输出语句，不需要添加内容</span></span><br><span class="line">        <span class="type">Task</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Task</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建第二个只接收一个参数返回值的输出语句，往里面添加姓名</span></span><br><span class="line">        <span class="type">Task</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Task</span>(<span class="string">&quot;体育生&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建第三个接受多个参数返回值的输出语句，往里面插入三条数据</span></span><br><span class="line">        <span class="type">Task</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Task</span>(<span class="string">&quot;黑皮体育生&quot;</span>,<span class="number">18</span>,<span class="string">&quot;黑色&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java的封装"><a href="#Java的封装" class="headerlink" title="Java的封装"></a>Java的封装</h4><ul><li><p>在面向对象程式设计方法中，封装是指将实现部分的细节部分包装，从而达到隐藏起来的方法</p><ol><li>封装可以被认为是一个保护屏障，防止该<code>类</code>的代码和数据被外部定义的代码随机访问</li><li>要访问该类的代码和数据，必须通过严格的接口来控制</li></ol></li><li><p>Java种是使用“访问修饰符”来控制哪些细节需要封装，哪些细节需要暴漏的。Java种的4种“访问修饰符”分别为private，default，protected，public。它们说明了面向对象的封装性。</p></li></ul><table><thead><tr><th align="center">修饰符</th><th align="center">同一个类</th><th align="center">同一个包</th><th align="center">子类</th><th align="center">所有类</th></tr></thead><tbody><tr><td align="center"><strong>private</strong></td><td align="center">*****</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>default</strong></td><td align="center">*****</td><td align="center">*****</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><strong>protected</strong></td><td align="center">*****</td><td align="center">*****</td><td align="center">*****</td><td align="center"></td></tr><tr><td align="center"><strong>public</strong></td><td align="center">*****</td><td align="center">*****</td><td align="center">*****</td><td align="center">*****</td></tr></tbody></table><ol><li>private 表示私有，只有自己类能访问</li><li>default 表示没有访问修饰符，只有同一个包内可以访问</li><li>protected 表示可以被同一个包的类以及其他包中的子类可以访问</li><li>public 表示全部人都可以访问</li></ol><ul><li><p>Protected 【小细节】</p><ul><li>1.若父类和子类在同一个包中，子类可以访问父类的 Protected 成员，也可以访问父类对象的 Protected 成员。</li><li>2.若子类和父类不在同一个包中，子类可以访问父类的 Protected 成员，不能访问父类对象的 Protected 成员。</li></ul></li><li><p>小案例（用户到银行存钱和取钱）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Packaging;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 需求：</span></span><br><span class="line"><span class="comment"> *  BankSystem：</span></span><br><span class="line"><span class="comment"> *      属性：有多少钱</span></span><br><span class="line"><span class="comment"> *      行为：</span></span><br><span class="line"><span class="comment"> *          put：支持用户存钱</span></span><br><span class="line"><span class="comment"> *              返回值：</span></span><br><span class="line"><span class="comment"> *              --boolean（布尔返回值类型【True：存钱成功，False：存钱失败】）</span></span><br><span class="line"><span class="comment"> *              --int （数字判断类型【1：存钱成功，False：存钱失败】）</span></span><br><span class="line"><span class="comment"> *              --void （可以在程序中写好对应的返回类型）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *              参数：</span></span><br><span class="line"><span class="comment"> *              --存储了多少钱</span></span><br><span class="line"><span class="comment"> *          get：支持用户取钱</span></span><br><span class="line"><span class="comment"> *              返回值：</span></span><br><span class="line"><span class="comment"> *              --int（成功取出多少钱）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *              参数：</span></span><br><span class="line"><span class="comment"> *              --int（你想取出多少钱）</span></span><br><span class="line"><span class="comment"> *  User:</span></span><br><span class="line"><span class="comment"> *      行为：</span></span><br><span class="line"><span class="comment"> *          put：存钱</span></span><br><span class="line"><span class="comment"> *          get：取钱</span></span><br><span class="line"><span class="comment"> *  APP：</span></span><br><span class="line"><span class="comment"> *      模拟用户存钱和取钱的一个过程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BankSystem</span> &#123;</span><br><span class="line">    <span class="comment">// 取款机里面现在有10w元</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1000000</span>;    <span class="comment">// 11w</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> money)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;【小楠Bank】存钱成功！&quot;</span>) ;</span><br><span class="line">        BankSystem.money = BankSystem.money + money;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> money)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (BankSystem.money &gt; money)&#123;</span><br><span class="line">            BankSystem.money = BankSystem.money - money;</span><br><span class="line">            System.out.println(<span class="string">&quot;【小楠Bank】取钱成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;【小楠Bank】取钱失败qwq，当前取款机没那么钱&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getBankSystemMoney</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (password.equals(<span class="string">&quot;123456&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> BankSystem.money;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您不是系统管理员，无法查看系统存储多少钱&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.一个类里面如果没有显示的声明无参数构造方法的话，那么系统会自动生成一个无参数的构造方法</span></span><br><span class="line"><span class="comment">2.如果在一个类里面显示的声明了一个有参数的构造方法，那么无参数的构造方法系统不会自动生成</span></span><br><span class="line"><span class="comment">3.在类里面声明一个有参数的构造方法的话，那么无参数的构造方法的话要自动不全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认的，我们在声明一个类的时候系统会给我们一个无参数的构造方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参数的构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有参数的构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String name,<span class="type">int</span> age)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 参数money要取出多少钱</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> money)</span>&#123;</span><br><span class="line">        <span class="comment">// 用户取钱需要找取款机，取钱</span></span><br><span class="line">        BankSystem.get(money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> money)</span>&#123;</span><br><span class="line">        <span class="comment">// 存钱</span></span><br><span class="line">        BankSystem.put(money);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBankSystemMoney</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> BankSystem.getBankSystemMoney(password);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//        if (password.equals(&quot;123456&quot;)) &#123;</span></span><br><span class="line"><span class="comment">//            return BankSystem.money;</span></span><br><span class="line"><span class="comment">//        &#125; else &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;您不是系统管理员，无法查看系统存储多少钱&quot;);</span></span><br><span class="line"><span class="comment">//            return -1;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 访问修饰符：public 四种访问修饰符</span></span><br><span class="line"><span class="comment">*   --public</span></span><br><span class="line"><span class="comment">*   --private</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">App</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.put(<span class="number">10</span>);</span><br><span class="line">        user.get(<span class="number">100</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">bankSystemMoney</span> <span class="operator">=</span> user.getBankSystemMoney(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        System.out.println(bankSystemMoney);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的继承"><a href="#Java的继承" class="headerlink" title="Java的继承"></a>Java的继承</h4><ul><li>继承抽象理解可以为父母留给我们的房子，我们继承他，拥有使用权限<ul><li>继承方便直接调用指定类的属性，从而不需要重写一遍，提高整洁</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">实例-类的实例（对象）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">()</span>&#123;&#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(String name,<span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Print</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name: &quot;</span> + name + <span class="string">&quot; age: &quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  子类的名字 extends 父类的名字</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   -- 继承属性（变量）</span></span><br><span class="line"><span class="comment"> *   -- 行为方法（方法）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pug</span> <span class="keyword">extends</span> <span class="title class_">Dog</span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">App1</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Pug</span> <span class="variable">pug</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pug</span>();</span><br><span class="line">        pug.name = <span class="string">&quot;木棍&quot;</span>;</span><br><span class="line">        pug.age = <span class="number">12</span>;</span><br><span class="line">        pug.Print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java的多态"><a href="#Java的多态" class="headerlink" title="Java的多态"></a>Java的多态</h4><p>多态是面向对象编程的一个核心特性，意思是“同一种行为，具有多种不同的表现形式”。在 Java 中，多态允许相同的代码在不同上下文中表现出不同的行为，提高了程序的灵活性和可扩展性。</p><hr><h5 id="多态的核心机制"><a href="#多态的核心机制" class="headerlink" title="多态的核心机制"></a><strong>多态的核心机制</strong></h5><p>Java 实现多态主要通过以下两种方式：</p><ol><li><strong>方法的重写（Override）</strong><br>子类对父类的非静态方法进行重新定义，方法签名（方法名和参数列表）相同，但子类提供具体实现。</li><li><strong>方法的重载（Overload）</strong><br>同一类中多个方法具有相同的方法名但参数列表不同（参数类型、个数或顺序）。</li></ol><hr><h5 id="多态的实现方式"><a href="#多态的实现方式" class="headerlink" title="多态的实现方式"></a><strong>多态的实现方式</strong></h5><ol><li><p><strong>父类引用指向子类对象</strong><br>Java 支持用父类类型的变量来引用子类对象，这是实现多态的基础。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Animal makes a sound&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Dog barks&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Cat meows&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPolymorphism</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Animal</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(); <span class="comment">// 父类引用指向子类对象</span></span><br><span class="line">        <span class="type">Animal</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        </span><br><span class="line">        a1.speak(); <span class="comment">// 输出: Dog barks</span></span><br><span class="line">        a2.speak(); <span class="comment">// 输出: Cat meows</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>动态绑定（Dynamic Binding）</strong><br>在运行时，根据实际对象的类型调用对应的方法，而非编译时决定调用哪个方法。这是多态的核心。</p></li></ol><hr><h5 id="多态的好处"><a href="#多态的好处" class="headerlink" title="多态的好处"></a><strong>多态的好处</strong></h5><ol><li><p><strong>代码复用性</strong><br>可以编写通用代码，针对父类进行操作，无需关心具体的子类类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">makeAnimalSpeak</span><span class="params">(Animal animal)</span> &#123;</span><br><span class="line">    animal.speak();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>扩展性强</strong><br>当增加新的子类时，不需要修改原有代码，只需要新增子类实现。</p></li></ol><hr><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h5><ol><li><p><strong>向上转型和向下转型</strong></p><ul><li><strong>向上转型</strong>：子类对象可以赋值给父类引用，安全且自动。</li><li><strong>向下转型</strong>：将父类引用强制转换为子类类型，需要显式强制转换，并确保类型匹配。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(); <span class="comment">// 向上转型</span></span><br><span class="line"><span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> (Dog) animal;   <span class="comment">// 向下转型</span></span><br></pre></td></tr></table></figure></li><li><p><strong>多态只能用于方法</strong><br>成员变量的调用依赖于引用的类型，而非实际对象类型。</p></li><li><p><strong>静态方法和静态绑定</strong><br>静态方法属于类本身，而不是对象，因此无法实现多态。</p></li></ol><hr><h4 id="Java键盘录入"><a href="#Java键盘录入" class="headerlink" title="Java键盘录入"></a>Java键盘录入</h4><ul><li><p>在Python中可以使用 input 接受用户输入的数据，但是在Java中是没有 input 语法的，我们需要使用官方定义好的Scanner库来导入以实现从键盘获取用户输入的数据。</p></li><li><p>java.util.Scanner 是 Java5 的新特征，我们可以通过 Scanner 类来获取用户的输入。</p></li></ul><p>下面是创建 Scanner 对象的基本语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入Scanner</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个Scanner对象</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出一个语句，让用户输入</span></span><br><span class="line">System.out.println(<span class="string">&quot;Please Enter:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个变量来获取用户输入的数据</span></span><br><span class="line"><span class="type">int</span> <span class="variable">Num</span> <span class="operator">=</span> s.netInt();</span><br></pre></td></tr></table></figure><h4 id="Java数据类转换"><a href="#Java数据类转换" class="headerlink" title="Java数据类转换"></a>Java数据类转换</h4><ul><li><p>在Java中，数字进行运算时，数字类型不一样不能运算，需要转换成<code>一样</code>的才能运算。</p></li><li><p>隐式转换：</p><ul><li>取值范围<code>小</code>的数值转换为取值范围<code>大</code>的数值</li></ul></li></ul><ol><li><p>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算</p></li><li><p>byte，sourt，char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算</p></li></ol><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NumChange</span> &#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">Numa</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">Numb</span> <span class="operator">=</span>(<span class="type">int</span>)Numa;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>强制转换：<ul><li>取值范围<code>大</code>的数值，强制转换为取值范围<code>小</code>的数值</li></ul></li></ul><ol><li>格式：目标数据类型 变量名 &#x3D; （目标数据类型）被强制转换的数据；</li></ol><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NumChange</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">result</span> <span class="operator">=</span> (<span class="type">byte</span>)(a1 + a2);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>取值范围从小到大依次是：</p><blockquote><p><strong>byte &gt; short &gt; int &gt; long &gt; float &gt; double</strong></p></blockquote><h4 id="Java的自增自减运算符"><a href="#Java的自增自减运算符" class="headerlink" title="Java的自增自减运算符"></a>Java的自增自减运算符</h4><p>基本用法</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">++</td><td align="center">加</td><td align="center">变量的值加1</td></tr><tr><td align="center">–</td><td align="center">减</td><td align="center">变量的值减1</td></tr></tbody></table><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NumAdd</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// ++为变量的值加1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        a++;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// --为变量的值减1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        b--;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>++和–既可以放在变量的前面，也可以放在变量的后面</li></ul><h4 id="Java的赋值运算符"><a href="#Java的赋值运算符" class="headerlink" title="Java的赋值运算符"></a>Java的赋值运算符</h4><ul><li>赋值运算符的分类</li></ul><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>int a &#x3D;10，将10赋值给变量a</td></tr><tr><td>+&#x3D;</td><td>加后赋值</td><td>a+&#x3D;b，将a+b的值赋值给a</td></tr><tr><td>-&#x3D;</td><td>减后赋值</td><td>a-&#x3D;b，将a-b的值赋值给a</td></tr><tr><td>*&#x3D;</td><td>乘后赋值</td><td>a*&#x3D;b，将aXb的值赋值给a</td></tr><tr><td>&#x2F;&#x3D;</td><td>除后赋值</td><td>a&#x2F;&#x3D;b，将a÷b的商给a</td></tr><tr><td>&amp;&#x3D;</td><td>取余后赋值</td><td>a%&#x3D;b，将a÷b的余数给a</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 规则：将左边和右边进行相加，然后再把结果赋值给左边</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把a和b相加，然后把结果赋值给左边的变量a</span></span><br><span class="line">    a += b;</span><br><span class="line">    <span class="comment">// 等同于 a= a + b;</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 细节</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span>  <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 由于s本身变量记录的值为1，当1+1等于2的结果时，变量2重新赋值给s</span></span><br><span class="line">        s += <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 等同于 s = s + 1; </span></span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>（关系运算符&#x2F;比较运算符）的分类</li></ul><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>a&#x3D;&#x3D;b，判断a和b的值是否相等成立为true不成立为false</td></tr><tr><td>!&#x3D;</td><td>a!&#x3D;b，判断a和b的值是否不相等，成立为true，不成立为false</td></tr><tr><td>&gt;</td><td>a&gt;b，判断a是否大于b，成立为true，不成立为false</td></tr><tr><td>&gt;&#x3D;</td><td>a&gt;&#x3D;b，判断a是否大于等于b，成立为true，不成立为false</td></tr><tr><td>&lt;</td><td>a&lt;b，判断a是否小于b，成立为true，不成立为false</td></tr><tr><td>&lt;&#x3D;</td><td>a&lt;&#x3D;b，判断a是否小于等于b，成立为true，不成立为false</td></tr></tbody></table><ul><li>范例1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 判断运算符</span></span><br><span class="line">        <span class="comment">// 1.==判断左右两边是否相等</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当a等于b输出true代表等于</span></span><br><span class="line">        System.out.println(a == b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当c等于b输出false代表不等于</span></span><br><span class="line">        System.out.println(c == a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>范例2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TableForOne</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*需求：</span></span><br><span class="line"><span class="comment">        * 您和您的对象正在试图在餐厅获得一张桌子</span></span><br><span class="line"><span class="comment">        * 键盘录入两个整数，表示你和你对象衣服的时髦程度。（手动录入0~10之间的整数，不能录入其他）</span></span><br><span class="line"><span class="comment">        * 如果你的时髦程度大于你对象的时髦程度，相亲就成功，输出true</span></span><br><span class="line"><span class="comment">        * 否则输出false</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你衣服的时髦程度：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">UserInput01</span> <span class="operator">=</span> s.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你对象衣服的时髦程度：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">UserInput02</span> <span class="operator">=</span> s.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(UserInput01 &gt;= UserInput02);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 除了可以用关系比较还可以用if判断语句</span></span><br><span class="line"><span class="comment">//        if (UserInput01 &gt;= UserInput02)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;true&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;false&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的逻辑运算符"><a href="#Java的逻辑运算符" class="headerlink" title="Java的逻辑运算符"></a>Java的逻辑运算符</h4><ul><li>在数学中，一个数据x，大于5，小于15，我们可以用 5&lt; x &lt; 15；</li><li>在Java中，需要把式子先拆分，在进行合并表达<ul><li>拆解为：x&gt;5和x&lt;15</li><li>合并后：x&gt;5 &amp; x&lt;15</li></ul></li></ul><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&amp;</td><td>逻辑与（且）</td><td><strong>并且</strong>两边都为真，结果才是真</td></tr><tr><td>|</td><td>逻辑或</td><td><strong>或者</strong>两边都为假，结果才是假</td></tr><tr><td>^</td><td>逻辑异或</td><td>相同为 false，不同为 true</td></tr><tr><td>!</td><td>逻辑非</td><td>取反</td></tr></tbody></table><ul><li>范例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogicWith</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.&amp; 并且</span></span><br><span class="line">        <span class="comment">// 两边都为真，结果才为真</span></span><br><span class="line">        System.out.println(<span class="literal">true</span> &amp; <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> &amp; <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">true</span> &amp; <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> &amp; <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. | 或者</span></span><br><span class="line">        <span class="comment">// 两边都为假，结果才为假（只要有一个真，结果就是真）</span></span><br><span class="line">        System.out.println(<span class="literal">true</span> | <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> | <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">true</span> | <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> | <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. ^ 逻辑异或</span></span><br><span class="line">        <span class="comment">// 相同为false，不同为true</span></span><br><span class="line">        System.out.println(<span class="literal">true</span> ^ <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> ^ <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">true</span> ^ <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> ^ <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. ！ 逻辑非  取反</span></span><br><span class="line">        <span class="comment">// 取反的感叹号不要写多个，要么不写，要么只写一次</span></span><br><span class="line">        System.out.println(!<span class="literal">false</span>);</span><br><span class="line">        System.out.println(!<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的短路逻辑运算符"><a href="#Java的短路逻辑运算符" class="headerlink" title="Java的短路逻辑运算符"></a>Java的短路逻辑运算符</h4><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>短路与</td><td>结果和 <code>&amp;</code> 相同，但是有短路效果</td></tr><tr><td>||</td><td>短路或</td><td>结果和 &#96;</td></tr></tbody></table><ul><li>范例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShortCircuitLogicalOperators</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. &amp;&amp;</span></span><br><span class="line">        <span class="comment">// 运行结果跟单个&amp;是一样的</span></span><br><span class="line">        <span class="comment">// 表示两边都是真，结果才是真</span></span><br><span class="line">        System.out.println(<span class="literal">true</span> &amp;&amp; <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> &amp;&amp; <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> &amp;&amp; <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">true</span> &amp;&amp; <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. ||</span></span><br><span class="line">        <span class="comment">// 运行结果跟单个 | 是一样的</span></span><br><span class="line">        <span class="comment">// 表示两边都是假，结果才是假（只要有一个真，结果就是真）</span></span><br><span class="line">        System.out.println(<span class="literal">true</span> || <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> || <span class="literal">false</span>);</span><br><span class="line">        System.out.println(<span class="literal">false</span> || <span class="literal">true</span>);</span><br><span class="line">        System.out.println(<span class="literal">true</span> || <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.短路运算符具有短句效果</span></span><br><span class="line">        <span class="comment">// 简单理解：当左边的表达式可以确定最终的结果，右边的表达书就不会运行了</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> ++a &lt; <span class="number">5</span> &amp;&amp; ++b &lt;<span class="number">5</span>;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的三元运算符"><a href="#Java的三元运算符" class="headerlink" title="Java的三元运算符"></a>Java的三元运算符</h4><ul><li>格式：关系表达式？表达式1：表达式2；</li><li>范例：求两个数的较大值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> a &gt; b ? a : b;</span><br><span class="line">System.out.println(a &gt; b ? a : b)</span><br></pre></td></tr></table></figure><ul><li>范例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SanYuanYunSuanFu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">number1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">number2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> number1 &gt; number2 ? number1 : number2;</span><br><span class="line">        System.out.println(number);</span><br><span class="line"></span><br><span class="line">        System.out.println(number1 &gt; number2 ? number1 : number2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>范例2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoTagger</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        /需求：</span></span><br><span class="line"><span class="comment">        动物园里面有两只老虎，体重分别通过键盘录入获得</span></span><br><span class="line"><span class="comment">        请用程序实现判断两只老虎的体重是否相同</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">FristTagger</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二只老虎的体重：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">TwoTagger</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> FristTagger == TwoTagger ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不同&quot;</span>;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的运算符优先级"><a href="#Java的运算符优先级" class="headerlink" title="Java的运算符优先级"></a>Java的运算符优先级</h4><p>在 Java 中，运算符的优先级决定了在没有括号的情况下，表达式中各个运算符的执行顺序。了解运算符优先级可以帮助我们正确地编写和理解代码。</p><p>以下是 Java 中运算符的优先级表，从高到低排列（优先级越高，越先执行）：</p><table><thead><tr><th>优先级等级</th><th>运算符类型</th><th>运算符</th><th>结合性</th></tr></thead><tbody><tr><td>1</td><td>括号</td><td><code>()</code></td><td>从左到右</td></tr><tr><td>2</td><td>后缀</td><td><code>expr++</code>, <code>expr--</code></td><td>从左到右</td></tr><tr><td>3</td><td>一元运算</td><td><code>++expr</code>, <code>--expr</code>, <code>+</code>, <code>-</code>, <code>~</code>, <code>!</code></td><td>从右到左</td></tr><tr><td>4</td><td>乘除余</td><td><code>*</code>, <code>/</code>, <code>%</code></td><td>从左到右</td></tr><tr><td>5</td><td>加减运算</td><td><code>+</code>, <code>-</code></td><td>从左到右</td></tr><tr><td>6</td><td>移位运算</td><td><code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code></td><td>从左到右</td></tr><tr><td>7</td><td>比较</td><td><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>instanceof</code></td><td>从左到右</td></tr><tr><td>8</td><td>相等性</td><td><code>==</code>, <code>!=</code></td><td>从左到右</td></tr><tr><td>9</td><td>按位与</td><td><code>&amp;</code></td><td>从左到右</td></tr><tr><td>10</td><td>按位异或</td><td><code>^</code></td><td>从左到右</td></tr><tr><td>11</td><td>按位或</td><td>&#96;</td><td>&#96;</td></tr><tr><td>12</td><td>逻辑与</td><td><code>&amp;&amp;</code></td><td>从左到右</td></tr><tr><td>13</td><td>逻辑或</td><td>&#96;</td><td></td></tr><tr><td>14</td><td>条件运算</td><td><code>? :</code></td><td>从右到左</td></tr><tr><td>15</td><td>赋值运算</td><td><code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code>, <code>&lt;&lt;=</code>, <code>&gt;&gt;=</code>, <code>&gt;&gt;&gt;=</code>, <code>&amp;=</code>, <code>^=</code>, &#96;</td><td>&#x3D;&#96;</td></tr><tr><td>16</td><td>逗号</td><td><code>,</code></td><td>从左到右</td></tr></tbody></table><hr><h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><ol><li><p><strong>括号优先级最高</strong>：表达式中的括号 <code>()</code> 总是最先执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> (<span class="number">2</span> + <span class="number">3</span>) * <span class="number">4</span>; <span class="comment">// 括号先执行，结果为 20</span></span><br></pre></td></tr></table></figure></li><li><p><strong>后缀操作优先级高于前缀</strong>：后缀递增 <code>i++</code> 的优先级高于前缀递增 <code>++i</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">System.out.println(i++ + ++i); <span class="comment">// 5 + 7 = 12</span></span><br></pre></td></tr></table></figure></li><li><p><strong>算术运算符优先级</strong>：乘法 <code>*</code> 和除法 <code>/</code> 的优先级高于加法 <code>+</code> 和减法 <code>-</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">2</span> + <span class="number">3</span> * <span class="number">4</span>; <span class="comment">// 等价于 2 + (3 * 4)，结果为 14</span></span><br></pre></td></tr></table></figure></li><li><p><strong>逻辑运算</strong>：</p><ul><li><code>&amp;&amp;</code> 的优先级高于 <code>||</code>。</li><li>逻辑表达式建议使用括号明确顺序。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">true</span> || <span class="literal">false</span> &amp;&amp; <span class="literal">false</span>; <span class="comment">// 等价于 true || (false &amp;&amp; false)，结果为 true</span></span><br></pre></td></tr></table></figure></li><li><p><strong>条件运算符</strong>：<code>? :</code> 的优先级低于算术和比较运算。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (x &gt; <span class="number">0</span>) ? x * <span class="number">2</span> : x - <span class="number">2</span>; <span class="comment">// 判断 x &gt; 0，然后执行 x * 2</span></span><br></pre></td></tr></table></figure></li></ol><hr><h5 id="使用建议"><a href="#使用建议" class="headerlink" title="使用建议"></a>使用建议</h5><ul><li><p><strong>尽量使用括号明确优先级</strong>：虽然理解优先级规则很重要，但为提升代码可读性，建议通过括号显式指定表达式的计算顺序。</p></li><li><p><strong>复杂逻辑用分步拆解</strong>：对于包含多层运算符的表达式，分步骤计算会更直观且易于调试。</p></li><li><p>范例：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorPrecedence</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="comment">// 如果在表达中需要先计算哪一个的值，就需要在输出中为他们两个添加一个小括号括起来，这样就会优先计算小括号里面的内容</span></span><br><span class="line">        System.out.println(a + (b * c));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的原码，反码，补码"><a href="#Java的原码，反码，补码" class="headerlink" title="Java的原码，反码，补码"></a>Java的原码，反码，补码</h4><ul><li>原码：<ul><li>十进制数据的二进制表现形式，最左边是符号位，0为证，1为负</li></ul></li><li>反码：<ul><li>正数的补码是其本身，负数的反码是符号位保持不变，其余 位取反</li></ul></li><li>补码：<ul><li>正数的补码是其本身，负数的补码是在其反码的基础上+1</li></ul></li></ul><h4 id="Java的数组"><a href="#Java的数组" class="headerlink" title="Java的数组"></a>Java的数组</h4><ul><li><p>数组是一种容器，可以用来存储同种数据类型的多个值</p><ul><li>数组容器在存储数据的时候，需要结合隐式转换考虑</li><li>初始化：就是在内存中，为数组开辟空间，并将数据存入容器中的过程</li></ul></li><li><p>数组的写法：</p></li></ul><h4 id="Java的For语句结合If判断"><a href="#Java的For语句结合If判断" class="headerlink" title="Java的For语句结合If判断"></a>Java的For语句结合If判断</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.yexiaonan;</span><br><span class="line"><span class="comment">/*朋友聚会的时候可能会玩一个游戏:</span></span><br><span class="line"><span class="comment">逢7过游戏规则:</span></span><br><span class="line"><span class="comment">从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍时都要说过过</span></span><br><span class="line"><span class="comment">需求:使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SenvenComtinue</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++ )&#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">7</span> || i / <span class="number">10</span> % <span class="number">10</span> == <span class="number">7</span> || i % <span class="number">7</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;过！&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;逢7过，现在是：&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java的数组-1"><a href="#Java的数组-1" class="headerlink" title="Java的数组"></a>Java的数组</h4><ul><li>在 Java 中，数组是一种容器对象，用于存储固定大小的同类型元素集合。数组中的元素可以是基本数据类型（如 <code>int</code>、<code>char</code>、<code>double</code> 等）或者引用数据类型（如对象、字符串等）。数组的大小一旦确定，就不能更改，因此它是一个静态数据结构。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个数组有两种方式</span></span><br><span class="line"><span class="comment">// 需求一：存储五个学生的年龄</span></span><br><span class="line"><span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] arr2 = &#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>&#125;;</span><br><span class="line"><span class="comment">// 需求二：存储四个学生的姓名</span></span><br><span class="line">String[] arr3 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;mugun1&quot;</span>,<span class="string">&quot;mugun2&quot;</span>,<span class="string">&quot;mugun3&quot;</span>,<span class="string">&quot;mugun4&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">String[] arr4 = &#123;<span class="string">&quot;mugun1&quot;</span>,<span class="string">&quot;mugun2&quot;</span>,<span class="string">&quot;mugun3&quot;</span>,<span class="string">&quot;mugun4&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>在上面，我们可以看到声明数组类型的案例，请注意！在声明数组的时候要像生成变量一样，在数组前面加上数组里面的数据类型。</p></li><li><p>可能大部分人在这一步想在控制台输出看看数组里面的内容，但是我告诉你的是，在Java中，如果你想要查看数组里面的数据，你不能像正常（下面这样）输出，这样输出是</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(arr3);</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line"><span class="comment">// 你直接按照上面那个输出是这样的</span></span><br><span class="line">[I@4eec7777</span><br><span class="line">   </span><br><span class="line"> <span class="comment">// 我们需要在输出的前面加上</span></span><br><span class="line">System.out.println(Arrays.toString(arr3));</span><br><span class="line"> [mugun1, mugun2, mugun3, mugun4]</span><br><span class="line"> </span><br><span class="line"> <span class="comment">// 这样就输出正确的数组了</span></span><br></pre></td></tr></table></figure><h3 id="Java的方法"><a href="#Java的方法" class="headerlink" title="Java的方法"></a>Java的方法</h3><ul><li>方法就是程序中最小的执行单元</li><li>在实际开发中，具有独立功能的代码可以抽取到方法中</li><li>在实际开发中，可以方便的维护代码，提高可维护性</li></ul><ol><li>最简单的方法和定义</li></ol><p>(方法必须显定义后调用，负责程序将报错)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">PlayGame</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 定义一个方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用这个方法</span></span><br><span class="line">PlayGame();</span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodFor1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        PlayGame();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">PlayGame</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>带参数的方法定义</li></ol><p>(如果括号中有多个参数，需要使用逗号分隔)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">GetSum</span><span class="params">(<span class="type">int</span> number)</span> &#123;......&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">GetSum</span><span class="params">(<span class="type">int</span> number，<span class="type">int</span> number)</span> &#123;......&#125;</span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodFor4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        GetSum(<span class="number">10</span>);</span><br><span class="line">        GetSumT(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">GetSum</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        System.out.println(number);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">GetSumT</span><span class="params">(<span class="type">int</span> sum1,<span class="type">int</span> sum2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> sum1 + sum2;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>带返回值方法的定义</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodFor5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// 输出调用</span></span><br><span class="line">        System.out.println(ReturnValue(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">ReturnValue</span><span class="params">(<span class="type">int</span> sum1,<span class="type">int</span> sum2,<span class="type">int</span> sum3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> sum1+sum2+sum3;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SmithLegend MC版沙威玛</title>
      <link href="/2024/10/10/SmithLegend-MC%E7%89%88%E6%B2%99%E5%A8%81%E7%8E%9B/"/>
      <url>/2024/10/10/SmithLegend-MC%E7%89%88%E6%B2%99%E5%A8%81%E7%8E%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="【村庄铁匠铺传奇】SmithLegend"><a href="#【村庄铁匠铺传奇】SmithLegend" class="headerlink" title="【村庄铁匠铺传奇】SmithLegend"></a>【村庄铁匠铺传奇】SmithLegend</h1><p><img src="https://pxy.shenyi.cyou/2024/10/10/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241010191149.png" alt="image-20241010191011378"></p><ul><li>主界面十分还原</li></ul><p><img src="https://pxy.shenyi.cyou/2024/10/10/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241010191301.png" alt="1"></p><ul><li>游戏界面更是经典</li></ul><p><img src="https://pxy.shenyi.cyou/2024/10/10/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241010191409.png" alt="2"></p><hr><h4 id="游戏来源于B站UP主：烟汐忆梦-YM"><a href="#游戏来源于B站UP主：烟汐忆梦-YM" class="headerlink" title="游戏来源于B站UP主：烟汐忆梦_YM"></a>游戏来源于B站UP主：<a href="https://www.bilibili.com/video/BV1Rs1qYnEdi/?spm_id_from=333.337.search-card.all.click&vd_source=eca4c70fab2bfa1ad7eafd17bf65221e"><a href="https://space.bilibili.com/481430814">烟汐忆梦_YM</a></a></h4><blockquote><p>游戏由 Godot Engine开发并开源 原游戏 - 沙威玛传奇 下载链接 : <a href="https://pan.quark.cn/s/f13e984b79a2">https://pan.quark.cn/s/f13e984b79a2</a> (包括Android版 Windows版) </p><p> Github开源地址 : Yanxiyimengya&#x2F;SmithyLegend: 二创游戏 铁匠铺传奇 - Godot项目源代码 (github.com) </p><p>看了<a href="https://www.bilibili.com/video/BV188tYezEvz/?spm_id_from=333.788.video.desc.click">BV188tYezEvz</a>视频之后,花了国庆7天时间赶出来的游戏, 后续考虑更新一些什么内容… 有什么创意直接评论区见(划掉) </p><p>游戏没有经过太多Debug,如果有什么BUG欢迎提出！</p></blockquote><ul><li>Tips： <a href="https://yexiaonan.lanzout.com/iPNhB2c74egb">贴上蓝奏云连接（yexiaonan）</a></li></ul><hr>]]></content>
      
      
      
        <tags>
            
            <tag> MC版沙威玛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown扩展语法</title>
      <link href="/2024/10/08/Markdown%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/10/08/Markdown%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-扩展语法"><a href="#Markdown-扩展语法" class="headerlink" title="Markdown 扩展语法"></a>Markdown 扩展语法</h1><p>构建在 Markdown 基本语法上的扩展功能。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>即便 John Gruber 的原始设计文档中所列出的 <a href="https://www.markdown.xyz/basic-syntax">Markdown 基本语法</a> 已经囊括了许多满足日常所需的元素，但对于某些人来说仍然不够。这就是 Markdown 扩展语法出现的缘由。</p><p>一些个人和组织通过添加表格（tables）、代码块（code blocks）、语法高亮、将 URL 自动转换为链接和脚注（footnotes）等额外的元素来扩展 Markdown 的基本语法。这些额外添加的元素可以通过使用构建于 Markdown 之上的轻量级标记语言或通过向兼容的 Markdown 解析器添加扩展来启用这些新元素。</p><h2 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h2><p>并非所有的 Markdown 应用程序都支持扩展语法。你需要确认你所使用的应用程序是否支持你所需要使用的扩展语法。如果不支持，则有可能是需要开启相应的扩展模块。</p><h3 id="轻量级标记语言"><a href="#轻量级标记语言" class="headerlink" title="轻量级标记语言"></a>轻量级标记语言</h3><p>目前有几种轻量级标记语言是 Markdown 的 <em>超集</em> 。它们支持 Gruber 的基本语法，并在其基础上添加了一些额外的元素，例如表格（tables）、代码块（code blocks）、语法高亮、将 URL 自动转换为链接和脚注（footnotes）。许多流行的 Markdown 应用程序能够支持以下列出的某个轻量级标记语言：</p><ul><li><a href="https://commonmark.org/">CommonMark</a></li><li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown (GFM)</a></li><li><a href="https://michelf.ca/projects/php-markdown/extra/">Markdown Extra</a></li><li><a href="https://fletcherpenney.net/multimarkdown/">MultiMarkdown</a></li><li><a href="https://rmarkdown.rstudio.com/">R Markdown</a></li></ul><h3 id="Markdown-解析器"><a href="#Markdown-解析器" class="headerlink" title="Markdown 解析器"></a>Markdown 解析器</h3><p>目前可用的 <a href="https://github.com/markdown/markdown.github.com/wiki/Implementations">Markdown 解析器有数十个</a> 。其中许多都可以通过添加扩展模块的方式来支持 Markdown 扩展语法。请查看你所使用的 Markdown 解析器的文档以了解更多信息。</p><h2 id="表格（Tables）"><a href="#表格（Tables）" class="headerlink" title="表格（Tables）"></a>表格（Tables）</h2><p>如需添加表格，请使用三个或更多个连字符（<code>---</code>）来为每个列创建表头，并使用管道符（<code>|</code>）来分隔每个列。为兼容考虑，你还应该在行的两侧添加管道符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><p>单元格（cell）宽度是可变的，如下所示。渲染效果相同。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax | Description |</span><br><span class="line">| --- | ----------- |</span><br><span class="line">| Header | Title |</span><br><span class="line">| Paragraph | Text |</span><br></pre></td></tr></table></figure><p><strong>提示：</strong> 使用连字符（hyphens）和管道符（pipes）创建表格会很乏味。若要加快进度，请试一试 <a href="https://www.tablesgenerator.com/markdown_tables">Markdown 表格生成器</a>。使用图形界面生成表格，然后将生成的 Markdown 格式的文本复制粘贴到文件中即可。</p><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>通过在标题行中的连字符（hyphens）的左侧或右侧或两侧添加冒号（<code>:</code>），可以将对应列中的文本向左或向右或居中对齐。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table><h3 id="格式化表格中的文本"><a href="#格式化表格中的文本" class="headerlink" title="格式化表格中的文本"></a>格式化表格中的文本</h3><p>你可以为表格中的文本设置格式。例如，可以添加 <a href="https://www.markdown.xyz/basic-syntax/#links">链接（links）</a>、<a href="https://www.markdown.xyz/basic-syntax/#code-1">代码（code）</a> （注意，只能为单词或短语添加反引号 (&#96;&#96;&#96;) ，不能添加 <a href="https://www.markdown.xyz/basic-syntax/#code-blocks">代码块（code blocks）</a>）以及 <a href="https://www.markdown.xyz/basic-syntax/#emphasis">强调（emphasis）</a>。</p><p>不支持的格式包括标题（headings）、块引用（blockquotes）、列表（lists）、水平分割线（horizontal rules）、图片（images）或 HTML 标记。</p><h3 id="转义表格中出现的管道符（Pipe-Characters）"><a href="#转义表格中出现的管道符（Pipe-Characters）" class="headerlink" title="转义表格中出现的管道符（Pipe Characters）"></a>转义表格中出现的管道符（Pipe Characters）</h3><p>如需在表格中显示管道符 (<code>|</code>)，你可以使用管道符的 HTML 字符编码（<code>|</code>）来实现。</p><h2 id="围栏代码块（Fenced-Code-Blocks）"><a href="#围栏代码块（Fenced-Code-Blocks）" class="headerlink" title="围栏代码块（Fenced Code Blocks）"></a>围栏代码块（Fenced Code Blocks）</h2><p>Markdown 的基本语法允许你通过缩进四个空格或一个制表符来创建 <a href="https://www.markdown.xyz/basic-syntax#code-blocks">代码块</a> 。如果你觉得不方便，可以试试围栏代码块（fenced code blocks）。根据 Markdown 解析器或编辑器的不同，代码块的前后可以使用三个反引号（&#96;&#96;&#96;&#96;&#96;）或三个波浪号（<code>~~~</code>）来标记围栏代码块。这有什么优势吗？你不必费力缩进任何行了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>提示：</strong> 需要在代码块中显示反引号（backticks）吗？请参见 <a href="https://www.markdown.xyz/basic-syntax/#escaping-backticks">这一章节</a> 以了解如何对其进行转义。</p><h3 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h3><p>许多 Markdown 解析器都支持围栏代码块的语法高亮功能。此功能允许你为编写代码所用的编程语言添加带颜色的语法高亮显示。如需添加语法高亮，请在围栏代码块前的反引号旁指定所用的编程语言。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="脚注（Footnotes）"><a href="#脚注（Footnotes）" class="headerlink" title="脚注（Footnotes）"></a>脚注（Footnotes）</h2><p>脚注（Footnotes）允许你添加注释（notes）和引用（references），而不会使文档正文混乱。当你创建脚注时，带有链接的上标数字会出现在你引用脚注的位置。 读者可以单击链接以跳转至页面底部的脚注内容处。</p><p>要创建一个脚注的引用，请在方括号中添加一个插入符（caret）以及一个标识符，标识符可以是数字或单词，但不能包含空格或制表符。标识符的作用仅是将脚注的引用和脚注本身进行关联，在输出中，脚注按顺序编号。</p><p>另一种创建脚注的方式是在方括号内添加一个插入符（caret）以及一个数字，后面跟着冒号和文本，即（<code>[^1]: My footnote.</code>）。这种方式让你不必在文档末尾添加脚注。你可以将脚注放到除列表（lists）、块引用（block quotes）和表格（tables）之外的任何位置上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Here&#x27;s a simple footnote,[^1] and here&#x27;s a longer one.[^bignote]</span><br><span class="line"></span><br><span class="line">[^1]: This is the first footnote.</span><br><span class="line"></span><br><span class="line">[^bignote]: Here&#x27;s one with multiple paragraphs and code.</span><br><span class="line"></span><br><span class="line">    Indent paragraphs to include them in the footnote.</span><br><span class="line"></span><br><span class="line">    `&#123; my code &#125;`</span><br><span class="line"></span><br><span class="line">    Add as many paragraphs as you like.</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><p>Here’s a simple footnote,<a href="https://www.markdown.xyz/extended-syntax/#fn:1">1</a> and here’s a longer one.<a href="https://www.markdown.xyz/extended-syntax/#fn:bignote">2</a></p><ol><li><p>This is the first footnote. <a href="https://www.markdown.xyz/extended-syntax/#fnref:1">↩</a></p></li><li><p>Here’s one with multiple paragraphs and code.</p><p>Indent paragraphs to include them in the footnote.</p><p><code>&#123; my code &#125;</code></p><p>Add as many paragraphs as you like. <a href="https://www.markdown.xyz/extended-syntax/#fnref:bignote">↩</a></p></li></ol><h2 id="自定义标题的-ID"><a href="#自定义标题的-ID" class="headerlink" title="自定义标题的 ID"></a>自定义标题的 ID</h2><p>许多 Markdown 解析器都支持为 <a href="https://www.markdown.xyz/basic-syntax/#headings">标题（headings）</a> 自定义 ID，某些 Markdown 解析器会自动为标题添加 ID。通过添加自定义 ID， 能够让你直接链接到这个标题，并且还能使用 CSS 修改其样式。如需为标题添加自定义 ID，请将自定义 ID 用花括号括起来并与标题一起放在同一行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### My Great Heading &#123;#custom-id&#125;</span><br></pre></td></tr></table></figure><p>输出的 HTML 如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3 id=&quot;custom-id&quot;&gt;My Great Heading&lt;/h3&gt;</span><br></pre></td></tr></table></figure><p>###链接到标题的 ID</p><p>你可以在文档中创建一个 <a href="https://www.markdown.xyz/basic-syntax/#links">标准链接</a> ，其后是井号（<code>#</code>）和自定义的标题 ID ，从而链接到这个标题。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>Rendered Output</th></tr></thead><tbody><tr><td><code>[Heading IDs](#heading-ids)</code></td><td><code>&lt;a href=&quot;#heading-ids&quot;&gt;Heading IDs&lt;/a&gt;</code></td><td><a href="https://www.markdown.xyz/extended-syntax/#heading-ids">Heading IDs</a></td></tr></tbody></table><p>其它网站也可以通过将自定义的标题 ID 添加到网页的完整的 URL 后面来链接到对应的标题（例如，<code>[Heading IDs](https://www.markdown.xyz/extended-syntax#heading-ids)</code>）。</p><h2 id="定义列表（Definition-Lists）"><a href="#定义列表（Definition-Lists）" class="headerlink" title="定义列表（Definition Lists）"></a>定义列表（Definition Lists）</h2><p>某些 Markdown 解析器允许你创建术语（terms）及其相应的定义（definitions）的列表，即 <em>定义列表（definition lists）</em>。要创建定义列表，请在第一行键入术语，然后在下一行中键入冒号，冒号后跟着空格和此术语的具体定义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">First Term</span><br><span class="line">: This is the definition of the first term.</span><br><span class="line"></span><br><span class="line">Second Term</span><br><span class="line">: This is one definition of the second term.</span><br><span class="line">: This is another definition of the second term.</span><br></pre></td></tr></table></figure><p>输出的 HTML 如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">  &lt;dt&gt;First Term&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;This is the definition of the first term.&lt;/dd&gt;</span><br><span class="line">  &lt;dt&gt;Second Term&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;This is one definition of the second term. &lt;/dd&gt;</span><br><span class="line">  &lt;dd&gt;This is another definition of the second term.&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><ul><li><p>First Term</p><p>This is the definition of the first term.</p></li><li><p>Second Term</p><p>This is one definition of the second term.</p><p>This is another definition of the second term.</p></li></ul><h2 id="删除线（Strikethrough）"><a href="#删除线（Strikethrough）" class="headerlink" title="删除线（Strikethrough）"></a>删除线（Strikethrough）</h2><p>你可以贯穿单词的中心放一条横线从而删除这些单词。其效果看起来是这样的： <del>like this</del>。此功能允许你标记某些单词是错误的，不应该出现在文档中。在单词前面和后面分别放置两个波浪号（<code>~~</code>） 来表示删除这些单词。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~The world is flat.~~ We now know that the world is round.</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><p><del>The world is flat.</del> We now know that the world is round.</p><h2 id="任务列表（Task-Lists）"><a href="#任务列表（Task-Lists）" class="headerlink" title="任务列表（Task Lists）"></a>任务列表（Task Lists）</h2><p>任务列表（task lists 或者 checklists）允许你创建带有复选框的项目列表。在支持任务列表的 Markdown 应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项前面添加破折号（<code>-</code>）和中间带空格的方括号（<code>[ ]</code>）。要选中复选框，请在方括号中间添加一个 <code>x</code> ，即（<code>[x]</code>）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [x] Write the press release</span><br><span class="line">- [ ] Update the website</span><br><span class="line">- [ ] Contact the media</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><p><img src="https://www.markdown.xyz/assets/images/tasklist.png" alt="Markdown task list"></p><h2 id="表情符号（Emoji）"><a href="#表情符号（Emoji）" class="headerlink" title="表情符号（Emoji）"></a>表情符号（Emoji）</h2><p>有两种方式可以将表情符号添加到 Markdown 文档中：将表情符号复制并粘贴到 Markdown 格式的文本中，或者键入 <em>表情符号的简码（emoji shortcodes）</em>。</p><h3 id="复制并粘贴表情符号"><a href="#复制并粘贴表情符号" class="headerlink" title="复制并粘贴表情符号"></a>复制并粘贴表情符号</h3><p>在大多数情况下，你可以简单地从 <a href="https://emojipedia.org/">Emojipedia</a> 等来源复制表情符号，然后将其粘贴到文档中。许多 Markdown 应用程序就会自动以 Markdown 格式的文本来显示表情符号。从 Markdown 应用程序导出的 HTML 和 PDF 文件也是可以显示表情符号的。</p><p><strong>提示：</strong> 如果你使用的是静态站点生成器，请确保 <a href="https://www.w3.org/International/tutorials/tutorial-char-enc/">HTML 页面的字符编码为 UTF-8</a>。</p><h3 id="使用表情符号的简码（Shortcodes）"><a href="#使用表情符号的简码（Shortcodes）" class="headerlink" title="使用表情符号的简码（Shortcodes）"></a>使用表情符号的简码（Shortcodes）</h3><p>某些 Markdown 应用程序允许你通过键入表情符号的简码（shortcodes）来插入表情符号。简码以冒号开头和结尾，两个冒号中间是表情符号的名称。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Gone camping! :tent: Be back soon.</span><br><span class="line"></span><br><span class="line">That is so funny! :joy:</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><p>Gone camping! ⛺ Be back soon.</p><p>That is so funny! 😂</p><p><strong>注意：</strong> 你可以使用这个 <a href="https://gist.github.com/rxaviers/7360908">表情符号简码列表</a>，但请记住，表情符号的简码随着 Markdown 应用程序的不同而不同。有关详细信息，请参阅你所使用的 Markdown 应用程序的文档。</p><h2 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h2><p>This isn’t common, but some Markdown processors allow you to highlight text. The result looks like this. To highlight words, use two equal signs (<code>==</code>) before and after the words.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I need to highlight these ==very important words==.</span><br></pre></td></tr></table></figure><p>The HTML looks like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I need to highlight these &lt;mark&gt;very important words&lt;/mark&gt;.</span><br></pre></td></tr></table></figure><p>The rendered output looks like this:</p><p>I need to highlight these very important words.</p><h2 id="Subscript"><a href="#Subscript" class="headerlink" title="Subscript"></a>Subscript</h2><p>This isn’t common, but some Markdown processors allow you to use <em>subscript</em> to position one or more characters slightly below the normal line of type. To create a subscript, use one tilde symbol (<code>~</code>) before and after the characters.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H~2~O</span><br></pre></td></tr></table></figure><p>The HTML looks like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H&lt;sub&gt;2&lt;/sub&gt;O</span><br></pre></td></tr></table></figure><p>The rendered output looks like this:</p><p>H2O</p><p><strong>Tip:</strong> Be sure to test this feature in your Markdown application before using it. Some Markdown applications use one tilde symbol before and after words not for subscript, but for <a href="https://www.markdown.xyz/extended-syntax/#strikethrough">strikethrough</a>.</p><h2 id="Superscript"><a href="#Superscript" class="headerlink" title="Superscript"></a>Superscript</h2><p>This isn’t common, but some Markdown processors allow you to use <em>superscript</em> to position one or more characters slightly above the normal line of type. To create a superscript, use one caret symbol (<code>^</code>) before and after the characters.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X^2^</span><br></pre></td></tr></table></figure><p>The HTML looks like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X&lt;sup&gt;2&lt;/sup&gt;</span><br></pre></td></tr></table></figure><p>The rendered output looks like this:</p><p>X2</p><h2 id="自动将-URL-转换为链接"><a href="#自动将-URL-转换为链接" class="headerlink" title="自动将 URL 转换为链接"></a>自动将 URL 转换为链接</h2><p>许多 Markdown 解析器会自动将 URL 转换为链接。这意味着，即使你没有 <a href="https://www.markdown.xyz/basic-syntax/#links">使用中括号</a>，如果你输入 <a href="http://www.example.com,你的/">http://www.example.com，你的</a> Markdown 解析器也会自动将其转换为链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.example.com</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><p><a href="http://www.example.com/">http://www.example.com</a></p><h2 id="禁止自动将-URL-转换为链接"><a href="#禁止自动将-URL-转换为链接" class="headerlink" title="禁止自动将 URL 转换为链接"></a>禁止自动将 URL 转换为链接</h2><p>如果你不希望自动将 URL 转换为链接，则可以通过反引号 <a href="https://www.markdown.xyz/basic-syntax/#code">将 URL 表示为代码</a> 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`http://www.example.com`</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.example.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2024/10/08/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/10/08/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h1><p>John Gruber 的 Markdown 设计文档中列出的所有 Markdown 元素。</p><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。但是，Markdown 处理程序之间存在着细微的变化和差异，我们都会尽可能标记出来。</p><h2 id="标题（Headings）"><a href="#标题（Headings）" class="headerlink" title="标题（Headings）"></a>标题（Headings）</h2><p>要创建标题，请在单词或短语前面添加井号 (<code>#</code>) 。井号的数量代表了标题的级别。例如，添加三个井号即创建一个三级标题 (<code>&lt;h3&gt;</code>) (例如：<code>### My Header</code>)。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code># Heading level 1</code></td><td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td><td>Heading level 1</td></tr><tr><td><code>## Heading level 2</code></td><td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td><td>Heading level 2</td></tr><tr><td><code>### Heading level 3</code></td><td><code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code></td><td>Heading level 3</td></tr><tr><td><code>#### Heading level 4</code></td><td><code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code></td><td>Heading level 4</td></tr><tr><td><code>##### Heading level 5</code></td><td><code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code></td><td>Heading level 5</td></tr><tr><td><code>###### Heading level 6</code></td><td><code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code></td><td>Heading level 6</td></tr></tbody></table><h3 id="可选语法"><a href="#可选语法" class="headerlink" title="可选语法"></a>可选语法</h3><p>还可以在文本下方添加任意数量的 <code>==</code> 号来标识一级标题，或者 <code>--</code> 号来标识二级标题。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>Heading level 1===============</code></td><td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td><td>Heading level 1</td></tr><tr><td><code>Heading level 2---------------</code></td><td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td><td>Heading level 2</td></tr></tbody></table><h3 id="标题（Heading）用法的最佳实践"><a href="#标题（Heading）用法的最佳实践" class="headerlink" title="标题（Heading）用法的最佳实践"></a>标题（Heading）用法的最佳实践</h3><p>当井号（<code>#</code>）和标题文本之间没有空格时，各 Markdown 应用程序的处理方式是不一样的。为了兼容考虑，请在井号和标题文本之间添加一个空格。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code># Here&#39;s a Heading</code></td><td><code>#Here&#39;s a Heading</code></td></tr></tbody></table><p>You should also put blank lines before and after a heading for compatibility.</p><table><thead><tr><th>✅ Do this</th><th>❌ Don’t do this</th></tr></thead><tbody><tr><td><code>Try to put a blank line before...# Heading...and after a heading.</code></td><td><code>Without blank lines, this might not look right.# HeadingDon&#39;t do this!</code></td></tr></tbody></table><h2 id="段落（Paragraphs）"><a href="#段落（Paragraphs）" class="headerlink" title="段落（Paragraphs）"></a>段落（Paragraphs）</h2><p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>I really like using Markdown.I think I&#39;ll use it to format all of my documents from now on.</code></td><td><code>&lt;p&gt;I really like using Markdown.&lt;/p&gt;&lt;p&gt;I think I&#39;ll use it to format all of my documents from now on.&lt;/p&gt;</code></td><td>I really like using Markdown.I think I’ll use it to format all of my documents from now on.</td></tr></tbody></table><h3 id="段落（Paragraph）用法的最佳实践"><a href="#段落（Paragraph）用法的最佳实践" class="headerlink" title="段落（Paragraph）用法的最佳实践"></a>段落（Paragraph）用法的最佳实践</h3><p>除非 <a href="https://www.markdown.xyz/basic-syntax/#paragraphs">段落在列表中</a>，否则不要用空格（spaces）或制表符（ tabs）缩进段落。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>Don&#39;t put tabs or spaces in front of your paragraphs.Keep lines left-aligned like this.</code></td><td><code>  This can result in unexpected formatting problems. Don&#39;t add tabs or spaces in front of paragraphs.</code></td></tr></tbody></table><h2 id="换行（Line-Breaks）"><a href="#换行（Line-Breaks）" class="headerlink" title="换行（Line Breaks）"></a>换行（Line Breaks）</h2><p>在一行的末尾添加两个或多个空格，然后按回车键（return），即可创建一个换行（line break）或新行 (<code>&lt;br&gt;</code>)。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>This is the first line.  And this is the second line.</code></td><td><code>&lt;p&gt;This is the first line.&lt;br&gt;And this is the second line.&lt;/p&gt;</code></td><td>This is the first line. And this is the second line.</td></tr></tbody></table><h3 id="换行（Line-Break）用法的最佳实践"><a href="#换行（Line-Break）用法的最佳实践" class="headerlink" title="换行（Line Break）用法的最佳实践"></a>换行（Line Break）用法的最佳实践</h3><p>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行 (称为 “结尾空格（trailing whitespace）”) 的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能需要使用除结尾空格以外的其它方式来进行换行。如果你所使用的 Markdown 应用程序 <a href="https://www.markdown.xyz/basic-syntax/#html">支持 HTML</a> 的话，你可以使用 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><p>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><p>还有两种其他方式我并不推荐使用。CommonMark 和其它几种轻量级标记语言支持在行尾添加反斜杠 (<code>\</code>) 的方式实现换行，但是并非所有 Markdown 应用程序都支持此种方式，因此从兼容性的角度来看，不推荐使用。并且至少有两种轻量级标记语言支持无须在行尾添加任何内容，只须键入回车键（ return）即可实现换行。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>First line with two spaces after.  And the next line.First line with the HTML tag after.&lt;br&gt;And the next line.</code></td><td><code>First line with a backslash after.\And the next line.First line with nothing after.And the next line.</code></td></tr></tbody></table><h2 id="强调（Emphasis）"><a href="#强调（Emphasis）" class="headerlink" title="强调（Emphasis）"></a>强调（Emphasis）</h2><p>通过将文本设置为粗体或斜体来强调其重要性。</p><h3 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h3><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>I just love **bold text**.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>I just love <strong>bold text</strong>.</td></tr><tr><td><code>I just love __bold text__.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>I just love <strong>bold text</strong>.</td></tr><tr><td><code>Love**is**bold</code></td><td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td><td>Love<strong>is</strong>bold</td></tr></tbody></table><h4 id="粗体（Bold）用法最佳实践"><a href="#粗体（Bold）用法最佳实践" class="headerlink" title="粗体（Bold）用法最佳实践"></a>粗体（Bold）用法最佳实践</h4><p>Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>Love**is**bold</code></td><td><code>Love__is__bold</code></td></tr></tbody></table><h3 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h3><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>Italicized text is the *cat&#39;s meow*.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td><code>Italicized text is the _cat&#39;s meow_.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td><code>A*cat*meow</code></td><td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td><td>A<em>cat</em>meow</td></tr></tbody></table><h4 id="斜体（Italic）用法的最佳实践"><a href="#斜体（Italic）用法的最佳实践" class="headerlink" title="斜体（Italic）用法的最佳实践"></a>斜体（Italic）用法的最佳实践</h4><p>Markdown 的众多应用程序在如何处理单词中间的下划线上意见不一致。为了兼容起见，请用星号标注单词中间的斜体来表示着重。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>A*cat*meow</code></td><td><code>A_cat_meow</code></td></tr></tbody></table><h3 id="粗体（Bold）和斜体（Italic）"><a href="#粗体（Bold）和斜体（Italic）" class="headerlink" title="粗体（Bold）和斜体（Italic）"></a>粗体（Bold）和斜体（Italic）</h3><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>This text is ***really important***.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is *<strong>really important*</strong>.</td></tr><tr><td><code>This text is ___really important___.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is *<strong>really important*</strong>.</td></tr><tr><td><code>This text is __*really important*__.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is *<strong>really important*</strong>.</td></tr><tr><td><code>This text is **_really important_**.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is *<strong>really important*</strong>.</td></tr><tr><td><code>This is really***very***important text.</code></td><td><code>This is really&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important text.</code></td><td>This is really***very***important text.</td></tr></tbody></table><h4 id="粗体（Bold）和斜体（Italic）用法的最佳实践"><a href="#粗体（Bold）和斜体（Italic）用法的最佳实践" class="headerlink" title="粗体（Bold）和斜体（Italic）用法的最佳实践"></a>粗体（Bold）和斜体（Italic）用法的最佳实践</h4><p>Markdown 应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>This is really***very***important text.</code></td><td><code>This is really___very___important text.</code></td></tr></tbody></table><h2 id="块引用（Blockquotes）"><a href="#块引用（Blockquotes）" class="headerlink" title="块引用（Blockquotes）"></a>块引用（Blockquotes）</h2><p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><h3 id="多个段落的块引用（Blockquotes）"><a href="#多个段落的块引用（Blockquotes）" class="headerlink" title="多个段落的块引用（Blockquotes）"></a>多个段落的块引用（Blockquotes）</h3><p>块引用可以包含多个段落。为段落之间的空白行各添加一个 <code>&gt;</code> 符号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote><h3 id="嵌套块引用（Nested-Blockquotes）"><a href="#嵌套块引用（Nested-Blockquotes）" class="headerlink" title="嵌套块引用（Nested Blockquotes）"></a>嵌套块引用（Nested Blockquotes）</h3><p>块引用可以嵌套。在要嵌套的段落前添加一个 <code>&gt;&gt;</code> 符号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><blockquote><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote></blockquote><h3 id="带有其它元素的块引用（Blockquotes-with-Other-Elements）"><a href="#带有其它元素的块引用（Blockquotes-with-Other-Elements）" class="headerlink" title="带有其它元素的块引用（Blockquotes with Other Elements）"></a>带有其它元素的块引用（Blockquotes with Other Elements）</h3><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul><li>Revenue was off the chart.</li><li>Profits were higher than ever.</li></ul><p><em>Everything</em> is going according to <strong>plan</strong>.</p></blockquote><h3 id="Blockquotes-Best-Practices"><a href="#Blockquotes-Best-Practices" class="headerlink" title="Blockquotes Best Practices"></a>Blockquotes Best Practices</h3><p>For compatibility, put blank lines before and after blockquotes.</p><table><thead><tr><th>✅ Do this</th><th>❌ Don’t do this</th></tr></thead><tbody><tr><td><code>Try to put a blank line before...&gt; This is a blockquote...and after a blockquote.</code></td><td><code>Without blank lines, this might not look right.&gt; This is a blockquoteDon&#39;t do this!</code></td></tr></tbody></table><h2 id="列表（Lists）"><a href="#列表（Lists）" class="headerlink" title="列表（Lists）"></a>列表（Lists）</h2><p>你可以将多个条目组织成有序或无序列表。</p><h3 id="有序列表（Ordered-Lists）"><a href="#有序列表（Ordered-Lists）" class="headerlink" title="有序列表（Ordered Lists）"></a>有序列表（Ordered Lists）</h3><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>Rendered Output</th></tr></thead><tbody><tr><td><code>1. First item2. Second item3. Third item4. Fourth item</code></td><td><code>&lt;ol&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>1. First item1. Second item1. Third item1. Fourth item</code></td><td><code>&lt;ol&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>1. First item8. Second item3. Third item5. Fourth item</code></td><td><code>&lt;ol&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>1. First item2. Second item3. Third item  1. Indented item  2. Indented item4. Fourth item</code></td><td><code>&lt;ol&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item  &lt;ol&gt;   &lt;li&gt;Indented item&lt;/li&gt;   &lt;li&gt;Indented item&lt;/li&gt;  &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ol&gt;</code></td><td>First itemSecond itemThird itemIndented itemIndented itemFourth item</td></tr></tbody></table><h4 id="有序列表（Ordered-List）用法的最佳实践"><a href="#有序列表（Ordered-List）用法的最佳实践" class="headerlink" title="有序列表（Ordered List）用法的最佳实践"></a>有序列表（Ordered List）用法的最佳实践</h4><p>CommonMark 和其它几种轻量级标记语言可以让你使用括号（<code>)</code>）作为分隔符（例如 <code>1) First item</code>），但并非所有的 Markdown 应用程序都支持此种用法，因此，从兼容的角度来看，此用法不推荐。为了兼容起见，请只使用英文句点作为分隔符。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>1. First item2. Second item</code></td><td><code>1) First item2) Second item</code></td></tr></tbody></table><h3 id="无序列表（Unordered-Lists）"><a href="#无序列表（Unordered-Lists）" class="headerlink" title="无序列表（Unordered Lists）"></a>无序列表（Unordered Lists）</h3><p>要创建无序列表，请在每个列表项前面添加破折号 (<code>-</code>)、星号 (<code>*</code>) 或加号 (<code>+</code>) 。缩进一个或多个列表项可创建嵌套列表。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>- First item- Second item- Third item- Fourth item</code></td><td><code>&lt;ul&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>* First item* Second item* Third item* Fourth item</code></td><td><code>&lt;ul&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>+ First item+ Second item+ Third item+ Fourth item</code></td><td><code>&lt;ul&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item&lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>First itemSecond itemThird itemFourth item</td></tr><tr><td><code>- First item- Second item- Third item  - Indented item  - Indented item- Fourth item</code></td><td><code>&lt;ul&gt; &lt;li&gt;First item&lt;/li&gt; &lt;li&gt;Second item&lt;/li&gt; &lt;li&gt;Third item  &lt;ul&gt;   &lt;li&gt;Indented item&lt;/li&gt;   &lt;li&gt;Indented item&lt;/li&gt;  &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Fourth item&lt;/li&gt;&lt;/ul&gt;</code></td><td>First itemSecond itemThird itemIndented itemIndented itemFourth item</td></tr></tbody></table><h4 id="以数字开头的无序列表项"><a href="#以数字开头的无序列表项" class="headerlink" title="以数字开头的无序列表项"></a>以数字开头的无序列表项</h4><p>如果你需要以数字开头并且紧跟一个英文句号（也就是 <code>.</code>）的无序列表项，则可以使使用反斜线（<code>\</code>）来 <a href="https://www.markdown.xyz/basic-syntax/#escaping-characters">转义</a> 这个英文句号。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>Rendered Output</th></tr></thead><tbody><tr><td><code>- 1968\. A great year!- I think 1969 was second best.</code></td><td><code>&lt;ul&gt; &lt;li&gt;1968. A great year!&lt;/li&gt; &lt;li&gt;I think 1969 was second best.&lt;/li&gt;&lt;/ul&gt;</code></td><td>1968. A great year!I think 1969 was second best.</td></tr></tbody></table><h4 id="无序列表（Unordered-List）用法的最佳实践"><a href="#无序列表（Unordered-List）用法的最佳实践" class="headerlink" title="无序列表（Unordered List）用法的最佳实践"></a>无序列表（Unordered List）用法的最佳实践</h4><p>Markdown 应用程序在如何处理同一列表中混用不同分隔符上并不一致。为了兼容起见，请不要在同一个列表中混用不同的分隔符，最好选定一种分隔符并一直用下去。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>- First item- Second item- Third item- Fourth item</code></td><td><code>+ First item* Second item- Third item+ Fourth item</code></td></tr></tbody></table><h3 id="在列表中添加列表项"><a href="#在列表中添加列表项" class="headerlink" title="在列表中添加列表项"></a>在列表中添加列表项</h3><p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：</p><p><strong>Tip:</strong> If things don’t appear the way you expect, double check that you’ve indented the elements in the list four spaces or one tab.</p><h4 id="段落（Paragraphs）-1"><a href="#段落（Paragraphs）-1" class="headerlink" title="段落（Paragraphs）"></a>段落（Paragraphs）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* This is the first list item.</span><br><span class="line">* Here&#x27;s the second list item.</span><br><span class="line"></span><br><span class="line">    I need to add another paragraph below the second list item.</span><br><span class="line"></span><br><span class="line">* And here&#x27;s the third list item.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><p>I need to add another paragraph below the second list item.</p></li><li><p>And here’s the third list item.</p></li></ul><h4 id="引用块（Blockquotes）"><a href="#引用块（Blockquotes）" class="headerlink" title="引用块（Blockquotes）"></a>引用块（Blockquotes）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* This is the first list item.</span><br><span class="line">* Here&#x27;s the second list item.</span><br><span class="line"></span><br><span class="line">    &gt; A blockquote would look great below the second list item.</span><br><span class="line"></span><br><span class="line">* And here&#x27;s the third list item.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><blockquote><p>A blockquote would look great below the second list item.</p></blockquote></li><li><p>And here’s the third list item.</p></li></ul><h4 id="代码块（Code-Blocks）"><a href="#代码块（Code-Blocks）" class="headerlink" title="代码块（Code Blocks）"></a>代码块（Code Blocks）</h4><p><a href="https://www.markdown.xyz/basic-syntax/#code-blocks">代码块（Code blocks）</a> 通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. Open the file.</span><br><span class="line">2. Find the following code block on line 21:</span><br><span class="line"></span><br><span class="line">        &lt;html&gt;</span><br><span class="line">          &lt;head&gt;</span><br><span class="line">            &lt;title&gt;Test&lt;/title&gt;</span><br><span class="line">          &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">3. Update the title to match the name of your website.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><ol><li><p>Open the file.</p></li><li><p>Find the following code block on line 21:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Test&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br></pre></td></tr></table></figure></li><li><p>Update the title to match the name of your website.</p></li></ol><h4 id="图片（Images）"><a href="#图片（Images）" class="headerlink" title="图片（Images）"></a>图片（Images）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. Open the file containing the Linux mascot.</span><br><span class="line">2. Marvel at its beauty.</span><br><span class="line"></span><br><span class="line">    ![Tux, the Linux mascot](/assets/images/tux.png)</span><br><span class="line"></span><br><span class="line">3. Close the file.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><ol><li><p>Open the file containing the Linux mascot.</p></li><li><p>Marvel at its beauty.</p><p><img src="https://www.markdown.xyz/assets/images/tux.png" alt="Tux, the Linux mascot"></p></li><li><p>Close the file.</p></li></ol><h4 id="列表（Lists）-1"><a href="#列表（Lists）-1" class="headerlink" title="列表（Lists）"></a>列表（Lists）</h4><p>你可以将无序列表嵌套在有序列表中，反之亦然。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">3. Third item</span><br><span class="line">    - Indented item</span><br><span class="line">    - Indented item</span><br><span class="line">4. Fourth item</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><ol><li>First item</li><li>Second item</li><li>Third item<ul><li>Indented item</li><li>Indented item</li></ul></li><li>Fourth item</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>要将单词或短语表示为代码，请将其包裹在反引号 (&#96;&#96;&#96;) 中。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>At the command prompt, type </code>nano<code>.</code></td><td><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td><td>At the command prompt, type <code>nano</code>.</td></tr></tbody></table><h3 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h3><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(&#96;&#96;&#96;&#96;)中。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>Use `code` in your Markdown file.</code></td><td><code>&lt;code&gt;Use </code>code<code> in your Markdown file.&lt;/code&gt;</code></td><td><code>Use </code>code<code> in your Markdown file.</code></td></tr></tbody></table><h3 id="代码块（Code-Blocks）-1"><a href="#代码块（Code-Blocks）-1" class="headerlink" title="代码块（Code Blocks）"></a>代码块（Code Blocks）</h3><p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 要创建不用缩进的代码块，请使用 <a href="https://www.markdown.xyz/extended-syntax/#fenced-code-blocks">围栏式代码块（fenced code blocks）</a>.</p><h2 id="分隔线（Horizontal-Rules）"><a href="#分隔线（Horizontal-Rules）" class="headerlink" title="分隔线（Horizontal Rules）"></a>分隔线（Horizontal Rules）</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号 (<code>***</code>)、破折号 (<code>---</code>) 或下划线 (<code>___</code>) ，并且不能包含其他内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">_________________</span><br></pre></td></tr></table></figure><p>以上三个分隔线的渲染效果看起来都一样：</p><hr><h3 id="分隔线（Horizontal-Rule）用法最佳实践"><a href="#分隔线（Horizontal-Rule）用法最佳实践" class="headerlink" title="分隔线（Horizontal Rule）用法最佳实践"></a>分隔线（Horizontal Rule）用法最佳实践</h3><p>为了兼容性，请在分隔线的前后均添加空白行。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>Try to put a blank line before...---...and after a horizontal rule.</code></td><td><code>Without blank lines, this would be a heading.---Don&#39;t do this!</code></td></tr></tbody></table><h2 id="链接（Links）"><a href="#链接（Links）" class="headerlink" title="链接（Links）"></a>链接（Links）</h2><p>要创建链接，请将链接文本括在方括号（例如 <code>[Duck Duck Go]</code>）中，后面紧跟着括在圆括号中的 URL（例如 <code>(https://duckduckgo.com)</code> ）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My favorite search engine is [Duck Duck Go](https://duckduckgo.com).</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p>My favorite search engine is <a href="https://duckduckgo.com/">Duck Duck Go</a>.</p><p><strong>Note:</strong> To link to an element on the same page, see <a href="https://www.markdown.xyz/extended-syntax/#linking-to-heading-ids">linking to heading IDs</a>.</p><h3 id="添加标题"><a href="#添加标题" class="headerlink" title="添加标题"></a>添加标题</h3><p>你可以选择为链接添加标题（即 title 属性）。当用户将鼠标悬停在链接上时，将显示一个提示。要添加标题，请将其放在 URL 后面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My favorite search engine is [Duck Duck Go](https://duckduckgo.com &quot;The best search engine for privacy&quot;).</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p>My favorite search engine is <a href="https://duckduckgo.com/">Duck Duck Go</a>.</p><h3 id="网址和电子邮件地址"><a href="#网址和电子邮件地址" class="headerlink" title="网址和电子邮件地址"></a>网址和电子邮件地址</h3><p>要将 URL 或电子邮件地址快速转换为链接，请将其括在尖括号中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://www.markdownguide.org&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><a href="https://www.markdownguide.org/">https://www.markdownguide.org</a><br><a href="mailto:fake@example.com">fake@example.com</a></p><h3 id="格式化链接"><a href="#格式化链接" class="headerlink" title="格式化链接"></a>格式化链接</h3><p>如需 <a href="https://www.markdown.xyz/basic-syntax/#emphasis">强调（emphasize）</a> 某个链接, 请在方括号前及圆括号后添加星号。要将链接表示为 <a href="https://www.markdown.xyz/basic-syntax/#code">代码（code）</a> ，请在方括号内添加反引号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I love supporting the **[EFF](https://eff.org)**.</span><br><span class="line">This is the *[Markdown Guide](https://www.markdownguide.org)*.</span><br><span class="line">See the section on [`code`](#code).</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p>I love supporting the <strong><a href="https://eff.org/">EFF</a></strong>.<br>This is the <em><a href="https://www.markdownguide.org/">Markdown Guide</a></em>.<br>See the section on <a href="https://www.markdown.xyz/basic-syntax/#code"><code>code</code></a>.</p><h3 id="引用式链接"><a href="#引用式链接" class="headerlink" title="引用式链接"></a>引用式链接</h3><p>引用式（Reference-style）链接是一种特殊类型的链接，它使得 URL 在 Markdown 中更易于显示和阅读。引用式链接由两部分组成：一部分被放置在正文文本中；另一部分被放置在文档中的其它地方，以便于阅读。</p><h4 id="引用式链接第一部分的格式"><a href="#引用式链接第一部分的格式" class="headerlink" title="引用式链接第一部分的格式"></a>引用式链接第一部分的格式</h4><p>引用式链接的第一部分的格式由两组方括号组成。第一组方括号内放的是显示为链接的文本，第二组方括号内放的是一个标签，该标签用于指向您存放在文档中其它位置的链接。</p><p>尽管不是必须的，但你可以在第一组和第二组方括号之间添加一个空格。第二组方括号中的标签不区分大小写，并且可以包含字母、数字、空格或标点符号。</p><p>以下示例中，链接的第一部分是等效的：</p><ul><li><code>[hobbit-hole][1]</code></li><li><code>[hobbit-hole] [1]</code></li></ul><h4 id="引用式链接第二部分的格式"><a href="#引用式链接第二部分的格式" class="headerlink" title="引用式链接第二部分的格式"></a>引用式链接第二部分的格式</h4><p>引用式链接的第二部分可以包含以下属性：</p><ol><li>放在方括号内的标签，以及紧跟在方括号后面的一个冒号和至少一个空格（例如 <code>[label]: </code>）。</li><li>链接的 URL，可以选择将其括在尖括号内。</li><li>链接的标题（可有可无），可以将其括在双引号、单引号或括号内。</li></ol><p>以下示例中，链接的第二部分是等效的：</p><ul><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li></ul><p>可以将链接的第二部分放在 Markdown 文档中的任何位置。有些人将它们放在被引用的段落的后面，有些人将它们放在文档的末尾（类似尾注或脚注）。</p><h4 id="将两部分组合在一起使用的示例"><a href="#将两部分组合在一起使用的示例" class="headerlink" title="将两部分组合在一起使用的示例"></a>将两部分组合在一起使用的示例</h4><p>假设你将一个 URL 作为一个 <a href="https://www.markdown.xyz/basic-syntax/#links">标准 URL 链接</a> 添加到段落中，在 Markdown 中如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends</span><br><span class="line">of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to</span><br><span class="line">eat: it was a [hobbit-hole](https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;), and that means comfort.</span><br></pre></td></tr></table></figure><p>Though it may point to interesting additional information, the URL as displayed really doesn’t add much to the existing raw text other than making it harder to read. To fix that, you could format the URL like this instead:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends</span><br><span class="line">of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to</span><br><span class="line">eat: it was a [hobbit-hole][1], and that means comfort.</span><br><span class="line"></span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</span><br></pre></td></tr></table></figure><p>在上述两个实例中，渲染后的输出是相同的：</p><blockquote><p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">hobbit-hole</a>, and that means comfort.</p></blockquote><p>该链接的 HTML 为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&quot; title=&quot;Hobbit lifestyles&quot;&gt;hobbit-hole&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="链接（Link）的最佳使用实践"><a href="#链接（Link）的最佳使用实践" class="headerlink" title="链接（Link）的最佳使用实践"></a>链接（Link）的最佳使用实践</h3><p>不同的 Markdown 应用程序在处理 URL 中间的空格方面是不一样的。为了兼容起见，请尽量使用 <code>%20</code> （空格的编码形式）来代替空格。</p><table><thead><tr><th>✅ 这样做</th><th>❌ 不要这样做</th></tr></thead><tbody><tr><td><code>[link](https://www.example.com/my%20great%20page)</code></td><td><code>[link](https://www.example.com/my great page)</code></td></tr></tbody></table><h2 id="图片（Images）-1"><a href="#图片（Images）-1" class="headerlink" title="图片（Images）"></a>图片（Images）</h2><p>要添加图片，首先请添加感叹号（<code>!</code>），然后紧跟着是方括号，方括号中可添加替代文本（alt text，即图片显示失败后显示此文本），最后跟着圆括号，圆括号中添加图片资源的路径或 URL。你可以选择在圆括号中的 URL 之后添加标题（即 title 属性）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![The San Juan Mountains are beautiful!](/assets/images/san-juan-mountains.jpg &quot;San Juan Mountains&quot;)</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><img src="https://www.markdown.xyz/assets/images/san-juan-mountains.jpg" alt="The San Juan Mountains are beautiful!"></p><h3 id="带链接的图片"><a href="#带链接的图片" class="headerlink" title="带链接的图片"></a>带链接的图片</h3><p>要为图片添加链接，请先为图片的 Markdown 标记添加一个方括号，然后紧跟着一个圆括号，并在圆括号中添加链接地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[![An old rock in the desert](/assets/images/shiprock.jpg &quot;Shiprock, New Mexico by Beau Rogers&quot;)](https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv)</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><a href="https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv"><img src="https://www.markdown.xyz/assets/images/shiprock.jpg" alt="An old rock in the desert"></a></p><h2 id="转义字符（Escaping-Characters）"><a href="#转义字符（Escaping-Characters）" class="headerlink" title="转义字符（Escaping Characters）"></a>转义字符（Escaping Characters）</h2><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 (<code>\</code>) 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\* 如果没有开头的反斜杠字符的话，这一行将显示为无序列表。</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p>* 如果没有开头的反斜杠字符的话，这一行将显示为无序列表。</p><h3 id="可做转义的（英文）字符"><a href="#可做转义的（英文）字符" class="headerlink" title="可做转义的（英文）字符"></a>可做转义的（英文）字符</h3><p>以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。</p><table><thead><tr><th>字符</th><th>名称</th></tr></thead><tbody><tr><td>\</td><td>反斜杠（backslash）</td></tr><tr><td>&#96;</td><td>backtick (另请参见 <a href="https://www.markdown.xyz/basic-syntax/#escaping-backticks">在代码中转义反引号</a>)</td></tr><tr><td>*</td><td>星号（asterisk）</td></tr><tr><td>_</td><td>下划线（underscore）</td></tr><tr><td>{ }</td><td>花括号（curly braces）</td></tr><tr><td>[ ]</td><td>方括号（brackets）</td></tr><tr><td>&lt; &gt;</td><td>angle brackets</td></tr><tr><td>( )</td><td>圆括号或括号（parentheses）</td></tr><tr><td>#</td><td>井号（pound sign）</td></tr><tr><td>+</td><td>加号（plus sign）</td></tr><tr><td>-</td><td>减号（minus sign） (也叫连字符 hyphen)</td></tr><tr><td>.</td><td>句点（dot）</td></tr><tr><td>!</td><td>感叹号（exclamation mark）</td></tr><tr><td>|</td><td>管道符（pipe） (另请参见 <a href="https://www.markdown.xyz/extended-syntax/#escaping-pipe-characters-in-tables">在表格中转义管道符</a>)</td></tr></tbody></table><h2 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h2><p>大多 Markdown 应用程序允许你在 Markdown 格式文本中添加 HTML 标签。如果你喜欢某些 HTML 标签胜于 Markdown 语法的话，这将何有帮助。例如，某些人发现通过 HTML 标签添加图像更加容易。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p><p>如需使用 HTML，请将 HTML 标签添加到 Markdown 格式文本中即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h3 id="HTML-用法最佳实践"><a href="#HTML-用法最佳实践" class="headerlink" title="HTML 用法最佳实践"></a>HTML 用法最佳实践</h3><p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看 Markdown 应用程序的文档。某些应用程序只支持 HTML 标签的子集。</p><p>对于 HTML 的块级元素 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的基础用法</title>
      <link href="/2024/10/07/MySQL%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/10/07/MySQL%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL的基础用法-by-Karey"><a href="#MySQL的基础用法-by-Karey" class="headerlink" title="MySQL的基础用法 - by Karey"></a>MySQL的基础用法 - by Karey</h1><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h3><p>1.SQL语句可以单行或多行书写，以分号结尾。</p><p>2.SQL语句可以使用空格 &#x2F; 缩进来增强语句的可读性。</p><p>3.MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。</p><p>4.MySQL中的注释：</p><pre><code> - 单行注释：-- 注释内容 或 # 注释内容 - 多行注释：/* 注释内容 */</code></pre><hr><h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><table><thead><tr><th align="center">分类</th><th align="left">全称</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">DDL</td><td align="left">Data Defimition Language</td><td align="left">数据定义语言，用来定义数据库对象（数据库，表，字段）</td></tr><tr><td align="center">DML</td><td align="left">Data Manipulation Language</td><td align="left">数据操作语言，用来对数据库中的数据进行增删改</td></tr><tr><td align="center">DQL</td><td align="left">Data Query Language</td><td align="left">数据查询语言，用来查询数据库中表的记录</td></tr><tr><td align="center">DCL</td><td align="left">Data Contro Language</td><td align="left">数据控制语言，用来创建数据库用户，控制数据库的访问权限</td></tr></tbody></table><hr><h3 id="1-DDL-数据库操作"><a href="#1-DDL-数据库操作" class="headerlink" title="1-DDL-数据库操作"></a>1-DDL-数据库操作</h3><ul><li>查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><ul><li>查询当前所在数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure><ul><li>创建数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database [IF NOT EXIST] database_name [default charset字符集] [collate排序规则];</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">create database gxhqxx;</span><br></pre></td></tr></table></figure><ul><li>删除数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [IF NOT EXIST] database_name;</span><br></pre></td></tr></table></figure><ul><li>使用数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use database_name;</span><br></pre></td></tr></table></figure><ul><li>查询当前所在数据库中的某一张表的所有数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table_name;</span><br></pre></td></tr></table></figure><hr><h3 id="1-1-DDL-表操作-查询"><a href="#1-1-DDL-表操作-查询" class="headerlink" title="1.1-DDL-表操作-查询"></a>1.1-DDL-表操作-查询</h3><ul><li>查询当前数据库下的所有表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><ul><li>查询表结构</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">desc table_name;</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">mysql&gt; desc user;</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11)      | YES  |     | NULL    |       |</span><br><span class="line">| name  | int(11)      | YES  |     | NULL    |       |</span><br><span class="line">| age   | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><ul><li>查询指定表的 <strong>建表</strong> 语句</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">show create table table_name;</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">mysql&gt; show create table user;</span><br><span class="line">+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                                                                                 |</span><br><span class="line">+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| user  | CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) DEFAULT NULL COMMENT &#x27;用户标识&#x27;,</span><br><span class="line">  `name` int(11) DEFAULT NULL COMMENT &#x27;用户名&#x27;,</span><br><span class="line">  `age` varchar(255) DEFAULT NULL COMMENT &#x27;用户年龄&#x27;</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1            |</span><br><span class="line">+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><hr><h3 id="1-2-DDL-表操作-创建"><a href="#1-2-DDL-表操作-创建" class="headerlink" title="1.2-DDL-表操作-创建"></a>1.2-DDL-表操作-创建</h3><ul><li>创建一个简单表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create table table_name(</span><br><span class="line">字段1 字段2类型[comment 字段1注释],</span><br><span class="line">字段1 字段2类型[comment 字段1注释],</span><br><span class="line">字段1 字段2类型[comment 字段1注释],</span><br><span class="line">字段1 字段2类型[comment 字段1注释]</span><br><span class="line">)[comment 表注释];</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">create table user(</span><br><span class="line">id int comment &#x27;用户标识&#x27;,</span><br><span class="line">    name int comment &#x27;用户名&#x27;,</span><br><span class="line">    age varchar(255) comment &#x27;用户年龄&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>在MySQL建表语句中最后一个字段后面不需要添加逗号 “ ， ”</p><p><strong>[comment]为可加可不加字段</strong></p></blockquote><hr><h3 id="1-3-DDL-表操作-数据类型"><a href="#1-3-DDL-表操作-数据类型" class="headerlink" title="1.3-DDL-表操作-数据类型"></a>1.3-DDL-表操作-数据类型</h3><h4 id="1-3-1-数值类型"><a href="#1-3-1-数值类型" class="headerlink" title="1.3.1 - 数值类型"></a>1.3.1 - 数值类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 Bytes</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 Bytes</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 Bytes</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 Bytes</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 Bytes</td><td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 Bytes</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 浮点数值</td></tr><tr><td>DOUBLE</td><td>8 Bytes</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M（精度）和D（标度）的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h4 id="1-3-2-字符串类型"><a href="#1-3-2-字符串类型" class="headerlink" title="1.3.2 - 字符串类型"></a>1.3.2 - 字符串类型</h4><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><h4 id="1-3-3-日期和时间类型"><a href="#1-3-3-日期和时间类型" class="headerlink" title="1.3.3 - 日期和时间类型"></a>1.3.3 - 日期和时间类型</h4><table><thead><tr><th>类型</th><th>大小 ( bytes)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01&#x2F;9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>‘-838:59:59’&#x2F;‘838:59:59’</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901&#x2F;2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td><td>YYYY-MM-DD hh:mm:ss</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-19 03:14:07’ UTC结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>YYYY-MM-DD hh:mm:ss</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><hr><h3 id="1-4-DDL-表操作-修改"><a href="#1-4-DDL-表操作-修改" class="headerlink" title="1.4-DDL-表操作-修改"></a>1.4-DDL-表操作-修改</h3><ul><li>添加字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name add 字段名 类型（长度） [comment 注释] [约束];</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">alter table emp add nickname varchar(20);</span><br></pre></td></tr></table></figure><ul><li>修改数据类型</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name modify 字段名 新数据类型(长度);</span><br></pre></td></tr></table></figure><ul><li>修改字段名和字段类型</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name change 旧字段名 新字段名 类型(长度) [comment注释] [约束];</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">alter table emp change nickname username varchar(30) commnet &#x27;昵称&#x27;;</span><br></pre></td></tr></table></figure><ul><li>删除字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name drop 字段名;</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">alter table emp drop nickname;</span><br></pre></td></tr></table></figure><ul><li>修改表名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name rename to new_table_name;</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">alter table emp rename to new_emp;</span><br></pre></td></tr></table></figure><ul><li>删除表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">drop [if exists] table_name ;</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">drop emp;</span><br></pre></td></tr></table></figure><ul><li>删除指定表，并重新创建该表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">truncate table table_name;</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">truncate table emp;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在删除表时，表中的全部数据也会被删除。</p></blockquote><hr><h3 id="1-5-DDL-语法总结"><a href="#1-5-DDL-语法总结" class="headerlink" title="1.5-DDL-语法总结"></a>1.5-DDL-语法总结</h3><ul><li>DDL-数据库操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">show databases;[查看所有数据库]</span><br><span class="line">create databases database_name;[创建一个数据库]</span><br><span class="line">use database_name;[使用一个数据库]</span><br><span class="line">select database();[查看当前所处的数据库]</span><br><span class="line">drop database database_name;[删除一个数据库]</span><br></pre></td></tr></table></figure><ul><li>DDL-表操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show tables;[查看当前数据库下的所有数据表]</span><br><span class="line">create table table_name;[创建一个表]</span><br><span class="line">desc table_name;[查看表结构]</span><br><span class="line">show create table table_name;[查看表创建使用的语句]</span><br><span class="line">alter table table_name add / modify / change / drop / rename to;</span><br><span class="line">[修改一张表。 add:添加一个字段 modify:修改数据类型 change:修改字段名和字段类型 drop:删除一个字段 rename to:修改一张表的表名]</span><br><span class="line">drop table table_name;[删除一张表]</span><br></pre></td></tr></table></figure><hr><h3 id="2-DML-添加数据"><a href="#2-DML-添加数据" class="headerlink" title="2-DML-添加数据"></a>2-DML-添加数据</h3><blockquote><p>小提示</p><p>》》插入数据 （insert）</p><p>》》修改数据（update）</p><p>》》删除数据（delete）</p></blockquote><ul><li>给指定字段添加数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table_name(字段名1,字段名2,...) values(值1，值2,...);</span><br></pre></td></tr></table></figure><ul><li>给全部字段添加数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table_name values (值1，值2,...);</span><br></pre></td></tr></table></figure><ul><li>批量添加数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into table_name (字段1，字段2，...) values (值1,值2,...),(值1,值2,...),(值1,值2,...);</span><br><span class="line">insert into table_name values(值1,值2,...),</span><br><span class="line"> (值1,值2,...),</span><br><span class="line"> (值1,值2,...);</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li>插入数据时，指定的字段顺序要与值的循序是一一对应的。</li><li><strong>字符串和日期类型数据</strong>应该<strong>包含在引号中</strong>。</li><li>插入的数据大小，应该在字段的规定范围内</li></ul></blockquote><hr><h3 id="2-1-DML-修改数据"><a href="#2-1-DML-修改数据" class="headerlink" title="2.1-DML-修改数据"></a>2.1-DML-修改数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update table_name set 字段名1=值1，字段名2=值2,... [where 条件];</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">update emp set name = &#x27;xiaozhang&#x27;,age = &#x27;21&#x27; where id = 1;</span><br></pre></td></tr></table></figure><blockquote><p>注意：修改语句的调前可有可无，如果没有条件，那么将会修改整张表的所有数据。</p></blockquote><hr><h3 id="2-2-DML-删除数据"><a href="#2-2-DML-删除数据" class="headerlink" title="2.2-DML-删除数据"></a>2.2-DML-删除数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delete from table_name [where 条件];</span><br><span class="line"></span><br><span class="line">删除单一数据示例：</span><br><span class="line">delete from emp where name = &#x27;xiaozhang&#x27;;</span><br><span class="line"></span><br><span class="line">删除表中的所有数据：</span><br><span class="line">delete from emp;</span><br></pre></td></tr></table></figure><blockquote><p>注意：delete语句的条件可有可无，如果没有条件，那么将会删除整张表的所有数据。</p><p>​    delete语句不能删除某一个字段的值（可以用update）。</p></blockquote><hr><h3 id="2-3-DML-语法总结"><a href="#2-3-DML-语法总结" class="headerlink" title="2.3-DML-语法总结"></a>2.3-DML-语法总结</h3><ul><li>添加数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table_name (字段1，字段2，...) values (值1，值2,...) [,(值1，值2，...)...];</span><br></pre></td></tr></table></figure><ul><li>修改数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update table_name set 字段1 = 值1 ， 字段2 = 值2 [where 条件];</span><br></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from table_name [where 条件];</span><br></pre></td></tr></table></figure><hr><h3 id="3-DQL-数据库查询操作基本语法"><a href="#3-DQL-数据库查询操作基本语法" class="headerlink" title="3-DQL-数据库查询操作基本语法"></a>3-DQL-数据库查询操作基本语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">字段列表</span><br><span class="line">from </span><br><span class="line">表名列表</span><br><span class="line">where</span><br><span class="line">条件列表</span><br><span class="line">group by</span><br><span class="line">分组字段列表</span><br><span class="line">having</span><br><span class="line">分组后条件列表</span><br><span class="line">order by</span><br><span class="line">排序字段列表</span><br><span class="line">limit</span><br><span class="line">分页参数</span><br></pre></td></tr></table></figure><hr><h3 id="3-2-DQL-基本查询"><a href="#3-2-DQL-基本查询" class="headerlink" title="3.2-DQL-基本查询"></a>3.2-DQL-基本查询</h3><ul><li>查询多个字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select 字段1，字段2，字段3... from table_name;</span><br><span class="line"></span><br><span class="line">select * from table_name;</span><br></pre></td></tr></table></figure><ul><li>设置别名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段1 [as 别名1], 字段2[as 别名2] ... from table_name;</span><br></pre></td></tr></table></figure><ul><li>去除重复记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct 字段列表 from table_name;</span><br></pre></td></tr></table></figure><hr><h3 id="3-3-DQL-条件查询"><a href="#3-3-DQL-条件查询" class="headerlink" title="3.3-DQL-条件查询"></a>3.3-DQL-条件查询</h3><ul><li>语法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> table_name <span class="keyword">where</span> 条件列表;</span><br></pre></td></tr></table></figure><ul><li>条件</li></ul><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !&#x3D;</td><td>不等于</td></tr><tr><td>between … and …</td><td>在某个范围之内（含最小，最大值）</td></tr><tr><td>in(…)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>like 占位符</td><td>模糊匹配（_匹配单个字符，%匹配任意字符）</td></tr><tr><td>is null</td><td>是NULL</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>and 或者 &amp;&amp;</td><td>并且（多个条件同时成立）</td></tr><tr><td>or 或者 ||</td><td>或者（多个条件任意一个成立）</td></tr><tr><td>not 或者 !</td><td>非，不是</td></tr></tbody></table><h3 id="3-4-DQL-排序查询"><a href="#3-4-DQL-排序查询" class="headerlink" title="3.4-DQL-排序查询"></a>3.4-DQL-排序查询</h3><ul><li>在查询的末尾添加<code>asc</code>或者<code>desc</code>对想要查询的数据进行排序选项，asc为从小到大，desc为大到小排序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 按照酒店住客评分最高到最低的酒店进行排序（大到小）</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `comments` <span class="keyword">ORDER</span> <span class="keyword">BY</span> 住客评分 <span class="keyword">desc</span> , 日期 <span class="keyword">asc</span></span><br><span class="line"></span><br><span class="line"># 按照酒店住客评分最高到最低的酒店进行排序（大到小），日期最新的在前面（大到小）</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `comments`  <span class="keyword">ORDER</span> <span class="keyword">BY</span> 住客评分 <span class="keyword">desc</span> , 日期 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h3 id="3-5-DQL-模糊查询"><a href="#3-5-DQL-模糊查询" class="headerlink" title="3.5-DQL-模糊查询"></a>3.5-DQL-模糊查询</h3><p>在 SQL 中，DQL（Data Query Language）是用于查询数据的子语言，而模糊查询是一种常见的查询方式，主要通过 <code>LIKE</code> 操作符和通配符来查找符合部分条件的数据。</p><hr><h5 id="模糊查询的语法"><a href="#模糊查询的语法" class="headerlink" title="模糊查询的语法"></a>模糊查询的语法</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名</span><br><span class="line"><span class="keyword">FROM</span> 表名</span><br><span class="line"><span class="keyword">WHERE</span> 列名 <span class="keyword">LIKE</span> 模式;</span><br></pre></td></tr></table></figure><ul><li><code>LIKE</code> 是模糊匹配的关键字。</li><li><strong>模式</strong> 使用通配符来表示模糊查询的规则。</li></ul><hr><h5 id="常用的通配符"><a href="#常用的通配符" class="headerlink" title="常用的通配符"></a>常用的通配符</h5><ol><li><p><code>%</code></p><p>：表示任意长度的任意字符（包括空字符）。</p><ul><li>例如：<code>&#39;a%&#39;</code> 表示以 <code>a</code> 开头的任意字符串。</li></ul></li><li><p><code>_</code></p><p>：表示单个任意字符。</p><ul><li>例如：<code>&#39;a_&#39;</code> 表示以 <code>a</code> 开头且后面跟着一个任意字符的字符串。</li></ul></li><li><p><code>[]</code></p><p>：表示匹配括号中任意一个字符（仅适用于某些数据库，如 SQL Server）。</p><ul><li>例如：<code>&#39;[a-c]%&#39;</code> 表示以 <code>a</code>、<code>b</code> 或 <code>c</code> 开头的任意字符串。</li></ul></li><li><p><code>[^]</code></p><p>：表示不匹配括号中的任何一个字符（仅适用于某些数据库）。</p><ul><li>例如：<code>&#39;[^a-c]%&#39;</code> 表示不以 <code>a</code>、<code>b</code> 或 <code>c</code> 开头的任意字符串。</li></ul></li></ol><hr><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><ul><li>示例 1：查找以 “a” 开头的名字</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> 用户表</span><br><span class="line"><span class="keyword">WHERE</span> 姓名 <span class="keyword">LIKE</span> <span class="string">&#x27;a%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>示例 2：查找包含 “张” 的名字</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> 用户表</span><br><span class="line"><span class="keyword">WHERE</span> 姓名 <span class="keyword">LIKE</span> <span class="string">&#x27;%张%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>示例 3：查找名字长度为 3 的记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> 用户表</span><br><span class="line"><span class="keyword">WHERE</span> 姓名 <span class="keyword">LIKE</span> <span class="string">&#x27;___&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>示例 4：查找以 “李” 开头，且第二个字符是 “小” 的名字</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> 用户表</span><br><span class="line"><span class="keyword">WHERE</span> 姓名 <span class="keyword">LIKE</span> <span class="string">&#x27;李小%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>示例 5：查找不包含 “测试” 的记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> 用户表</span><br><span class="line"><span class="keyword">WHERE</span> 姓名 <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%测试%&#x27;</span>;</span><br></pre></td></tr></table></figure><hr><h5 id="实用场景"><a href="#实用场景" class="headerlink" title="实用场景"></a>实用场景</h5><ol><li><strong>搜索功能</strong>：用户模糊输入关键字，返回匹配内容。</li><li><strong>日志查询</strong>：从日志表中查找符合特定时间或格式的记录。</li><li><strong>内容过滤</strong>：查找包含敏感词的文本记录。</li></ol><h3 id="3-6-DQL-分组查询"><a href="#3-6-DQL-分组查询" class="headerlink" title="3.6-DQL-分组查询"></a>3.6-DQL-分组查询</h3><h5 id="分组查询简介"><a href="#分组查询简介" class="headerlink" title="分组查询简介"></a>分组查询简介</h5><p>分组查询（<code>GROUP BY</code>）用于将查询结果按照某一列或多列的值进行分组，然后对每个分组进行聚合操作（如计数、求和、求平均值等）。通常与聚合函数（如 <code>COUNT</code>、<code>SUM</code>、<code>AVG</code>、<code>MAX</code>、<code>MIN</code>）一起使用。</p><hr><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列<span class="number">1</span>, 聚合函数(列<span class="number">2</span>)</span><br><span class="line"><span class="keyword">FROM</span> 表名</span><br><span class="line"><span class="keyword">WHERE</span> 条件</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 列<span class="number">1</span></span><br><span class="line"><span class="keyword">HAVING</span> 条件</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>**<code>GROUP BY 列1</code>**：将查询结果按照列1的值进行分组。</li><li><strong>聚合函数</strong>：对每个分组进行汇总操作。</li><li><strong><code>HAVING</code> 子句</strong>：用于过滤分组后的结果（类似于 <code>WHERE</code>，但 <code>WHERE</code> 作用于分组前的行）。</li><li>**<code>ORDER BY</code>**：对最终结果进行排序。</li></ol><hr><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><p>示例 1：按部门分组统计员工人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 部门, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> 员工数量</span><br><span class="line"><span class="keyword">FROM</span> 员工表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 部门;</span><br></pre></td></tr></table></figure><p><strong>结果</strong>（假设表中有以下数据）：</p><table><thead><tr><th>部门</th><th>员工数量</th></tr></thead><tbody><tr><td>技术部</td><td>10</td></tr><tr><td>财务部</td><td>5</td></tr></tbody></table><hr><p>示例 2：计算每个部门的平均工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 部门, <span class="built_in">AVG</span>(工资) <span class="keyword">AS</span> 平均工资</span><br><span class="line"><span class="keyword">FROM</span> 员工表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 部门;</span><br></pre></td></tr></table></figure><hr><p>示例 3：查找员工总数大于 5 的部门</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 部门, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> 员工数量</span><br><span class="line"><span class="keyword">FROM</span> 员工表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 部门</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><hr><p>示例 4：按产品分组，统计每种产品的销售总额，并按总额降序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 产品名称, <span class="built_in">SUM</span>(销售额) <span class="keyword">AS</span> 总销售额</span><br><span class="line"><span class="keyword">FROM</span> 销售表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 产品名称</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 总销售额 <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><hr><p>示例 5：多列分组</p><p>按部门和职位统计每个职位的人数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 部门, 职位, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> 人数</span><br><span class="line"><span class="keyword">FROM</span> 员工表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 部门, 职位;</span><br></pre></td></tr></table></figure><hr><p>注意事项</p><ol><li><p><strong><code>GROUP BY</code> 中的列必须出现在 <code>SELECT</code> 中</strong>，除非它们是聚合函数的一部分。</p></li><li><p><code>WHERE</code> 和 <code>HAVING</code> 的区别</p><p>：</p><ul><li><code>WHERE</code> 作用于分组前的原始数据。</li><li><code>HAVING</code> 作用于分组后的结果。</li></ul></li><li><p>如果使用 <code>ORDER BY</code> 排序，必须作用于最终查询结果。</p></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> MySQL基础用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
